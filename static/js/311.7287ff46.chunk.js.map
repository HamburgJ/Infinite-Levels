{"version":3,"file":"static/js/311.7287ff46.chunk.js","mappings":"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","sources":["components/UI/LockedBox.js","components/Levels/Level9.js","components/Storage/Scale.js","components/UI/AchievementShrine.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","components/UI/NestedAccordion.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { FaLock, FaLockOpen, FaBox } from 'react-icons/fa';\r\n\r\nconst BoxContainer = styled.div`\r\n  text-align: center;\r\n  margin: 2rem 0;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  display: inline-block;\r\n  cursor: ${props => props.hasKey ? 'pointer' : 'not-allowed'};\r\n  font-size: 3rem;\r\n  position: relative;\r\n  opacity: ${props => props.isOpen ? 0.7 : 1};\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: ${props => props.hasKey ? 'scale(1.1)' : 'none'};\r\n  }\r\n`;\r\n\r\nconst Lock = styled.div`\r\n  position: absolute;\r\n  top: -15px;\r\n  right: -15px;\r\n  font-size: 2rem;\r\n  color: gold;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background: #f9f9f9;\r\n  display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst LockedBox = ({ children, requiredKey = 'key-1' }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isContentVisible, setIsContentVisible] = useState(false);\r\n  const inventory = useSelector(state => state.inventory.equippedItem);\r\n  const hasKey = inventory && inventory[requiredKey];\r\n\r\n  const handleClick = () => {\r\n    if (hasKey && !isOpen) {\r\n      setIsOpen(true);\r\n      setTimeout(() => setIsContentVisible(true), 500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <Box hasKey={hasKey} isOpen={isOpen} onClick={handleClick}>\r\n        <FaBox />\r\n        <Lock>\r\n          {isOpen ? <FaLockOpen /> : <FaLock />}\r\n        </Lock>\r\n      </Box>\r\n      <Content isVisible={isContentVisible}>\r\n        {children}\r\n      </Content>\r\n    </BoxContainer>\r\n  );\r\n};\r\n\r\nexport default LockedBox; ","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentLevel } from '../../store';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport NestedAccordion from '../UI/NestedAccordion';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport { LevelContainer, StyledCard, CenteredContainer } from './styles/CommonLevelStyles';\r\nimport { FaTrophy } from 'react-icons/fa';\r\nimport Scale from '../Storage/Scale';\r\nimport HighlightableText from '../UI/HighlightableText';\r\nimport LockedBox from '../UI/LockedBox';\r\nimport AchievementShrine from '../UI/AchievementShrine';\r\nconst Level9 = () => {\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard>\r\n        <Card.Body>\r\n          <Card.Title><HighlightableText size=\"large\" text=\"Secrets\"/></Card.Title>\r\n          <Card.Text>\r\n            <HighlightableText text=\"Congratulations. Reaching this level means that you've mastered the basics of this game. However, there\r\n            another secret ability which will unlock a truly magnificently infinite amount of levels!\"/>\r\n            </Card.Text>\r\n            <Card.Text>\r\n            <HighlightableText text=\"The secret lays inside the box below.  A hint to \r\n            the secret place will be revealed here once you've completed x achievements!\"/>\r\n            </Card.Text>\r\n            <AchievementShrine requiredCount={30}>\r\n              <CenteredContainer>\r\n              The key to the box is stored in an extremely secret place! The information that will lead you to the key is hidden in a mysterious level which is thought by some not to exist.\r\n                A level which equates to the 0th level yet its opposite. A level which is infinitely close yet infinitely far. \r\n              </CenteredContainer>\r\n              <LockedBox>\r\n              <Card.Text>\r\n                <HighlightableText text=\"Like you know, buttons can be created from anywhere.\r\n                But did you know that these buttons can be collected into your inventory? Just highlight some text to create a button, and \r\n                right click to pick it up! You can carry it around with you, and click it to travel to that level!\"/>\r\n              </Card.Text>\r\n              </LockedBox>\r\n            </AchievementShrine>\r\n          \r\n\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level9; ","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToScale, removeFromScale, addCardToBox } from '../../store/slices/inventorySlice';\r\nimport { unequipItem, equipItem } from '../../store/slices/inventorySlice';\r\nimport ConfirmationModal from '../UI/ConfirmationModal';\r\nimport ItemRenderer from '../Items/ItemRenderer';\r\nimport cards from '../../data/cards';\r\nimport { setCurrentLevel } from '../../store/slices/gameSlice';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\n\r\n\r\nconst EmptySlot = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  border: 3px dashed #666;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  background: rgba(255, 255, 255, 0.4);\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ScaleContainer = styled.div`\r\n  width: 280px;\r\n  height: 380px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: linear-gradient(145deg, #2c3e50, #34495e);\r\n  border-radius: 15px;\r\n  padding: 20px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst DigitalScreen = styled.div`\r\n  width: 240px;\r\n  height: 40px;\r\n  background: #1a1a1a;\r\n  border-radius: 8px;\r\n  margin-top: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding: 0 15px;\r\n  font-family: 'Digital', monospace;\r\n  color: #00ff00;\r\n  font-size: 24px;\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background: #2a2a2a;\r\n  }\r\n`;\r\n\r\nconst WeighingPlatform = styled.div`\r\n  width: 240px;\r\n  height: 240px;\r\n  background: linear-gradient(135deg, #95a5a6, #bdc3c7);\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  width: 70px;\r\n  height: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\n\r\nconst Scale = () => {\r\n  const dispatch = useDispatch();\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const scaleItem = useSelector(state => state.inventory.scale);\r\n  const money = useSelector(state => state.inventory.money);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const { unlockAchievement } = useAchievements();\r\n\r\n  const getCardBoxWeight = (box) => {\r\n    let weight = 1; // weight of box itself\r\n    const WEIGHTS={\r\n        'normal': 1,\r\n        'gold-shiny': 10000,\r\n        'diamond': 999999999,\r\n        'dark-holographic': -0.1\r\n    }\r\n    for (const cardId in box.collectedCards) {\r\n      const card = cards[cardId];\r\n      weight += WEIGHTS[card.rarity];\r\n    }\r\n    return weight;\r\n  }\r\n\r\n  const getWalletWeight = (money) => {\r\n    // Base weight of empty wallet in grams\r\n    let weight = 150;\r\n    \r\n    // Add weight for each piece of money\r\n    money.forEach(item => {\r\n      if (item.value >= 500) {\r\n        // Paper money weighs 1g each\r\n        weight += 1;\r\n      } else {\r\n        // Coins have different weights\r\n        switch (item.value) {\r\n          case 25: weight += 6; break;  // Quarter: 5.67g\r\n          case 10: weight += 2; break; // Dime: 2.268g\r\n          case 5: weight += 5; break;      // Nickel: 5g\r\n          case 1: weight += 3; break;    // Penny: 2.5g\r\n          default: weight += 0;\r\n        }\r\n      }\r\n    });\r\n    \r\n    return weight;\r\n  };\r\n\r\n  const getWeight = () => {\r\n    switch (scaleItem?.type) {\r\n      case 'wallet':\r\n        return getWalletWeight(money);\r\n      case 'card-box': \r\n        return getCardBoxWeight(scaleItem);\r\n      case 'card': return 10;\r\n      case 'diamond': return 1;\r\n      case 'black-hole': return 1000;\r\n      case 'encyclopedia': return 50;\r\n      case 'flower':\r\n        return scaleItem.weight;\r\n      default: return 0;\r\n    }\r\n  };\r\n\r\n  const handleScaleClick = () => {\r\n    if (scaleItem && !equippedItem) {\r\n      // Pick up item from scale\r\n      if (scaleItem.type === 'card-box') {\r\n        // Preserve collected cards when moving card box\r\n        const boxWithCards = {\r\n          ...scaleItem,\r\n          collectedCards: scaleItem.collectedCards || {}\r\n        };\r\n        dispatch(equipItem(boxWithCards));\r\n      } else {\r\n        dispatch(equipItem(scaleItem));\r\n      }\r\n      dispatch(removeFromScale());\r\n    } else if (equippedItem && !scaleItem) {\r\n      // Place equipped item on scale\r\n      dispatch(addToScale(equippedItem));\r\n      dispatch(unequipItem());\r\n    } else if (equippedItem && scaleItem) {\r\n      // Handle card and card box interactions\r\n      if (equippedItem.type === 'card' && scaleItem.type === 'card-box') {\r\n        dispatch(addCardToBox({ cardId: equippedItem.id }));\r\n        dispatch(unequipItem());\r\n      } else if (equippedItem.type === 'card-box' && scaleItem.type === 'card') {\r\n        const boxWithCard = {\r\n          ...equippedItem,\r\n          collectedCards: { \r\n            ...equippedItem.collectedCards,\r\n            [scaleItem.id]: true \r\n          }\r\n        };\r\n        dispatch(removeFromScale());\r\n        dispatch(equipItem(boxWithCard));\r\n      } else {\r\n        // Show swap confirmation for non-card interactions\r\n        setShowConfirmModal(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleConfirmSwap = () => {\r\n    const oldScaleItem = scaleItem;\r\n    dispatch(addToScale(equippedItem));\r\n    dispatch(equipItem(oldScaleItem));\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const handleScreenClick = (e) => {\r\n    e.stopPropagation(); // Prevent triggering the ScaleContainer click\r\n    const weight = getWeight();\r\n    dispatch(setCurrentLevel({real: Math.floor(weight), imag: 0}));\r\n    unlockAchievement('SCALE_TRAVEL');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScaleContainer onClick={handleScaleClick}>\r\n        <WeighingPlatform>\r\n          <ItemContainer>\r\n            {scaleItem ? (\r\n              <ItemRenderer item={scaleItem} />\r\n            ) : (\r\n              <EmptySlot>Empty</EmptySlot>\r\n            )}\r\n          </ItemContainer>\r\n        </WeighingPlatform>\r\n        <DigitalScreen onClick={handleScreenClick}>\r\n          {getWeight().toFixed(2)}g\r\n        </DigitalScreen>\r\n      </ScaleContainer>\r\n\r\n      <ConfirmationModal\r\n        show={showConfirmModal}\r\n        onConfirm={handleConfirmSwap}\r\n        onCancel={() => setShowConfirmModal(false)}\r\n        message=\"Swap the equipped item with the item on the scale?\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scale; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card } from 'react-bootstrap';\r\nimport allAchievements from '../../data/achievements';\r\nimport LevelButton from './LevelButton';\r\nimport debugConfig from '../../config/debug';\r\n\r\nconst ShrineContainer = styled.div`\r\n  width: 100%;\r\n  margin: 2rem auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(10px);\r\n  border: 2px solid rgba(0, 0, 0, 0.1);\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n  \r\n  ${props => props.isComplete && `\r\n    background: rgba(255, 215, 0, 0.1);\r\n    border-color: gold;\r\n  `}\r\n`;\r\n\r\nconst ShrineSymbol = styled.div`\r\n  font-size: 3rem;\r\n  margin: 1rem 0;\r\n  color: ${props => props.isComplete ? 'gold' : '#666'};\r\n`;\r\n\r\nconst SecretContent = styled.div`\r\n  max-height: ${props => props.show ? '500px' : '0'};\r\n  opacity: ${props => props.show ? '1' : '0'};\r\n  overflow: hidden;\r\n  transition: all 0.5s ease;\r\n`;\r\n\r\nconst AchievementShrine = ({ requiredCount = 5, children }) => {\r\n  const unlockedAchievements = useSelector(state => state.achievements.achievements);\r\n  const achievementCount = Object.keys(unlockedAchievements).length;\r\n  const totalAchievements = Object.keys(allAchievements).length;\r\n  const hasRequiredAchievements = debugConfig.isDebugMode && debugConfig.debugFeatures.unlockAllShrines ? \r\n    true : achievementCount >= requiredCount;\r\n  const hasAllAchievements = achievementCount === totalAchievements;\r\n\r\n  return (\r\n    <ShrineContainer>\r\n      <StyledCard isComplete={hasAllAchievements}>\r\n        <Card.Body>\r\n          <ShrineSymbol isComplete={hasRequiredAchievements}>\r\n            {hasRequiredAchievements ? '🔓' : '🔒'}\r\n          </ShrineSymbol>\r\n          \r\n          <Card.Title>Achievement Shrine</Card.Title>\r\n          <Card.Title>{hasRequiredAchievements ? \"UNLOCKED\" : \"LOCKED\" + {achievementCount}/{requiredCount}}</Card.Title>\r\n          \r\n          {!hasRequiredAchievements ? (\r\n            <Card.Text>\r\n              Return when you have unlocked at least {requiredCount} achievements...\r\n            </Card.Text>\r\n            ) : (\r\n                <Card.Text>\r\n                  {children}\r\n                </Card.Text>\r\n            )}\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </ShrineContainer>\r\n  );\r\n};\r\n\r\nexport default AchievementShrine; ","\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null || onSelect(eventKeyPassed, e);\n    onClick == null || onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport LevelButton from './LevelButton';\r\nimport HighlightableText from './HighlightableText';\r\n\r\nconst AccordionWrapper = styled.div`\r\n  margin: 0.5rem 0;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst StyledAccordion = styled(Accordion)`\r\n  .accordion-button:not(.collapsed) {\r\n    color: inherit;\r\n    background-color: rgba(0, 0, 0, 0.03);\r\n    box-shadow: none;\r\n  }\r\n\r\n  .accordion-button:focus {\r\n    box-shadow: none;\r\n    border-color: rgba(0, 0, 0, 0.125);\r\n  }\r\n\r\n  .accordion-button::after {\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n  }\r\n\r\n  .accordion-button:not(.collapsed)::after {\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n  }\r\n`;\r\n\r\nconst NestedAccordion = ({ data, depth = 0, path = '' }) => {\r\n  if (Array.isArray(data)) {\r\n    if (data.length === 0) {\r\n      return (\r\n        <TextWrapper>\r\n          <HighlightableText text=\"Keep searching...\" />\r\n        </TextWrapper>\r\n      );\r\n    }\r\n\r\n    if (typeof data[0] === 'string' || React.isValidElement(data[0])) {\r\n      return (\r\n        <TextWrapper>\r\n          {typeof data[0] === 'string' ? (\r\n            <HighlightableText text={data.join(' ')} />\r\n          ) : (\r\n            data[0]\r\n          )}\r\n        </TextWrapper>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <StyledAccordion alwaysOpen>\r\n        {data.map((item, index) => {\r\n          const currentPath = `${path}-${index}`;\r\n          return (\r\n            <Accordion.Item key={currentPath} eventKey={currentPath}>\r\n              <Accordion.Header />\r\n              <Accordion.Body>\r\n                <NestedAccordion data={item} depth={depth + 1} path={currentPath} />\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          );\r\n        })}\r\n      </StyledAccordion>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default NestedAccordion; "],"names":["BoxContainer","styled","div","Box","props","hasKey","isOpen","Lock","Content","isVisible","_ref","children","requiredKey","setIsOpen","useState","isContentVisible","setIsContentVisible","inventory","useSelector","state","equippedItem","_jsxs","onClick","handleClick","setTimeout","_jsx","FaBox","FaLockOpen","FaLock","Level9","LevelContainer","StyledCard","Card","Body","Title","HighlightableText","size","text","Text","AchievementShrine","requiredCount","CenteredContainer","LockedBox","EmptySlot","ScaleContainer","DigitalScreen","WeighingPlatform","ItemContainer","Scale","dispatch","useDispatch","scaleItem","scale","money","showConfirmModal","setShowConfirmModal","unlockAchievement","useAchievements","getWeight","type","weight","forEach","item","value","getWalletWeight","box","WEIGHTS","cardId","collectedCards","cards","rarity","getCardBoxWeight","_Fragment","handleScaleClick","boxWithCards","equipItem","removeFromScale","addToScale","unequipItem","addCardToBox","id","boxWithCard","ItemRenderer","e","stopPropagation","setCurrentLevel","real","Math","floor","imag","toFixed","ConfirmationModal","show","onConfirm","handleConfirmSwap","oldScaleItem","onCancel","message","ShrineContainer","isComplete","ShrineSymbol","unlockedAchievements","achievements","achievementCount","Object","keys","length","totalAchievements","allAchievements","hasRequiredAchievements","debugConfig","isDebugMode","debugFeatures","unlockAllShrines","hasAllAchievements","isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","React","displayName","AccordionCollapse","ref","as","Component","bsPrefix","className","useContext","AccordionContext","useBootstrapPrefix","Collapse","in","classNames","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","accordionOnClick","onSelect","alwaysOpen","eventKeyPassed","filter","k","useAccordionButton","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","Accordion","activeKey","flush","controlledProps","useUncontrolled","prefix","assign","Button","Item","Header","TextWrapper","StyledAccordion","NestedAccordion","data","depth","path","join","map","index","currentPath"],"sourceRoot":""}