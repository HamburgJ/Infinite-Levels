{"version":3,"file":"static/js/3875.cb439821.chunk.js","mappings":"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","sources":["components/Levels/Level8.js","components/Storage/Scale.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","components/UI/NestedAccordion.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentLevel } from '../../store';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport NestedAccordion from '../UI/NestedAccordion';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport { LevelContainer, StyledCard, CenteredContainer } from './styles/CommonLevelStyles';\r\nimport { FaTrophy } from 'react-icons/fa';\r\nimport Scale from '../Storage/Scale';\r\nimport HighlightableText from '../UI/HighlightableText';\r\n\r\nconst Level8 = () => {\r\n\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard>\r\n        <Card.Body>\r\n          <Card.Title><HighlightableText size=\"large\" text=\"Advanced Traveling Techniques\"/></Card.Title>\r\n          <Card.Text>\r\n            <HighlightableText text=\"By now, you should know about buttons hidden in plain sight. If not, look at Level 7 again! But did you know that buttons can be created from anywhere?\"/>\r\n            </Card.Text>\r\n          \r\n          <Card.Text>\r\n            <HighlightableText text=\"Just find some text which has a number in it, highlight, and click it to travel to that level!\"/>\r\n            <HighlightableText text=\"For example, this text has a 10 in it! That's one of the levels you've already been to!\"/>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level8; ","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToScale, removeFromScale, addCardToBox, addToWallet } from '../../store/slices/inventorySlice';\r\nimport { unequipItem, equipItem } from '../../store/slices/inventorySlice';\r\nimport ConfirmationModal from '../UI/ConfirmationModal';\r\nimport ItemRenderer from '../Items/ItemRenderer';\r\nimport cards from '../../data/cards';\r\nimport { setCurrentLevel } from '../../store/slices/gameSlice';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport LevelButton from '../UI/LevelButton';\r\n\r\n\r\nconst EmptySlot = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  border: 3px dashed #666;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  background: rgba(255, 255, 255, 0.4);\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n`;\r\n\r\nconst ScaleContainer = styled.div`\r\n  width: 280px;\r\n  height: 380px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: linear-gradient(145deg, #2c3e50, #34495e);\r\n  border-radius: 15px;\r\n  padding: 20px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  justify-content: space-between;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n`;\r\n\r\nconst WeighingPlatform = styled.div`\r\n  width: 240px;\r\n  height: 240px;\r\n  background: linear-gradient(135deg, #95a5a6, #bdc3c7);\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  cursor: ${props => props.canInteract ? 'pointer' : 'default'};\r\n  transition: transform 0.2s ease;\r\n\r\n  &:hover {\r\n    transform: ${props => props.canInteract ? 'scale(1.02)' : 'none'};\r\n  }\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\n\r\nconst Scale = () => {\r\n  const dispatch = useDispatch();\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const scaleItem = useSelector(state => state.inventory.scale);\r\n  const walletDenominations = useSelector(state => state.inventory.walletDenominations);\r\n  const collectedCards = useSelector(state => state.inventory.collectedCards);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const { unlockAchievement } = useAchievements();\r\n\r\n  const ITEM_WEIGHTS = {\r\n    // Base items\r\n    'key': 50,\r\n    'levelButton': 42,\r\n    'book': 300,\r\n    'wallet': 150, // Base weight, contents added separately\r\n    'encyclopedia': 500,\r\n    'card-box': 200, // Base weight, contents added separately\r\n    'card': {\r\n      'normal': 10,\r\n      'gold-shiny': 50,\r\n      'diamond': 100,\r\n      'dark-holographic': 5\r\n    },\r\n    'currency': {\r\n      1: 2.5,    // Penny\r\n      5: 5,      // Nickel\r\n      10: 2.268, // Dime\r\n      25: 5.67,  // Quarter\r\n      500: 1,    // $5 bill\r\n      1000: 1,   // $10 bill\r\n      2000: 1,   // $20 bill\r\n      5000: 1,   // $50 bill\r\n      10000: 1   // $100 bill\r\n    },\r\n    'text': (length) => Math.max(1, length * 0.5),\r\n    'diamond': 3.52,\r\n    'black-hole': Number.MAX_SAFE_INTEGER\r\n  };\r\n\r\n  const getCardBoxWeight = (cardBoxContents) => {\r\n    let weight = ITEM_WEIGHTS['card-box'];\r\n    \r\n    // Add weight for each card in the box\r\n    Object.entries(cardBoxContents).forEach(([cardId, count]) => {\r\n      if (count > 0) {\r\n        const card = cards[cardId];\r\n        const cardWeight = ITEM_WEIGHTS.card[card.rarity || 'normal'];\r\n        weight += cardWeight * count;\r\n      }\r\n    });\r\n    \r\n    return weight;\r\n  };\r\n\r\n  const getWalletWeight = (denominations) => {\r\n    let weight = ITEM_WEIGHTS.wallet;\r\n    \r\n    // Add weight for each denomination\r\n    Object.entries(denominations).forEach(([value, count]) => {\r\n      if (count > 0) {\r\n        weight += ITEM_WEIGHTS.currency[parseInt(value)] * count;\r\n      }\r\n    });\r\n    \r\n    return weight;\r\n  };\r\n\r\n  const getWeight = () => {\r\n    if (!scaleItem) return 0;\r\n\r\n    switch (scaleItem.type) {\r\n      case 'wallet':\r\n        return getWalletWeight(walletDenominations);\r\n      case 'card-box':\r\n        return getCardBoxWeight(collectedCards);\r\n      case 'card':\r\n        return ITEM_WEIGHTS.card[scaleItem.rarity || 'normal'];\r\n      case 'text':\r\n        return ITEM_WEIGHTS.text(scaleItem.text.length);\r\n      case 'currency':\r\n        return ITEM_WEIGHTS.currency[scaleItem.value] || 0;\r\n      case 'black-hole':\r\n        return ITEM_WEIGHTS['black-hole'];\r\n      default:\r\n        return ITEM_WEIGHTS[scaleItem.type] || 0;\r\n    }\r\n  };\r\n\r\n  const handleScaleClick = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    \r\n    if (equippedItem && !scaleItem) {\r\n      dispatch(addToScale({ item: equippedItem }));\r\n      dispatch(unequipItem());\r\n      return;\r\n    } \r\n    return;\r\n    if (scaleItem) {\r\n      if (!equippedItem) {\r\n        dispatch(removeFromScale());\r\n        dispatch(equipItem(scaleItem));\r\n      } else if (equippedItem.type === 'currency' && scaleItem.type === 'wallet') {\r\n        dispatch(removeFromScale());\r\n        dispatch(addToWallet({ value: equippedItem.value }));\r\n      } else if (equippedItem.type === 'card-box' && scaleItem.type === 'card') {\r\n        dispatch(removeFromScale());\r\n        dispatch(addCardToBox({ cardId: equippedItem.id }));\r\n      } else if (equippedItem.type === 'wallet' && scaleItem.type === 'currency') {\r\n        dispatch(removeFromScale());\r\n        dispatch(addToWallet({ value: scaleItem.value }));\r\n      } else if (equippedItem.type === 'card' && scaleItem.type === 'card-box') {\r\n        dispatch(removeFromScale());\r\n        dispatch(addCardToBox({ cardId: equippedItem.id }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleConfirmSwap = () => {\r\n    const oldScaleItem = scaleItem;\r\n    dispatch(addToScale(equippedItem));\r\n    dispatch(equipItem(oldScaleItem));\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const handleScreenClick = (e) => {\r\n    e.stopPropagation(); // Prevent triggering the ScaleContainer click\r\n    const weight = getWeight();\r\n    dispatch(setCurrentLevel({real: weight, imag: 0}));\r\n    unlockAchievement('SCALE_TRAVEL');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScaleContainer >\r\n        <WeighingPlatform\r\n          onClick={(e) => handleScaleClick(e)}\r\n          onContextMenu={(e) => handleScaleClick(e)}\r\n          canInteract={equippedItem && !scaleItem}>\r\n          <ItemContainer>\r\n            {scaleItem ? (\r\n              <ItemRenderer item={scaleItem} isStorage={true} isInventory={false} forceAvailable={true} />\r\n            ) : (\r\n              <EmptySlot>Empty</EmptySlot>\r\n            )}\r\n          </ItemContainer>\r\n        </WeighingPlatform>\r\n        <LevelButton\r\n          targetLevel={{real: getWeight(), imag: 0}}\r\n          onClick={handleScreenClick}\r\n          isDigitalScreen={true}\r\n        >\r\n          {getWeight().toFixed(2)}g\r\n        </LevelButton>\r\n      </ScaleContainer>\r\n\r\n      <ConfirmationModal\r\n        show={showConfirmModal}\r\n        onConfirm={handleConfirmSwap}\r\n        onCancel={() => setShowConfirmModal(false)}\r\n        message=\"Swap the equipped item with the item on the scale?\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scale; ","\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null || onSelect(eventKeyPassed, e);\n    onClick == null || onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport HighlightableText from './HighlightableText';\r\n\r\nconst AccordionWrapper = styled.div`\r\n  margin: 0.5rem 0;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  padding: 0.5rem;\r\n`;\r\nconst StyledAccordion = styled(Accordion)`\r\n  .accordion-button:not(.collapsed) {\r\n    color: inherit;\r\n    background-color: rgba(0, 0, 0, 0.03);\r\n    box-shadow: none;\r\n  }\r\n\r\n  .accordion-button:focus {\r\n    box-shadow: none;\r\n    border-color: rgba(0, 0, 0, 0.125);\r\n  }\r\n\r\n  .accordion-button::after {\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n  }\r\n\r\n  .accordion-button:not(.collapsed)::after {\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n  }\r\n`;\r\nconst NestedAccordion = ({ \r\n  data, \r\n  openSections = [], \r\n  visitedSections = [], \r\n  onToggle,\r\n  depth = 0, \r\n  path = '' \r\n}) => {\r\n  if (Array.isArray(data)) {\r\n    if (data.length === 0) {\r\n      return (\r\n        <TextWrapper>\r\n          <HighlightableText text=\"Keep searching...\" />\r\n        </TextWrapper>\r\n      );\r\n    }\r\n\r\n    if (typeof data[0] === 'string' || React.isValidElement(data[0])) {\r\n      return (\r\n        <TextWrapper>\r\n          {typeof data[0] === 'string' ? (\r\n            <HighlightableText text={data.join(' ')} />\r\n          ) : (\r\n            data[0]\r\n          )}\r\n        </TextWrapper>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <StyledAccordion \r\n        activeKey={openSections.filter(key => key.startsWith(path))}\r\n        alwaysOpen\r\n      >\r\n        {data.map((item, index) => {\r\n          const currentPath = path ? `${path}-${index}` : `${index}`;\r\n          const isVisited = visitedSections.includes(currentPath);\r\n          \r\n          return (\r\n            <Accordion.Item \r\n              key={currentPath} \r\n              eventKey={currentPath}\r\n              className={isVisited ? 'visited' : ''}\r\n            >\r\n              <Accordion.Header \r\n                onClick={() => onToggle(currentPath)}\r\n              />\r\n              <Accordion.Body>\r\n                <NestedAccordion \r\n                  data={item}\r\n                  openSections={openSections}\r\n                  visitedSections={visitedSections} \r\n                  onToggle={onToggle}\r\n                  depth={depth + 1}\r\n                  path={currentPath}\r\n                />\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          );\r\n        })}\r\n      </StyledAccordion>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default NestedAccordion; "],"names":["Level8","_jsx","LevelContainer","children","StyledCard","_jsxs","Card","Body","Title","HighlightableText","size","text","Text","EmptySlot","styled","div","ScaleContainer","WeighingPlatform","props","canInteract","ItemContainer","Scale","dispatch","useDispatch","equippedItem","useSelector","state","inventory","scaleItem","scale","walletDenominations","collectedCards","showConfirmModal","setShowConfirmModal","useState","unlockAchievement","useAchievements","ITEM_WEIGHTS","length","Math","max","Number","MAX_SAFE_INTEGER","getWeight","type","denominations","weight","wallet","Object","entries","forEach","_ref2","value","count","currency","parseInt","getWalletWeight","cardBoxContents","_ref","cardId","card","cards","cardWeight","rarity","getCardBoxWeight","handleScaleClick","e","preventDefault","stopPropagation","addToScale","item","unequipItem","_Fragment","onClick","onContextMenu","ItemRenderer","isStorage","isInventory","forceAvailable","LevelButton","targetLevel","real","imag","setCurrentLevel","isDigitalScreen","toFixed","ConfirmationModal","show","onConfirm","handleConfirmSwap","oldScaleItem","equipItem","onCancel","message","isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","React","displayName","AccordionCollapse","ref","as","Component","bsPrefix","className","useContext","AccordionContext","useBootstrapPrefix","Collapse","in","classNames","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","accordionOnClick","onSelect","alwaysOpen","eventKeyPassed","filter","k","useAccordionButton","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","Accordion","activeKey","flush","controlledProps","useUncontrolled","prefix","assign","Button","Item","Header","TextWrapper","StyledAccordion","NestedAccordion","data","openSections","visitedSections","onToggle","depth","path","join","key","startsWith","map","index","currentPath","isVisited"],"sourceRoot":""}