{"version":3,"file":"static/js/3563.55f16b63.chunk.js","mappings":"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","sources":["components/Items/BaseCollectable.js","components/Items/CollectableCard.js","utils/levelCategories.js","components/UI/VisitedLevelsDisplay.js","components/Levels/Level1001.js","utils/itemLocation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { equipItem, swapEquippedItem, addCardToBox } from '../../store/slices/inventorySlice';\r\nimport ConfirmationModal from '../UI/ConfirmationModal';\r\nimport { isItemAvailable } from '../../utils/itemLocation';\r\n\r\nconst BaseCollectable = ({ \r\n  itemConfig,\r\n  onBeforeCollect,\r\n  children,\r\n  renderItem \r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const collected = !useSelector(state => isItemAvailable(state, itemConfig.id));\r\n  const [showSwapModal, setShowSwapModal] = useState(false);\r\n\r\n  const handleCollect = () => {\r\n    if (collected) return;\r\n\r\n    if (onBeforeCollect) {\r\n      const shouldContinue = onBeforeCollect(equippedItem);\r\n      if (!shouldContinue) return;\r\n    }\r\n\r\n    if (itemConfig.type === 'card' && equippedItem?.type === 'card-box') {\r\n      dispatch(addCardToBox({ cardId: itemConfig.id }));\r\n      return;\r\n    }\r\n\r\n    if (equippedItem) {\r\n      setShowSwapModal(true);\r\n    } else {\r\n      dispatch(equipItem(itemConfig));\r\n    }\r\n  };\r\n\r\n  const handleConfirmSwap = () => {\r\n    if (equippedItem?.type === 'card' && itemConfig.type === 'card-box') {\r\n      const boxWithCard = {\r\n        ...itemConfig,\r\n        collectedCards: { [equippedItem.id]: true }\r\n      };\r\n      dispatch(equipItem(boxWithCard));\r\n    } else {\r\n      dispatch(swapEquippedItem({\r\n        newItem: itemConfig\r\n      }));\r\n    }\r\n    setShowSwapModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderItem({ collected, handleCollect })}\r\n\r\n      <ConfirmationModal\r\n        show={showSwapModal}\r\n        onConfirm={handleConfirmSwap}\r\n        onCancel={() => setShowSwapModal(false)}\r\n        itemName={equippedItem?.name || 'current item'}\r\n        message={`Picking up the ${itemConfig.name} will return your ${equippedItem?.name || 'current item'} to its original location. Continue?`}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BaseCollectable; ","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addCardToBox, equipCard } from '../../store/slices/inventorySlice';\r\nimport BaseCollectable from './BaseCollectable';\r\nimport { DarkHolographicCard, HolographicCard, NormalCard, GoldStarCard } from './SpecialCards';\r\nimport CARDS from '../../data/cards';\r\nimport { getCardComponent } from './SpecialCards';\r\n\r\nconst wobbleFloat = keyframes`\r\n  0%, 100% { transform: translate(0, 0) rotate(-4deg); }\r\n  25% { transform: translate(0, -10px) rotate(4deg); }\r\n  50% { transform: translate(0, 0px) rotate(4deg); }\r\n  75% { transform: translate(0, -10px) rotate(-4deg); }\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n  animation: ${wobbleFloat} 6s ease-in-out infinite;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CollectableCard = ({ cardId, value, suit }) => {\r\n    const dispatch = useDispatch();\r\n    const cardType = CARDS[cardId]?.rarity || 'normal';\r\n    const CardComponent = getCardComponent(cardType);\r\n    const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  \r\n    const itemConfig = {\r\n      type: 'card',\r\n      id: cardId,\r\n      name: `${value} of ${suit}`,\r\n      suit,\r\n      value\r\n    };\r\n  \r\n    const handleBeforeCollect = (equippedItem) => {\r\n      if (equippedItem?.type === 'card-box') {\r\n        dispatch(addCardToBox({ cardId }));\r\n        return false;\r\n      }\r\n      return true;\r\n    };\r\n  \r\n    return (\r\n      <BaseCollectable\r\n        itemConfig={itemConfig}\r\n        onBeforeCollect={handleBeforeCollect}\r\n        renderItem={({ collected, handleCollect }) => (\r\n          <CardWrapper>\r\n            <CardComponent \r\n              collected={collected} \r\n              onClick={() => {\r\n                console.log('clicked');\r\n                handleCollect();\r\n              }}\r\n              className={suit}\r\n            >\r\n              {value} {suit === 'hearts' ? '♥' : suit === 'diamonds' ? '♦' : suit === 'clubs' ? '♣' : '♠'}\r\n            </CardComponent>\r\n          </CardWrapper>\r\n        )}\r\n      />\r\n    );\r\n  };\r\n  \r\n  export default CollectableCard;","import { parseStoredLevel } from './complex';\r\n\r\nexport const LEVEL_CATEGORIES = {\r\n  INTEGERS: 'Integers',\r\n  REALS: 'Reals',\r\n  COMPLEX: 'Complex',\r\n  BEYOND: 'Beyond'\r\n};\r\n\r\nexport const getLevelCategory = (levelStr) => {\r\n  if (levelStr === 'Demo' || levelStr.includes('Infinity')) {\r\n    return LEVEL_CATEGORIES.BEYOND;\r\n  }\r\n\r\n  const level = parseStoredLevel(levelStr);\r\n  if (typeof level === 'object' && 'real' in level) {\r\n    if (level.imag === 0) {\r\n      return Number.isInteger(level.real) ? \r\n        LEVEL_CATEGORIES.INTEGERS : \r\n        LEVEL_CATEGORIES.REALS;\r\n    }\r\n    return LEVEL_CATEGORIES.COMPLEX;\r\n  }\r\n\r\n  return LEVEL_CATEGORIES.INTEGERS;\r\n};\r\n\r\nexport const getComplexColor = (levelStr) => {\r\n  const level = parseStoredLevel(levelStr);\r\n  if (typeof level !== 'object' || !('real' in level)) return null;\r\n  \r\n  const angle = Math.atan2(level.imag, level.real);\r\n  const hue = ((angle + Math.PI) / (2 * Math.PI)) * 360;\r\n  return `hsl(${hue}, 70%, 50%)`;\r\n}; ","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { formatLevel, parseStoredLevel } from '../../utils/complex';\r\nimport { LEVEL_CATEGORIES, getLevelCategory, getComplexColor } from '../../utils/levelCategories';\r\n\r\nconst Container = styled.div`\r\n  background: ${props => props.theme === 'dark' ? 'rgba(0, 0, 0, 0.9)' : 'rgba(255, 255, 255, 0.95)'};\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  margin: 1rem;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border: 2px solid ${props => props.theme === 'dark' ? 'rgba(255, 215, 0, 0.3)' : 'rgba(218, 165, 32, 0.3)'};\r\n`;\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  gap: 0.25rem;\r\n  border-bottom: 2px solid ${props => props.theme === 'dark' ? 'rgba(255, 215, 0, 0.3)' : 'rgba(218, 165, 32, 0.3)'};\r\n  padding: 0 1rem;\r\n`;\r\n\r\nconst Tab = styled.button`\r\n  padding: 0.75rem 1.5rem;\r\n  border: 2px solid ${props => props.theme === 'dark' ? 'rgba(255, 215, 0, 0.3)' : 'rgba(218, 165, 32, 0.3)'};\r\n  border-bottom: none;\r\n  border-radius: 8px 8px 0 0;\r\n  background: ${props => props.active ? \r\n    (props.theme === 'dark' ? 'rgba(255, 215, 0, 0.2)' : 'rgba(218, 165, 32, 0.2)') : \r\n    'transparent'};\r\n  color: ${props => props.disabled ? \r\n    (props.theme === 'dark' ? '#666' : '#999') : \r\n    (props.theme === 'dark' ? 'gold' : '#DAA520')};\r\n  cursor: ${props => props.disabled ? 'default' : 'pointer'};\r\n  opacity: ${props => props.disabled ? 0.5 : 1};\r\n  position: relative;\r\n  margin-bottom: -2px;\r\n  z-index: ${props => props.active ? 2 : 1};\r\n\r\n  &:hover {\r\n    background: ${props => !props.disabled && (props.theme === 'dark' ? \r\n      'rgba(255, 215, 0, 0.1)' : \r\n      'rgba(218, 165, 32, 0.1)')};\r\n  }\r\n\r\n  ${props => props.active && `\r\n    background: ${props.theme === 'dark' ? 'rgba(0, 0, 0, 0.9)' : 'rgba(255, 255, 255, 0.95)'};\r\n    border-bottom: 2px solid ${props.theme === 'dark' ? 'rgba(0, 0, 0, 0.9)' : 'rgba(255, 255, 255, 0.95)'};\r\n  `}\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  padding-top: 1.5rem;\r\n`;\r\n\r\nconst LevelGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\r\n  gap: 0.5rem;\r\n  max-height: 300px;\r\n  overflow-y: ${props => props.shouldScroll ? 'auto' : 'hidden'};\r\n  padding-right: 0.5rem;\r\n  padding-top: 0.5rem;\r\n`;\r\n\r\nconst LevelBadge = styled.div`\r\n  background: ${props => props.complexColor || \r\n    (props.theme === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.05)')};\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  font-family: monospace;\r\n  transition: all 0.2s ease;\r\n  color: ${props => props.complexColor ? '#fff' : 'inherit'};\r\n`;\r\n\r\nconst CategoryDescription = styled.div`\r\n  color: ${props => props.theme === 'dark' ? '#999' : '#666'};\r\n  font-style: italic;\r\n  text-align: center;\r\n  margin-bottom: 1rem;\r\n  min-height: 2em;\r\n`;\r\n\r\nconst LockedMessage = styled.div`\r\n  color: ${props => props.theme === 'dark' ? '#666' : '#999'};\r\n  text-align: center;\r\n  font-style: italic;\r\n  padding: 2rem;\r\n  height: 200px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst QuestionMark = styled.div`\r\n  font-size: 3rem;\r\n  opacity: 0.5;\r\n  margin-bottom: 1rem;\r\n  color: ${props => props.theme === 'dark' ? '#444' : '#ccc'};\r\n`;\r\nconst CATEGORY_MESSAGES = {\r\n    INTEGERS: \"Numbers as old as counting itself...\",\r\n    REALS: \"Between every two numbers lies infinity...\",\r\n    COMPLEX: \"Where imagination meets reality...\",\r\n    BEYOND: \"Beyond the boundaries of conventional mathematics...\"\r\n  };\r\n  \r\nconst LOCKED_MESSAGE = \"Explore more distant realms to unlock this dimension...\";\r\nconst VisitedLevelsDisplay = () => {\r\n  const [activeTab, setActiveTab] = useState(LEVEL_CATEGORIES.INTEGERS);\r\n  const theme = useSelector(state => state.theme);\r\n  const visitedLevels = useSelector(state => state.game.visitedLevels);\r\n\r\n  const categorizedLevels = visitedLevels.reduce((acc, level) => {\r\n    const category = getLevelCategory(level);\r\n    if (!acc[category]) acc[category] = [];\r\n    acc[category].push(level);\r\n    return acc;\r\n  }, {});\r\n\r\n  const shouldShowTab = (category) => categorizedLevels[category]?.length > 0;\r\n\r\n  const sortLevels = (a, b) => {\r\n    const levelA = parseStoredLevel(a);\r\n    const levelB = parseStoredLevel(b);\r\n    \r\n    // Handle special cases like 'Demo'\r\n    if (typeof levelA === 'string' || typeof levelB === 'string') {\r\n      return a.localeCompare(b);\r\n    }\r\n    \r\n    // Handle complex numbers\r\n    if (typeof levelA === 'object' && typeof levelB === 'object') {\r\n      // First compare real parts\r\n      if (levelA.real !== levelB.real) {\r\n        return levelA.real - levelB.real;\r\n      }\r\n      // If real parts are equal, compare imaginary parts\r\n      return levelA.imag - levelB.imag;\r\n    }\r\n    \r\n    // Handle simple numbers\r\n    return Number(levelA) - Number(levelB);\r\n  };\r\n\r\n  return (\r\n    <Container theme={theme}>\r\n      <TabContainer>\r\n        {Object.values(LEVEL_CATEGORIES).map(category => (\r\n          <Tab\r\n            key={category}\r\n            active={activeTab === category}\r\n            disabled={!shouldShowTab(category)}\r\n            onClick={() => setActiveTab(category)}\r\n            theme={theme}\r\n          >\r\n            {shouldShowTab(category) ? category : '???'}\r\n          </Tab>\r\n        ))}\r\n      </TabContainer>\r\n      \r\n      {shouldShowTab(activeTab) ? (\r\n        <LevelGrid shouldScroll={categorizedLevels[activeTab]?.length > 12}>\r\n          {(categorizedLevels[activeTab] || []).sort(sortLevels).map(level => (\r\n            <LevelBadge \r\n              key={level} \r\n              theme={theme}\r\n              complexColor={activeTab === LEVEL_CATEGORIES.COMPLEX ? getComplexColor(level) : null}\r\n            >\r\n              {formatLevel(level)}\r\n            </LevelBadge>\r\n          ))}\r\n        </LevelGrid>\r\n      ) : (\r\n        <LockedMessage theme={theme}>\r\n          <QuestionMark theme={theme}>?</QuestionMark>\r\n          {LOCKED_MESSAGE}\r\n        </LockedMessage>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VisitedLevelsDisplay; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentLevel, markMechanicDiscovered } from '../../store';\r\nimport { Card } from 'react-bootstrap';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport FlowerPot from '../UI/FlowerPot';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport { LevelContainer, StyledCard, CenteredContainer } from './styles/CommonLevelStyles';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport AchievementShrine from '../UI/AchievementShrine';\r\nimport CollectableCard from '../Items/CollectableCard';\r\nimport ChangeMachineButton from '../UI/ChangeMachineButton';\r\nimport VisitedLevelsDisplay from '../UI/VisitedLevelsDisplay';\r\n\r\nconst Level1001 = () => {\r\n\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard>\r\n        <Card.Body>\r\n          <Card.Title>why is this here?</Card.Title>\r\n          <Card.Text>\r\n            why is this here?\r\n          </Card.Text>\r\n          \r\n          <VisitedLevelsDisplay />\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level1001;","export const getItemLocation = (state, itemId) => {\r\n  // Check equipped item\r\n  if (state.inventory.equippedItem?.id === itemId) {\r\n    return 'equipped';\r\n  }\r\n\r\n  // Check scale\r\n  if (state.inventory.scale?.id === itemId) {\r\n    return 'scale';\r\n  }\r\n\r\n  // Check bookshelf and card boxes within it\r\n  const bookshelfIndex = state.inventory.bookshelf.findIndex(item => {\r\n    if (item?.id === itemId) return true;\r\n    if (item?.type === 'card-box' && item.collectedCards?.[itemId]) {\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  if (bookshelfIndex !== -1) {\r\n    return `bookshelf-${bookshelfIndex}`;\r\n  }\r\n\r\n  // Check if card is in equipped card box\r\n  if (state.inventory.equippedItem?.type === 'card-box' && \r\n      state.inventory.equippedItem.collectedCards?.[itemId]) {\r\n    return 'equipped-box';\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const isItemAvailable = (state, itemId) => {\r\n  return getItemLocation(state, itemId) === null;\r\n}; "],"names":["_ref","itemConfig","onBeforeCollect","children","renderItem","dispatch","useDispatch","equippedItem","useSelector","state","inventory","collected","isItemAvailable","id","showSwapModal","setShowSwapModal","useState","_jsxs","_Fragment","handleCollect","type","equipItem","addCardToBox","cardId","_jsx","ConfirmationModal","show","onConfirm","handleConfirmSwap","boxWithCard","collectedCards","swapEquippedItem","newItem","onCancel","itemName","name","message","wobbleFloat","keyframes","CardWrapper","styled","div","_CARDS$cardId","value","suit","cardType","CARDS","rarity","CardComponent","getCardComponent","BaseCollectable","_ref2","onClick","console","log","className","LEVEL_CATEGORIES","INTEGERS","REALS","COMPLEX","BEYOND","getComplexColor","levelStr","level","parseStoredLevel","Math","atan2","imag","real","PI","Container","props","theme","TabContainer","Tab","button","active","disabled","LevelGrid","shouldScroll","LevelBadge","complexColor","LockedMessage","QuestionMark","VisitedLevelsDisplay","_categorizedLevels$ac","activeTab","setActiveTab","categorizedLevels","game","visitedLevels","reduce","acc","category","includes","Number","isInteger","getLevelCategory","push","shouldShowTab","_categorizedLevels$ca","length","Object","values","map","sort","sortLevels","a","b","levelA","levelB","localeCompare","formatLevel","Level1001","LevelContainer","StyledCard","Card","Body","Title","Text","itemId","getItemLocation","_state$inventory$equi","_state$inventory$scal","_state$inventory$equi2","_state$inventory$equi3","scale","bookshelfIndex","bookshelf","findIndex","item","_item$collectedCards"],"sourceRoot":""}