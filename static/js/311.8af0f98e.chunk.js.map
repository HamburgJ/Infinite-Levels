{"version":3,"file":"static/js/311.8af0f98e.chunk.js","mappings":"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","sources":["components/Characters/Jester.js","components/UI/LockedBox.js","components/Levels/Level9.js","components/UI/AchievementShrine.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","components/UI/NestedAccordion.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setJesterLocation} from '../../store/slices/jesterSlice';\r\nimport { incrementJesterEncounters } from '../../store/slices/gameSlice';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst JesterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1.5rem;\r\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(240, 240, 240, 0.85));\r\n  padding: 0.5rem;\r\n  border-radius: 12px;\r\n  margin: 1.5rem 0;\r\n  box-shadow: \r\n    0 4px 6px rgba(0, 0, 0, 0.1),\r\n    0 1px 3px rgba(0, 0, 0, 0.08),\r\n    inset 0 1px 1px rgba(255, 255, 255, 0.5);\r\n  border: 1px solid rgba(0, 0, 0, 0.3);\r\n  backdrop-filter: blur(5px);\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n  animation: ${props => props.isDisappearing ? 'disappear 0.5s forwards' : 'none'};\r\n\r\n  @keyframes disappear {\r\n    0% {\r\n      opacity: 1;\r\n      transform: scale(1) rotate(0deg);\r\n    }\r\n    50% {\r\n      opacity: 0.5;\r\n      transform: scale(0.8) rotate(180deg);\r\n    }\r\n    100% {\r\n      opacity: 0;\r\n      transform: scale(0) rotate(360deg);\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: \r\n      0 6px 8px rgba(0, 0, 0, 0.12),\r\n      0 2px 4px rgba(0, 0, 0, 0.08),\r\n      inset 0 1px 1px rgba(255, 255, 255, 0.6);\r\n  }\r\n`;\r\n\r\nconst JesterEmoji = styled.span`\r\n  font-size: 2rem;\r\n  animation: float 2s ease-in-out infinite;\r\n\r\n  @keyframes float {\r\n    0%, 100% { transform: translateY(0); }\r\n    50% { transform: translateY(-10px); }\r\n  }\r\n`;\r\n\r\nconst JesterText = styled.div`\r\n  flex: 1;\r\n  font-style: italic;\r\n  color: #666;\r\n`;\r\n\r\nconst JESTER_LOCATIONS = {\r\n  '11': {\r\n    nextLocation: '8',\r\n    message: \"Ah, the sparse levels! *juggles some numbers* Did you know that if you look carefully at Level 8, you might find some interesting traveling techniques? *winks*\"\r\n  },\r\n  '8': {\r\n    nextLocation: '9',\r\n    message: \"Ohoho! Advanced techniques, indeed! But the real magic lies in the secrets... *pulls a rabbit from a hat* Why don't you check Level 9? There might be a mysterious box waiting to be unlocked! *disappears in a puff of smoke, then reappears* Oh, I'm still here!\"\r\n  },\r\n  '9': {\r\n    nextLocation: null,\r\n    message: \"The grand finale! *throws confetti* You've found all my hiding spots! But remember, in this world of numbers and mysteries, nothing is quite what it seems... *bows theatrically*\"\r\n  }\r\n};\r\n\r\nconst Jester = ({ currentLevel }) => {\r\n  const dispatch = useDispatch();\r\n  const jesterLocation = useSelector(state => state.jester.currentLocation);\r\n  const [isDisappearing, setIsDisappearing] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (jesterLocation === currentLevel) {\r\n      dispatch(incrementJesterEncounters());\r\n    }\r\n  }, [dispatch, jesterLocation, currentLevel]);\r\n\r\n  if (jesterLocation !== currentLevel) {\r\n    return null;\r\n  }\r\n\r\n  const handleTravel = () => {\r\n    setIsDisappearing(true);\r\n    setTimeout(() => {\r\n      const nextLocation = JESTER_LOCATIONS[jesterLocation].nextLocation;\r\n      dispatch(setJesterLocation(nextLocation));\r\n    }, 500); // Wait for animation to complete\r\n  };\r\n\r\n  return (\r\n    <JesterContainer isDisappearing={isDisappearing}>\r\n      <JesterEmoji>🃏</JesterEmoji>\r\n      <JesterText>\r\n        {JESTER_LOCATIONS[jesterLocation].message}\r\n      </JesterText>\r\n      <Button \r\n        variant=\"outline-primary\" \r\n        onClick={handleTravel}\r\n        size=\"sm\"\r\n      >\r\n        *poof*\r\n      </Button>\r\n    </JesterContainer>\r\n  );\r\n};\r\n\r\nexport default Jester;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { FaLock, FaLockOpen, FaBox } from 'react-icons/fa';\r\nimport { useAchievements } from \"../../hooks/useAchievements\"\r\n\r\nconst BoxContainer = styled.div`\r\n  text-align: center;\r\n  margin: 2rem 0;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  display: inline-block;\r\n  cursor: ${props => props.hasKey ? 'pointer' : 'not-allowed'};\r\n  font-size: 3rem;\r\n  position: relative;\r\n  opacity: ${props => props.isOpen ? 0.7 : 1};\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: ${props => props.hasKey ? 'scale(1.1)' : 'none'};\r\n  }\r\n`;\r\n\r\nconst Lock = styled.div`\r\n  position: absolute;\r\n  top: -15px;\r\n  right: -15px;\r\n  font-size: 2rem;\r\n  color: gold;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  margin-top: 1rem;\r\n  padding: 1rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background: #f9f9f9;\r\n  display: ${props => props.isVisible ? 'block' : 'none'};\r\n`;\r\n\r\nconst LockedBox = ({ children, requiredKey = 'key-1' }) => {\r\n  const { unlockAchievement } = useAchievements();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isContentVisible, setIsContentVisible] = useState(false);\r\n  const inventory = useSelector(state => state.inventory.equippedItem);\r\n  const hasKey = inventory && inventory[requiredKey];\r\n\r\n  const handleClick = () => {\r\n    if (hasKey && !isOpen) {\r\n      setIsOpen(true);\r\n      setTimeout(() => setIsContentVisible(true), 500);\r\n      unlockAchievement('BOX_UNLOCKED');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BoxContainer>\r\n      <Box hasKey={hasKey} isOpen={isOpen} onClick={handleClick}>\r\n        <FaBox />\r\n        <Lock>\r\n          {isOpen ? <FaLockOpen /> : <FaLock />}\r\n        </Lock>\r\n      </Box>\r\n      <Content isVisible={isContentVisible}>\r\n        {children}\r\n      </Content>\r\n    </BoxContainer>\r\n  );\r\n};\r\n\r\nexport default LockedBox; ","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentLevel } from '../../store';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport NestedAccordion from '../UI/NestedAccordion';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport { LevelContainer, StyledCard, CenteredContainer } from './styles/CommonLevelStyles';\r\nimport { FaTrophy } from 'react-icons/fa';\r\nimport Scale from '../Storage/Scale';\r\nimport HighlightableText from '../UI/HighlightableText';\r\nimport LockedBox from '../UI/LockedBox';\r\nimport AchievementShrine from '../UI/AchievementShrine';\r\nimport Jester from '../Characters/Jester';\r\n\r\nconst Level9 = () => {\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard>\r\n        <Card.Body>\r\n          <Card.Title><HighlightableText size=\"medium\" text=\"Secrets\"/></Card.Title>\r\n          <Card.Text>\r\n            <HighlightableText text=\"Congratulations. Reaching this level means that you've mastered the basics of this game. However, there\r\n            another secret ability which will unlock a truly magnificently infinite amount of levels!\"/>\r\n            </Card.Text>\r\n            <Card.Text>\r\n            <HighlightableText text=\"The secret lays inside the box below.  A hint to \r\n            the secret place will be revealed here once you've completed x achievements!\"/>\r\n            </Card.Text>\r\n            <AchievementShrine requiredCount={30}>\r\n              <CenteredContainer>\r\n              The key to the box is stored in an extremely secret place! The information that will lead you to the key is hidden in a mysterious level which is thought by some not to exist.\r\n                A level which equates to the 0th level yet its opposite. A level which is infinitely close yet infinitely far. \r\n              </CenteredContainer>\r\n              <LockedBox>\r\n              <Card.Text>\r\n                <HighlightableText text=\"Like you know, buttons can be created from anywhere.\r\n                But did you know that these buttons can be collected into your inventory? Just highlight some text to create a button, and \r\n                right click to pick it up! You can carry it around with you, and click it to travel to that level!\"/>\r\n              </Card.Text>\r\n              </LockedBox>\r\n            </AchievementShrine>\r\n          <Jester currentLevel=\"9\" />\r\n          <CenteredContainer>\r\n            <LevelButton targetLevel={3}>Level 3</LevelButton>\r\n          </CenteredContainer>\r\n\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level9; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card } from 'react-bootstrap';\r\nimport allAchievements from '../../data/achievements';\r\nimport LevelButton from './LevelButton';\r\nimport debugConfig from '../../config/debug';\r\n\r\nconst ShrineContainer = styled.div`\r\n  width: 100%;\r\n  margin: 2rem auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(10px);\r\n  border: 2px solid rgba(0, 0, 0, 0.1);\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n  \r\n  ${props => props.isMaxShrine && `\r\n    background: rgba(70, 0, 70, 0.1);\r\n    border: 2px solid purple;\r\n  `}\r\n  \r\n  ${props => props.isComplete && !props.isMaxShrine && `\r\n    background: rgba(255, 215, 0, 0.1);\r\n    border-color: gold;\r\n  `}\r\n\r\n  ${props => props.isOverLimit && `\r\n    background: rgba(255, 0, 0, 0.1);\r\n    border-color: red;\r\n  `}\r\n`;\r\n\r\nconst ShrineSymbol = styled.div`\r\n  font-size: 3rem;\r\n  margin: 1rem 0;\r\n  color: ${props => {\r\n    if (props.isMaxShrine) return 'purple';\r\n    if (props.isOverLimit) return '#ff0000';\r\n    if (props.isComplete) return 'gold';\r\n    return '#666';\r\n  }};\r\n`;\r\n\r\nconst ProgressText = styled.div`\r\n  color: ${props => props.isOverLimit ? 'red' : 'inherit'};\r\n  font-weight: ${props => props.isOverLimit ? 'bold' : 'normal'};\r\n`;\r\n\r\nconst AchievementShrine = ({ \r\n  requiredCount = null,\r\n  maximumCount = null,\r\n  children,\r\n  overLimitMessage = \"Too many achievements! You must prestige to access this content.\"\r\n}) => {\r\n  const unlockedAchievements = useSelector(state => state.achievements.achievements);\r\n  const achievementCount = Object.keys(unlockedAchievements).length;\r\n  \r\n  const isMaxShrine = maximumCount !== null;\r\n  const isOverLimit = isMaxShrine && achievementCount > maximumCount;\r\n  const hasRequiredAchievements = !isMaxShrine && (\r\n    debugConfig.isDebugMode && debugConfig.debugFeatures.unlockAllShrines ? \r\n    true : achievementCount >= requiredCount\r\n  );\r\n  \r\n  const isAccessible = isMaxShrine ? !isOverLimit : hasRequiredAchievements;\r\n\r\n  return (\r\n    <ShrineContainer>\r\n      <StyledCard isComplete={isAccessible} isOverLimit={isOverLimit} isMaxShrine={isMaxShrine}>\r\n        <Card.Body>\r\n          <ShrineSymbol \r\n            isComplete={isAccessible} \r\n            isOverLimit={isOverLimit}\r\n            isMaxShrine={isMaxShrine}\r\n          >\r\n            {isMaxShrine ? '🔮' : (isAccessible ? '🔓' : '🔒')}\r\n          </ShrineSymbol>\r\n          \r\n          <Card.Title>\r\n            {isMaxShrine ? 'Prestige Shrine' : 'Achievement Shrine'}\r\n          </Card.Title>\r\n          \r\n          <ProgressText isOverLimit={isOverLimit}>\r\n            {isMaxShrine ? (\r\n              <>Current: {achievementCount} / Maximum: {maximumCount}</>\r\n            ) : (\r\n              <>Progress: {achievementCount} / {requiredCount}</>\r\n            )}\r\n          </ProgressText>\r\n          \r\n          {isMaxShrine ? (\r\n            isOverLimit ? (\r\n              <Card.Text className=\"text-danger\">\r\n                {overLimitMessage}\r\n              </Card.Text>\r\n            ) : (\r\n              <Card.Text>\r\n                {children}\r\n              </Card.Text>\r\n            )\r\n          ) : (\r\n            !hasRequiredAchievements ? (\r\n              <Card.Text>\r\n                Return when you have unlocked at least {requiredCount} achievements...\r\n              </Card.Text>\r\n            ) : (\r\n              <Card.Text>\r\n                {children}\r\n              </Card.Text>\r\n            )\r\n          )}\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </ShrineContainer>\r\n  );\r\n};\r\n\r\nexport default AchievementShrine;","\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null || onSelect(eventKeyPassed, e);\n    onClick == null || onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport HighlightableText from './HighlightableText';\r\n\r\nconst AccordionWrapper = styled.div`\r\n  margin: 0.5rem 0;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  padding: 0.5rem;\r\n`;\r\nconst StyledAccordion = styled(Accordion)`\r\n  .accordion-button:not(.collapsed) {\r\n    color: inherit;\r\n    background-color: rgba(0, 0, 0, 0.03);\r\n    box-shadow: none;\r\n  }\r\n\r\n  .accordion-button:focus {\r\n    box-shadow: none;\r\n    border-color: rgba(0, 0, 0, 0.125);\r\n  }\r\n\r\n  .accordion-button::after {\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n  }\r\n\r\n  .accordion-button:not(.collapsed)::after {\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n  }\r\n`;\r\nconst NestedAccordion = ({ \r\n  data, \r\n  openSections = [], \r\n  visitedSections = [], \r\n  onToggle,\r\n  depth = 0, \r\n  path = '' \r\n}) => {\r\n  if (Array.isArray(data)) {\r\n    if (data.length === 0) {\r\n      return (\r\n        <TextWrapper>\r\n          <HighlightableText text=\"Keep searching...\" />\r\n        </TextWrapper>\r\n      );\r\n    }\r\n\r\n    if (typeof data[0] === 'string' || React.isValidElement(data[0])) {\r\n      return (\r\n        <TextWrapper>\r\n          {typeof data[0] === 'string' ? (\r\n            <HighlightableText text={data.join(' ')} />\r\n          ) : (\r\n            data[0]\r\n          )}\r\n        </TextWrapper>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <StyledAccordion \r\n        activeKey={openSections.filter(key => key.startsWith(path))}\r\n        alwaysOpen\r\n      >\r\n        {data.map((item, index) => {\r\n          const currentPath = path ? `${path}-${index}` : `${index}`;\r\n          const isVisited = visitedSections.includes(currentPath);\r\n          \r\n          return (\r\n            <Accordion.Item \r\n              key={currentPath} \r\n              eventKey={currentPath}\r\n              className={isVisited ? 'visited' : ''}\r\n            >\r\n              <Accordion.Header \r\n                onClick={() => onToggle(currentPath)}\r\n              />\r\n              <Accordion.Body>\r\n                <NestedAccordion \r\n                  data={item}\r\n                  openSections={openSections}\r\n                  visitedSections={visitedSections} \r\n                  onToggle={onToggle}\r\n                  depth={depth + 1}\r\n                  path={currentPath}\r\n                />\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          );\r\n        })}\r\n      </StyledAccordion>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default NestedAccordion; "],"names":["JesterContainer","styled","div","props","isDisappearing","JesterEmoji","span","JesterText","JESTER_LOCATIONS","nextLocation","message","_ref","currentLevel","dispatch","useDispatch","jesterLocation","useSelector","state","jester","currentLocation","setIsDisappearing","React","useEffect","incrementJesterEncounters","_jsxs","children","_jsx","Button","variant","onClick","handleTravel","setTimeout","setJesterLocation","size","BoxContainer","Box","hasKey","isOpen","Lock","Content","isVisible","requiredKey","unlockAchievement","useAchievements","setIsOpen","useState","isContentVisible","setIsContentVisible","inventory","equippedItem","handleClick","FaBox","FaLockOpen","FaLock","Level9","LevelContainer","StyledCard","Card","Body","Title","HighlightableText","text","Text","AchievementShrine","requiredCount","CenteredContainer","LockedBox","Jester","LevelButton","targetLevel","ShrineContainer","isMaxShrine","isComplete","isOverLimit","ShrineSymbol","ProgressText","maximumCount","overLimitMessage","unlockedAchievements","achievements","achievementCount","Object","keys","length","hasRequiredAchievements","debugConfig","isDebugMode","debugFeatures","unlockAllShrines","isAccessible","_Fragment","className","isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","displayName","AccordionCollapse","ref","as","Component","bsPrefix","useContext","AccordionContext","useBootstrapPrefix","Collapse","in","classNames","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","accordionOnClick","onSelect","alwaysOpen","e","eventKeyPassed","filter","k","useAccordionButton","type","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","value","Accordion","activeKey","flush","controlledProps","useUncontrolled","prefix","assign","Item","Header","TextWrapper","StyledAccordion","NestedAccordion","data","openSections","visitedSections","onToggle","depth","path","join","key","startsWith","map","item","index","currentPath","isVisited"],"sourceRoot":""}