{"version":3,"file":"static/js/1961.c9b4d0c6.chunk.js","mappings":"+MAOA,MAAMA,EAASC,EAAAA,EAAS;;;EAKlBC,EAAcC,EAAAA,GAAOC,GAAG;;;;aAIjBC,GAASA,EAAMC;;;;EAMtBC,EAAkBJ,EAAAA,GAAOC,GAAG;;;;;eAKnBJ;;EAITQ,EAAiBL,EAAAA,GAAOC,GAAG;;;;;aAKpBC,GAASA,EAAMI,KAAO,IAAO;;;EAgF1C,EA3EmBC,KACjB,MAAOJ,EAAUK,IAAeC,EAAAA,EAAAA,UAAS,IAClCC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,IACtCG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IACpCK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,IAE3CO,EAAa,wCA6BnB,OA3BAC,EAAAA,EAAAA,YAAU,KAERC,YAAW,KACT,MAAMC,EAAmBC,aAAY,KACnCZ,GAAYa,IACV,GAAIA,GAAQ,EAAG,CACbC,cAAcH,GACdR,GAAc,GAEd,IAAIY,EAAe,EACnB,MAAMC,EAAeJ,aAAY,KAC3BG,EAAeP,IACjBD,GAAgBM,GAAQA,EAAOL,EAAWO,KAC1CA,MAEAD,cAAcE,GACdX,GAAa,GACf,GACC,KACH,OAAO,CACT,CACA,OAAOQ,EAAO,GAAO,IAAKA,EAAOA,EAAO,GAAI,GAC5C,GACD,IAAI,GACN,IAAK,GACP,KAGDI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC7B,EAAW,CAACI,SAAUA,KACvByB,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CAAAF,UACbC,EAAAA,EAAAA,KAACE,EAAAA,GAAU,CAAAH,UACTF,EAAAA,EAAAA,MAACM,EAAAA,EAAKC,KAAI,CAAAL,SAAA,EACVC,EAAAA,EAAAA,KAACG,EAAAA,EAAKE,MAAK,CAAAN,UACPC,EAAAA,EAAAA,KAACM,EAAAA,EAAiB,CAACC,KAAK,6BAA6BC,KAAK,cAE5DR,EAAAA,EAAAA,KAACG,EAAAA,EAAKM,KAAI,CAAAV,UACRC,EAAAA,EAAAA,KAACM,EAAAA,EAAiB,CAACC,KAAK,iCAE1BP,EAAAA,EAAAA,KAACG,EAAAA,EAAKM,KAAI,CAAAV,UACRC,EAAAA,EAAAA,KAACM,EAAAA,EAAiB,CAACC,KAAK,4CAA4CC,KAAK,aAE3ER,EAAAA,EAAAA,KAACG,EAAAA,EAAKM,KAAI,CAAAV,UACRC,EAAAA,EAAAA,KAACM,EAAAA,EAAiB,CAACC,KAAM,GAAGrB,eAKnCF,IACCgB,EAAAA,EAAAA,KAACvB,EAAc,CAACC,KAAMM,EAAUe,SAAC,iBAIlCjB,IACCkB,EAAAA,EAAAA,KAACxB,EAAe,CAAAuB,UACdC,EAAAA,EAAAA,KAACU,EAAAA,EAAW,CACVC,YAAa,EACbC,QAAQ,kBAAiBb,SAC1B,uCAKJ,C","sources":["components/Levels/LevelNeg13.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { Card } from 'react-bootstrap';\r\nimport { LevelContainer, StyledCard } from './styles/CommonLevelStyles';\r\nimport HighlightableText from '../UI/HighlightableText';\r\nimport LevelButton from '../UI/LevelButton';\r\n\r\nconst fadeIn = keyframes`\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n`;\r\n\r\nconst DarkOverlay = styled.div`\r\n  position: fixed;\r\n  inset: 0;\r\n  background: black;\r\n  opacity: ${props => props.darkness};\r\n  transition: opacity 2s ease;\r\n  pointer-events: none;\r\n  z-index: 50;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  animation: ${fadeIn} 3s ease-in;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst EmojiContainer = styled.div`\r\n  position: fixed;\r\n  bottom: 70px;\r\n  left: 120px;\r\n  font-size: 48px;\r\n  opacity: ${props => props.show ? 0.05 : 0};\r\n  transition: opacity 2s ease-in-out;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst LevelNeg13 = () => {\r\n  const [darkness, setDarkness] = useState(1);\r\n  const [showButton, setShowButton] = useState(false);\r\n  const [showEmoji, setShowEmoji] = useState(false);\r\n  const [revealedText, setRevealedText] = useState(\"\");\r\n  \r\n  const secretText = \"... The dog was inside you all along!\";\r\n\r\n  useEffect(() => {\r\n    // Start the darkness fade after a short delay\r\n    setTimeout(() => {\r\n      const darknessInterval = setInterval(() => {\r\n        setDarkness(prev => {\r\n          if (prev <= 0) {\r\n            clearInterval(darknessInterval);\r\n            setShowButton(true);\r\n            // Start revealing text letter by letter\r\n            let currentIndex = 0;\r\n            const textInterval = setInterval(() => {\r\n              if (currentIndex < secretText.length) {\r\n                setRevealedText(prev => prev + secretText[currentIndex]);\r\n                currentIndex++;\r\n              } else {\r\n                clearInterval(textInterval);\r\n                setShowEmoji(true);\r\n              }\r\n            }, 100);\r\n            return 0;\r\n          }\r\n          return prev > 0.80 ? 0.98*prev : prev - 0.05;\r\n        });\r\n      }, 500);\r\n    }, 1000); // Initial delay before starting fade\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <DarkOverlay darkness={darkness} />\r\n      <LevelContainer>\r\n        <StyledCard>\r\n          <Card.Body>\r\n          <Card.Title>\r\n              <HighlightableText text=\"Level 13 - Are you afraid?\" size=\"medium\"/>\r\n            </Card.Title>\r\n            <Card.Text>\r\n              <HighlightableText text=\"The darkness is coming...\" />\r\n            </Card.Text>\r\n            <Card.Text>\r\n              <HighlightableText text=\"They say bad things happen in the dark...\" size=\"small\"/>\r\n            </Card.Text>\r\n            <Card.Text>\r\n              <HighlightableText text={`${revealedText}`} />\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </StyledCard>\r\n      </LevelContainer>\r\n      {showEmoji && (\r\n        <EmojiContainer show={showEmoji}>\r\n          üê∂\r\n        </EmojiContainer>\r\n      )}\r\n      {showButton && (\r\n        <ButtonContainer>\r\n          <LevelButton \r\n            targetLevel={0}\r\n            variant=\"outline-warning\"\r\n          >\r\n            Return to the Light at Level 0\r\n          </LevelButton>\r\n        </ButtonContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LevelNeg13; "],"names":["fadeIn","keyframes","DarkOverlay","styled","div","props","darkness","ButtonContainer","EmojiContainer","show","LevelNeg13","setDarkness","useState","showButton","setShowButton","showEmoji","setShowEmoji","revealedText","setRevealedText","secretText","useEffect","setTimeout","darknessInterval","setInterval","prev","clearInterval","currentIndex","textInterval","_jsxs","_Fragment","children","_jsx","LevelContainer","StyledCard","Card","Body","Title","HighlightableText","text","size","Text","LevelButton","targetLevel","variant"],"sourceRoot":""}