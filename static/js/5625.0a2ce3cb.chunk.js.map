{"version":3,"file":"static/js/5625.0a2ce3cb.chunk.js","mappings":"2LAKA,MAAMA,EAAiBC,EAAAA,GAAOC,GAAG;;;;;;;;EAsEjC,EA5DgBC,KACd,MAAMC,GAAWC,EAAAA,EAAAA,QAAO,OACjBC,EAAeC,IAAoBC,EAAAA,EAAAA,WAAS,IAC5CC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,MA+BnC,OA7BAG,EAAAA,EAAAA,YAAU,KACRC,iBACE,IACE,MAAMC,QAAeC,UAAUC,aAAaC,aAAa,CACvDC,OAAO,EACPC,OAAO,IAGLd,EAASe,UACXf,EAASe,QAAQC,UAAYP,EAC7BN,GAAiB,GAErB,CAAE,MAAOc,GACPX,EAAS,yCACTY,QAAQb,MAAM,gBAAiBY,EACjC,CACF,CAEAE,GAGO,KAAO,IAADC,EACX,GAAoB,QAApBA,EAAIpB,EAASe,eAAO,IAAAK,GAAhBA,EAAkBJ,UAAW,CAChBhB,EAASe,QAAQC,UAAUK,YACnCC,SAAQC,GAASA,EAAMC,QAChC,KAED,KAGDC,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CAAAC,UACbF,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAAAD,UACTE,EAAAA,EAAAA,MAACC,EAAAA,EAAKC,KAAI,CAAAJ,SAAA,EACRF,EAAAA,EAAAA,KAACK,EAAAA,EAAKE,MAAK,CAAAL,SAAC,cACZF,EAAAA,EAAAA,KAACK,EAAAA,EAAKG,KAAI,CAAAN,SACPtB,GACCoB,EAAAA,EAAAA,KAAA,OAAAE,SAAMtB,IACHH,GAGHuB,EAAAA,EAAAA,KAAC7B,EAAc,CAAA+B,UACbF,EAAAA,EAAAA,KAAA,SACES,IAAKlC,EACLmC,UAAQ,EACRC,aAAW,OANfX,EAAAA,EAAAA,KAAA,OAAAE,SAAK,0CAaE,C","sources":["components/Levels/Level42.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { LevelContainer, StyledCard } from './styles/CommonLevelStyles';\r\nimport styled from 'styled-components';\r\n\r\nconst VideoContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 640px;\r\n  margin: 0 auto;\r\n  video {\r\n    width: 100%;\r\n    border-radius: 8px;\r\n  }\r\n`;\r\n\r\nconst Level42 = () => {\r\n  const videoRef = useRef(null);\r\n  const [hasPermission, setHasPermission] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function setupCamera() {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ \r\n          video: true,\r\n          audio: false \r\n        });\r\n        \r\n        if (videoRef.current) {\r\n          videoRef.current.srcObject = stream;\r\n          setHasPermission(true);\r\n        }\r\n      } catch (err) {\r\n        setError('Camera access denied or not available');\r\n        console.error('Camera error:', err);\r\n      }\r\n    }\r\n\r\n    setupCamera();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      if (videoRef.current?.srcObject) {\r\n        const tracks = videoRef.current.srcObject.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard>\r\n        <Card.Body>\r\n          <Card.Title>Level 42</Card.Title>\r\n          <Card.Text>\r\n            {error ? (\r\n              <div>{error}</div>\r\n            ) : !hasPermission ? (\r\n              <div>Please allow camera access...</div>\r\n            ) : (\r\n              <VideoContainer>\r\n                <video \r\n                  ref={videoRef}\r\n                  autoPlay \r\n                  playsInline\r\n                />\r\n              </VideoContainer>\r\n            )}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level42;"],"names":["VideoContainer","styled","div","Level42","videoRef","useRef","hasPermission","setHasPermission","useState","error","setError","useEffect","async","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","err","console","setupCamera","_videoRef$current","getTracks","forEach","track","stop","_jsx","LevelContainer","children","StyledCard","_jsxs","Card","Body","Title","Text","ref","autoPlay","playsInline"],"sourceRoot":""}