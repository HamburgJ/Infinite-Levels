{"version":3,"file":"static/js/5976.18cf4d9a.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/Levels/Level10.js","components/UI/AchievementShrine.js","components/UI/FlowerPot.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js","../node_modules/warning/warning.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    navItemProps.onClick(event);\n  });\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  // eslint-disable-next-line no-nested-ternary\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  process.env.NODE_ENV !== \"production\" ? warning(as || !(!action && props.href), '`action=false` and `href` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentLevel, markMechanicDiscovered } from '../../store';\r\nimport { Card } from 'react-bootstrap';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport FlowerPot from '../UI/FlowerPot';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport { LevelContainer, StyledCard, CenteredContainer } from './styles/CommonLevelStyles';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport AchievementShrine from '../UI/AchievementShrine';\r\nimport ChangeMachineButton from '../UI/ChangeMachineButton';\r\nimport HighlightableText from '../UI/HighlightableText';\r\n\r\nconst StyledListItem = styled(ListGroup.Item)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst Level10 = () => {\r\n\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <HighlightableText text=\"Congratulations! You've completed the first 10 levels!\" size=\"medium\"/>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <HighlightableText\r\n              text=\"If you haven't yet, don't worry, you'll figure out how to get there if you keep exploring! These first levels were meant as a tutorial to introduce you to the mechanics of the game.\"\r\n            />\r\n          </Card.Text>\r\n          <ListGroup>\r\n            <StyledListItem>\r\n              <HighlightableText text=\"Levels 0-3: \" />\r\n              <em><HighlightableText text=\"Buttons and Hints\" /></em>\r\n            </StyledListItem>\r\n            <StyledListItem>\r\n              <HighlightableText text=\"Levels 4-6: \" />\r\n              <em><HighlightableText text=\"Achievements and Items\" /></em>\r\n            </StyledListItem>\r\n            <StyledListItem>\r\n              <HighlightableText text=\"Level 7: \" />\r\n              <em><HighlightableText text=\"Basic Traveling Techniques\" /></em>\r\n            </StyledListItem>\r\n            <StyledListItem>\r\n              <HighlightableText text=\"Level 8: \" />\r\n              <em><HighlightableText text=\"Advanced Traveling Techniques\" /></em>\r\n            </StyledListItem>\r\n            <StyledListItem>\r\n              <HighlightableText text=\"Level 9: \" />\r\n              <em><HighlightableText text=\"Secrets\" /></em>\r\n            </StyledListItem>\r\n          </ListGroup>\r\n          <Card.Text>\r\n            <HighlightableText\r\n              text=\"From here on out, finding new levels will be more difficult!\"\r\n            />\r\n          </Card.Text>\r\n          <Card.Text>\r\n            <HighlightableText\r\n              text=\"Don't forget to use the game hints, and make sure you explore every level! Here are some places to start:\"\r\n            />\r\n          </Card.Text>  \r\n          <ListGroup variant=\"flush\">\r\n            <StyledListItem>\r\n              🔄 Return to Level 0 and review the game tutorial\r\n              <LevelButton targetLevel={0} >\r\n                Level 0\r\n              </LevelButton>\r\n            </StyledListItem>\r\n            <StyledListItem>\r\n              🌍 Travel forth\r\n              <LevelButton targetLevel={11} >\r\n                Level 11\r\n              </LevelButton>\r\n            </StyledListItem>\r\n          </ListGroup>\r\n          <AchievementShrine requiredCount={9}> {/* 9 needed*/}\r\n            <CenteredContainer>\r\n              <ChangeMachineButton />\r\n            </CenteredContainer>\r\n          </AchievementShrine>\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level10;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card } from 'react-bootstrap';\r\nimport allAchievements from '../../data/achievements';\r\nimport LevelButton from './LevelButton';\r\nimport debugConfig from '../../config/debug';\r\n\r\nconst ShrineContainer = styled.div`\r\n  width: 100%;\r\n  margin: 2rem auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(10px);\r\n  border: 2px solid rgba(0, 0, 0, 0.1);\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n  \r\n  ${props => props.isMaxShrine && `\r\n    background: rgba(70, 0, 70, 0.1);\r\n    border: 2px solid purple;\r\n  `}\r\n  \r\n  ${props => props.isComplete && !props.isMaxShrine && `\r\n    background: rgba(255, 215, 0, 0.1);\r\n    border-color: gold;\r\n  `}\r\n\r\n  ${props => props.isOverLimit && `\r\n    background: rgba(255, 0, 0, 0.1);\r\n    border-color: red;\r\n  `}\r\n`;\r\n\r\nconst ShrineSymbol = styled.div`\r\n  font-size: 3rem;\r\n  margin: 1rem 0;\r\n  color: ${props => {\r\n    if (props.isMaxShrine) return 'purple';\r\n    if (props.isOverLimit) return '#ff0000';\r\n    if (props.isComplete) return 'gold';\r\n    return '#666';\r\n  }};\r\n`;\r\n\r\nconst ProgressText = styled.div`\r\n  color: ${props => props.isOverLimit ? 'red' : 'inherit'};\r\n  font-weight: ${props => props.isOverLimit ? 'bold' : 'normal'};\r\n`;\r\n\r\nconst AchievementShrine = ({ \r\n  requiredCount = null,\r\n  maximumCount = null,\r\n  children,\r\n  overLimitMessage = \"Too many achievements! You must prestige to access this content.\"\r\n}) => {\r\n  const unlockedAchievements = useSelector(state => state.achievements.achievements);\r\n  const achievementCount = Object.keys(unlockedAchievements).length;\r\n  \r\n  const isMaxShrine = maximumCount !== null;\r\n  const isOverLimit = isMaxShrine && achievementCount > maximumCount;\r\n  const hasRequiredAchievements = !isMaxShrine && (\r\n    debugConfig.isDebugMode && debugConfig.debugFeatures.unlockAllShrines ? \r\n    true : achievementCount >= requiredCount\r\n  );\r\n  \r\n  const isAccessible = isMaxShrine ? !isOverLimit : hasRequiredAchievements;\r\n\r\n  return (\r\n    <ShrineContainer>\r\n      <StyledCard isComplete={isAccessible} isOverLimit={isOverLimit} isMaxShrine={isMaxShrine}>\r\n        <Card.Body>\r\n          <ShrineSymbol \r\n            isComplete={isAccessible} \r\n            isOverLimit={isOverLimit}\r\n            isMaxShrine={isMaxShrine}\r\n          >\r\n            {isMaxShrine ? '🔮' : (isAccessible ? '🔓' : '🔒')}\r\n          </ShrineSymbol>\r\n          \r\n          <Card.Title>\r\n            {isMaxShrine ? 'Prestige Shrine' : 'Achievement Shrine'}\r\n          </Card.Title>\r\n          \r\n          <ProgressText isOverLimit={isOverLimit}>\r\n            {isMaxShrine ? (\r\n              <>Current: {achievementCount} / Maximum: {maximumCount}</>\r\n            ) : (\r\n              <>Progress: {achievementCount} / {requiredCount}</>\r\n            )}\r\n          </ProgressText>\r\n          \r\n          {isMaxShrine ? (\r\n            isOverLimit ? (\r\n              <Card.Text className=\"text-danger\">\r\n                {overLimitMessage}\r\n              </Card.Text>\r\n            ) : (\r\n              <Card.Text>\r\n                {children}\r\n              </Card.Text>\r\n            )\r\n          ) : (\r\n            !hasRequiredAchievements ? (\r\n              <Card.Text>\r\n                Return when you have unlocked at least {requiredCount} achievements...\r\n              </Card.Text>\r\n            ) : (\r\n              <Card.Text>\r\n                {children}\r\n              </Card.Text>\r\n            )\r\n          )}\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </ShrineContainer>\r\n  );\r\n};\r\n\r\nexport default AchievementShrine;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { plantSeed, removePlant } from '../../store/slices/flowerSlice';\r\nimport { Card, Button, Modal, ProgressBar } from 'react-bootstrap';\r\nimport flowerTypes from '../../data/flowerTypes';\r\nimport { equipItem } from '../../store/slices/inventorySlice';\r\n\r\nconst PotContainer = styled.div`\r\n  text-align: center;\r\n  margin: 2rem 0;\r\n  padding: 1rem;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst FlowerDisplay = styled.div`\r\n  font-size: 3rem;\r\n  margin: 1rem 0;\r\n  transition: all 0.3s ease;\r\n  cursor: ${props => props.clickable ? 'pointer' : 'default'};\r\n  \r\n  &:hover {\r\n    transform: ${props => props.clickable ? 'scale(1.1)' : 'none'};\r\n  }\r\n`;\r\n\r\nconst FlowerMessage = styled.div`\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n  margin: 1rem 0;\r\n  font-style: italic;\r\n`;\r\n\r\nconst ProgressContainer = styled.div`\r\n  margin: 1rem 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst getFlowerStage = (growthLevel, flowerType) => {\r\n  if (!flowerType) return null;\r\n  const stages = flowerTypes[flowerType].stages;\r\n  const levels = Object.keys(stages).map(Number).sort((a, b) => a - b);\r\n  \r\n  for (let i = levels.length - 1; i >= 0; i--) {\r\n    if (growthLevel >= levels[i]) {\r\n      return stages[levels[i]];\r\n    }\r\n  }\r\n  return stages[0];\r\n};\r\n\r\nconst getFlowerMessage = (growthLevel, flowerType) => {\r\n  if (!flowerType) return \"An empty pot... ready for something special to grow.\";\r\n  \r\n  const messages = flowerTypes[flowerType].messages;\r\n  const levels = Object.keys(messages).map(Number).sort((a, b) => a - b);\r\n  \r\n  for (let i = levels.length - 1; i >= 0; i--) {\r\n    if (growthLevel >= levels[i]) {\r\n      return messages[levels[i]];\r\n    }\r\n  }\r\n  return messages[0];\r\n};\r\n\r\nconst getNextStageLevel = (currentLevel, flowerType) => {\r\n  if (!flowerType) return 0;\r\n  const stages = Object.keys(flowerTypes[flowerType].stages)\r\n    .map(Number)\r\n    .sort((a, b) => a - b);\r\n  \r\n  for (const level of stages) {\r\n    if (level > currentLevel) {\r\n      return level;\r\n    }\r\n  }\r\n  return stages[stages.length - 1];\r\n};\r\n\r\nconst getProgressPercentage = (growthLevel, flowerType) => {\r\n  if (!flowerType) return 0;\r\n  const currentLevel = growthLevel;\r\n  const nextLevel = getNextStageLevel(currentLevel, flowerType);\r\n  const prevLevel = Math.max(0, ...Object.keys(flowerTypes[flowerType].stages)\r\n    .map(Number)\r\n    .filter(level => level <= currentLevel));\r\n  \r\n  const progress = currentLevel - prevLevel;\r\n  const total = nextLevel - prevLevel;\r\n  return Math.min((progress / total) * 100, 100);\r\n};\r\n\r\nconst FlowerPot = () => {\r\n  const dispatch = useDispatch();\r\n  const { hasPlant, growthLevel, flowerType } = useSelector(state => state.flower);\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [showPickupWarning, setShowPickupWarning] = useState(false);\r\n  const [pendingPickup, setPendingPickup] = useState(false);\r\n\r\n  const getMaxGrowthLevel = () => {\r\n    if (!flowerType) return 0;\r\n    const stages = Object.keys(flowerTypes[flowerType].stages).map(Number);\r\n    return Math.max(...stages);\r\n  };\r\n\r\n  const getProgressPercentage = () => {\r\n    const maxLevel = getMaxGrowthLevel();\r\n    return Math.min((growthLevel / maxLevel) * 100, 100);\r\n  };\r\n\r\n  const handlePlantClick = () => {\r\n    if (hasPlant) {\r\n      setShowConfirm(true);\r\n    } else if (equippedItem?.type === 'flower') {\r\n      dispatch(plantSeed());\r\n    } else {\r\n      dispatch(plantSeed());\r\n    }\r\n  };\r\n\r\n  const handleFlowerClick = () => {\r\n    if (!hasPlant) return;\r\n    setShowPickupWarning(true);\r\n  };\r\n\r\n  const handleConfirmPickup = () => {\r\n    const stages = Object.keys(flowerTypes[flowerType].stages).map(Number).sort((a, b) => a - b);\r\n    let currentStage = 0;\r\n    for (let stage of stages) {\r\n      if (growthLevel >= stage) {\r\n        currentStage = stage;\r\n      }\r\n    }\r\n    \r\n    const flowerItem = {\r\n      type: 'flower',\r\n      flowerType,\r\n      growthLevel,\r\n      stage: getFlowerStage(growthLevel, flowerType),\r\n      name: `${flowerType.charAt(0).toUpperCase() + flowerType.slice(1)} (Growth: ${growthLevel})`,\r\n      weight: flowerTypes[flowerType].weights[currentStage]\r\n    };\r\n    \r\n    dispatch(equipItem(flowerItem));\r\n    dispatch(removePlant());\r\n    setShowPickupWarning(false);\r\n  };\r\n\r\n  return (\r\n    <PotContainer>\r\n      <FlowerDisplay \r\n        clickable={hasPlant} \r\n        onClick={handleFlowerClick}\r\n      >\r\n        {hasPlant ? getFlowerStage(growthLevel, flowerType) : null}\r\n      </FlowerDisplay>\r\n      \r\n      {hasPlant && (\r\n        <ProgressContainer>\r\n          <div style={{ marginBottom: '0.5rem', fontSize: '0.8rem', color: '#666' }}>Growth</div>\r\n          <ProgressBar \r\n            now={getProgressPercentage()} \r\n            variant=\"success\"\r\n          />\r\n        </ProgressContainer>\r\n      )}\r\n      \r\n      <FlowerMessage>\r\n        {hasPlant ? getFlowerMessage(growthLevel, flowerType) : \"An empty pot... ready for something special to grow.\"}\r\n      </FlowerMessage>\r\n\r\n      <Button \r\n        variant={hasPlant ? \"outline-danger\" : \"outline-success\"}\r\n        onClick={handlePlantClick}\r\n        size=\"sm\"\r\n      >\r\n        {hasPlant ? 'Plant New Seed' : 'Plant Seed'}\r\n      </Button>\r\n\r\n      <Modal show={showConfirm} onHide={() => setShowConfirm(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Replace Current Plant?</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to remove the current plant and start fresh?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowConfirm(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={() => {\r\n            dispatch(removePlant());\r\n            dispatch(plantSeed());\r\n            setShowConfirm(false);\r\n          }}>\r\n            Replace Plant\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={showPickupWarning} onHide={() => setShowPickupWarning(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Pick Up Flower?</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Warning: Once you pick up the flower, you cannot put it back in the pot. You'll need to plant a new seed to grow another flower.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowPickupWarning(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleConfirmPickup}>\r\n            Pick Up Flower\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </PotContainer>\r\n  );\r\n};\r\n\r\nexport default FlowerPot; ","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["ListGroupItem","React","_ref","ref","bsPrefix","active","disabled","eventKey","className","variant","action","as","props","useBootstrapPrefix","navItemProps","meta","useNavItem","key","makeEventKey","href","handleClick","useEventCallback","event","preventDefault","stopPropagation","onClick","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","initialBsPrefix","horizontal","numbered","controlledProps","useUncontrolled","activeKey","horizontalVariant","BaseNav","Object","assign","Item","StyledListItem","styled","Level10","LevelContainer","children","StyledCard","_jsxs","Card","Body","Title","HighlightableText","text","size","Text","LevelButton","targetLevel","AchievementShrine","requiredCount","CenteredContainer","ChangeMachineButton","ShrineContainer","div","isMaxShrine","isComplete","isOverLimit","ShrineSymbol","ProgressText","maximumCount","overLimitMessage","unlockedAchievements","useSelector","state","achievements","achievementCount","keys","length","hasRequiredAchievements","debugConfig","isDebugMode","debugFeatures","unlockAllShrines","isAccessible","_Fragment","PotContainer","FlowerDisplay","clickable","FlowerMessage","ProgressContainer","getFlowerStage","growthLevel","flowerType","stages","flowerTypes","levels","map","Number","sort","a","b","i","getFlowerMessage","messages","FlowerPot","dispatch","useDispatch","hasPlant","flower","equippedItem","inventory","showConfirm","setShowConfirm","useState","showPickupWarning","setShowPickupWarning","pendingPickup","setPendingPickup","handleFlowerClick","style","marginBottom","fontSize","color","ProgressBar","now","getProgressPercentage","maxLevel","getMaxGrowthLevel","Math","max","min","Button","handlePlantClick","type","plantSeed","Modal","show","onHide","Header","closeButton","Footer","removePlant","handleConfirmPickup","currentStage","stage","flowerItem","name","charAt","toUpperCase","slice","weight","weights","equipItem","func","index","child","getPercentage","percentage","round","renderProgressBar","label","visuallyHidden","striped","animated","role","width","_ref2","isChild","rest","wrapperProps","cloneElement","warning","module","exports"],"sourceRoot":""}