{"version":3,"file":"static/js/3563.2f394055.chunk.js","mappings":"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","sources":["utils/levelCategories.js","components/UI/VisitedLevelsDisplay.js","components/Levels/Level1001.js"],"sourcesContent":["import { parseStoredLevel } from './complex';\r\n\r\nexport const LEVEL_CATEGORIES = {\r\n  INTEGERS: 'Integers',\r\n  REALS: 'Reals',\r\n  COMPLEX: 'Complex',\r\n  BEYOND: 'Beyond'\r\n};\r\n\r\nexport const getLevelCategory = (levelStr) => {\r\n  if (levelStr === 'Demo' || levelStr.includes('Infinity')) {\r\n    return LEVEL_CATEGORIES.BEYOND;\r\n  }\r\n\r\n  const level = parseStoredLevel(levelStr);\r\n  if (typeof level === 'object' && 'real' in level) {\r\n    if (level.imag === 0) {\r\n      return Number.isInteger(level.real) ? \r\n        LEVEL_CATEGORIES.INTEGERS : \r\n        LEVEL_CATEGORIES.REALS;\r\n    }\r\n    return LEVEL_CATEGORIES.COMPLEX;\r\n  }\r\n\r\n  return LEVEL_CATEGORIES.INTEGERS;\r\n};\r\n\r\nexport const getComplexColor = (levelStr) => {\r\n  const level = parseStoredLevel(levelStr);\r\n  if (typeof level !== 'object' || !('real' in level)) return null;\r\n  \r\n  const angle = Math.atan2(level.imag, level.real);\r\n  const hue = ((angle + Math.PI) / (2 * Math.PI)) * 360;\r\n  return `hsl(${hue}, 70%, 50%)`;\r\n}; ","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { formatLevel, parseStoredLevel } from '../../utils/complex';\r\nimport { LEVEL_CATEGORIES, getLevelCategory, getComplexColor } from '../../utils/levelCategories';\r\n\r\nconst Container = styled.div`\r\n  background: ${props => props.theme === 'dark' ? 'rgba(0, 0, 0, 0.9)' : 'rgba(255, 255, 255, 0.95)'};\r\n  border-radius: 12px;\r\n  padding: 1.5rem;\r\n  margin: 1rem;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  border: 2px solid ${props => props.theme === 'dark' ? 'rgba(255, 215, 0, 0.3)' : 'rgba(218, 165, 32, 0.3)'};\r\n`;\r\n\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  gap: 0.25rem;\r\n  border-bottom: 2px solid ${props => props.theme === 'dark' ? 'rgba(255, 215, 0, 0.3)' : 'rgba(218, 165, 32, 0.3)'};\r\n  padding: 0 1rem;\r\n`;\r\n\r\nconst Tab = styled.button`\r\n  padding: 0.75rem 1.5rem;\r\n  border: 2px solid ${props => props.theme === 'dark' ? 'rgba(255, 215, 0, 0.3)' : 'rgba(218, 165, 32, 0.3)'};\r\n  border-bottom: none;\r\n  border-radius: 8px 8px 0 0;\r\n  background: ${props => props.active ? \r\n    (props.theme === 'dark' ? 'rgba(255, 215, 0, 0.2)' : 'rgba(218, 165, 32, 0.2)') : \r\n    'transparent'};\r\n  color: ${props => props.disabled ? \r\n    (props.theme === 'dark' ? '#666' : '#999') : \r\n    (props.theme === 'dark' ? 'gold' : '#DAA520')};\r\n  cursor: ${props => props.disabled ? 'default' : 'pointer'};\r\n  opacity: ${props => props.disabled ? 0.5 : 1};\r\n  position: relative;\r\n  margin-bottom: -2px;\r\n  z-index: ${props => props.active ? 2 : 1};\r\n\r\n  &:hover {\r\n    background: ${props => !props.disabled && (props.theme === 'dark' ? \r\n      'rgba(255, 215, 0, 0.1)' : \r\n      'rgba(218, 165, 32, 0.1)')};\r\n  }\r\n\r\n  ${props => props.active && `\r\n    background: ${props.theme === 'dark' ? 'rgba(0, 0, 0, 0.9)' : 'rgba(255, 255, 255, 0.95)'};\r\n    border-bottom: 2px solid ${props.theme === 'dark' ? 'rgba(0, 0, 0, 0.9)' : 'rgba(255, 255, 255, 0.95)'};\r\n  `}\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  padding-top: 1.5rem;\r\n`;\r\n\r\nconst LevelGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\r\n  gap: 0.5rem;\r\n  max-height: 300px;\r\n  overflow-y: ${props => props.shouldScroll ? 'auto' : 'hidden'};\r\n  padding-right: 0.5rem;\r\n  padding-top: 0.5rem;\r\n`;\r\n\r\nconst LevelBadge = styled.div`\r\n  background: ${props => props.complexColor || \r\n    (props.theme === 'dark' ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.05)')};\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  font-family: monospace;\r\n  transition: all 0.2s ease;\r\n  color: ${props => props.complexColor ? '#fff' : 'inherit'};\r\n`;\r\n\r\nconst CategoryDescription = styled.div`\r\n  color: ${props => props.theme === 'dark' ? '#999' : '#666'};\r\n  font-style: italic;\r\n  text-align: center;\r\n  margin-bottom: 1rem;\r\n  min-height: 2em;\r\n`;\r\n\r\nconst LockedMessage = styled.div`\r\n  color: ${props => props.theme === 'dark' ? '#666' : '#999'};\r\n  text-align: center;\r\n  font-style: italic;\r\n  padding: 2rem;\r\n  height: 200px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst QuestionMark = styled.div`\r\n  font-size: 3rem;\r\n  opacity: 0.5;\r\n  margin-bottom: 1rem;\r\n  color: ${props => props.theme === 'dark' ? '#444' : '#ccc'};\r\n`;\r\nconst CATEGORY_MESSAGES = {\r\n    INTEGERS: \"Numbers as old as counting itself...\",\r\n    REALS: \"Between every two numbers lies infinity...\",\r\n    COMPLEX: \"Where imagination meets reality...\",\r\n    BEYOND: \"Beyond the boundaries of conventional mathematics...\"\r\n  };\r\n  \r\nconst LOCKED_MESSAGE = \"Explore more distant realms to unlock this dimension...\";\r\nconst VisitedLevelsDisplay = () => {\r\n  const [activeTab, setActiveTab] = useState(LEVEL_CATEGORIES.INTEGERS);\r\n  const theme = useSelector(state => state.theme);\r\n  const visitedLevels = useSelector(state => state.game.visitedLevels);\r\n\r\n  const categorizedLevels = visitedLevels.reduce((acc, level) => {\r\n    const category = getLevelCategory(level);\r\n    if (!acc[category]) acc[category] = [];\r\n    acc[category].push(level);\r\n    return acc;\r\n  }, {});\r\n\r\n  const shouldShowTab = (category) => categorizedLevels[category]?.length > 0;\r\n\r\n  const sortLevels = (a, b) => {\r\n    const levelA = parseStoredLevel(a);\r\n    const levelB = parseStoredLevel(b);\r\n    \r\n    // Handle special cases like 'Demo'\r\n    if (typeof levelA === 'string' || typeof levelB === 'string') {\r\n      return a.localeCompare(b);\r\n    }\r\n    \r\n    // Handle complex numbers\r\n    if (typeof levelA === 'object' && typeof levelB === 'object') {\r\n      // First compare real parts\r\n      if (levelA.real !== levelB.real) {\r\n        return levelA.real - levelB.real;\r\n      }\r\n      // If real parts are equal, compare imaginary parts\r\n      return levelA.imag - levelB.imag;\r\n    }\r\n    \r\n    // Handle simple numbers\r\n    return Number(levelA) - Number(levelB);\r\n  };\r\n\r\n  return (\r\n    <Container theme={theme}>\r\n      <TabContainer>\r\n        {Object.values(LEVEL_CATEGORIES).map(category => (\r\n          <Tab\r\n            key={category}\r\n            active={activeTab === category}\r\n            disabled={!shouldShowTab(category)}\r\n            onClick={() => setActiveTab(category)}\r\n            theme={theme}\r\n          >\r\n            {shouldShowTab(category) ? category : '???'}\r\n          </Tab>\r\n        ))}\r\n      </TabContainer>\r\n      \r\n      {shouldShowTab(activeTab) ? (\r\n        <LevelGrid shouldScroll={categorizedLevels[activeTab]?.length > 12}>\r\n          {(categorizedLevels[activeTab] || []).sort(sortLevels).map(level => (\r\n            <LevelBadge \r\n              key={level} \r\n              theme={theme}\r\n              complexColor={activeTab === LEVEL_CATEGORIES.COMPLEX ? getComplexColor(level) : null}\r\n            >\r\n              {formatLevel(level)}\r\n            </LevelBadge>\r\n          ))}\r\n        </LevelGrid>\r\n      ) : (\r\n        <LockedMessage theme={theme}>\r\n          <QuestionMark theme={theme}>?</QuestionMark>\r\n          {LOCKED_MESSAGE}\r\n        </LockedMessage>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VisitedLevelsDisplay; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentLevel, markMechanicDiscovered } from '../../store';\r\nimport { Card } from 'react-bootstrap';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport FlowerPot from '../UI/FlowerPot';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport { LevelContainer, StyledCard, CenteredContainer } from './styles/CommonLevelStyles';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport AchievementShrine from '../UI/AchievementShrine';\r\nimport CollectableCard from '../Items/CollectableCard';\r\nimport ChangeMachineButton from '../UI/ChangeMachineButton';\r\nimport VisitedLevelsDisplay from '../UI/VisitedLevelsDisplay';\r\n\r\nconst Level1001 = () => {\r\n\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard>\r\n        <Card.Body>\r\n          <Card.Title>why is this here?</Card.Title>\r\n          <Card.Text>\r\n            why is this here?\r\n          </Card.Text>\r\n          \r\n          <VisitedLevelsDisplay />\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level1001;"],"names":["LEVEL_CATEGORIES","INTEGERS","REALS","COMPLEX","BEYOND","getComplexColor","levelStr","level","parseStoredLevel","Math","atan2","imag","real","PI","Container","styled","div","props","theme","TabContainer","Tab","button","active","disabled","LevelGrid","shouldScroll","LevelBadge","complexColor","LockedMessage","QuestionMark","VisitedLevelsDisplay","_categorizedLevels$ac","activeTab","setActiveTab","useState","useSelector","state","categorizedLevels","game","visitedLevels","reduce","acc","category","includes","Number","isInteger","getLevelCategory","push","shouldShowTab","_categorizedLevels$ca","length","_jsxs","children","_jsx","Object","values","map","onClick","sort","sortLevels","a","b","levelA","levelB","localeCompare","formatLevel","Level1001","LevelContainer","StyledCard","Card","Body","Title","Text"],"sourceRoot":""}