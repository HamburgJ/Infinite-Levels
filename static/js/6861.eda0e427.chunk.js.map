{"version":3,"file":"static/js/6861.eda0e427.chunk.js","mappings":"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","sources":["components/Levels/Level2.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","components/UI/NestedAccordion.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentLevel } from '../../store';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport NestedAccordion from '../UI/NestedAccordion';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport { LevelContainer, StyledCard, CenteredContainer } from './styles/CommonLevelStyles';\r\nimport { FaQuestionCircle } from 'react-icons/fa';\r\nimport HighlightableText from '../UI/HighlightableText';\r\n\r\nconst Level2 = () => {\r\n  const dispatch = useDispatch();\r\n  const { unlockAchievement } = useAchievements();\r\n\r\n  useEffect(() => {\r\n    unlockAchievement('LEVEL_1');\r\n  }, [unlockAchievement]);\r\n\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <HighlightableText text=\"Congratulations! You found the button.\" size=\"medium\"/>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <HighlightableText\r\n              text=\"However, you will soon find that this game in not linear, and that you may need to backtrack and reexamine places you've already been.\"\r\n            />\r\n          </Card.Text>\r\n          <Card.Text>\r\n            <HighlightableText\r\n              text={`Here's little hint, for your effort: The hint system in the menu above is an important and neccisary part of this game. Each level has a unique hint that may allow you to progress further in the game. Using the 'hint' system is not cheating, but rather a required part of the game. Take a look at the hint in Level 3, and use it to progress!`}\r\n            />\r\n          </Card.Text>\r\n          <CenteredContainer>\r\n            <LevelButton targetLevel={1}>Back to level 1</LevelButton>\r\n          </CenteredContainer>\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level2; ","\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null || onSelect(eventKeyPassed, e);\n    onClick == null || onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport HighlightableText from './HighlightableText';\r\n\r\nconst AccordionWrapper = styled.div`\r\n  margin: 0.5rem 0;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  padding: 0.5rem;\r\n`;\r\nconst StyledAccordion = styled(Accordion)`\r\n  .accordion-button:not(.collapsed) {\r\n    color: inherit;\r\n    background-color: rgba(0, 0, 0, 0.03);\r\n    box-shadow: none;\r\n  }\r\n\r\n  .accordion-button:focus {\r\n    box-shadow: none;\r\n    border-color: rgba(0, 0, 0, 0.125);\r\n  }\r\n\r\n  .accordion-button::after {\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n  }\r\n\r\n  .accordion-button:not(.collapsed)::after {\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n  }\r\n`;\r\nconst NestedAccordion = ({ \r\n  data, \r\n  openSections = [], \r\n  visitedSections = [], \r\n  onToggle,\r\n  depth = 0, \r\n  path = '' \r\n}) => {\r\n  if (Array.isArray(data)) {\r\n    if (data.length === 0) {\r\n      return (\r\n        <TextWrapper>\r\n          <HighlightableText text=\"Keep searching...\" />\r\n        </TextWrapper>\r\n      );\r\n    }\r\n\r\n    if (typeof data[0] === 'string' || React.isValidElement(data[0])) {\r\n      return (\r\n        <TextWrapper>\r\n          {typeof data[0] === 'string' ? (\r\n            <HighlightableText text={data.join(' ')} />\r\n          ) : (\r\n            data[0]\r\n          )}\r\n        </TextWrapper>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <StyledAccordion \r\n        activeKey={openSections.filter(key => key.startsWith(path))}\r\n        alwaysOpen\r\n      >\r\n        {data.map((item, index) => {\r\n          const currentPath = path ? `${path}-${index}` : `${index}`;\r\n          const isVisited = visitedSections.includes(currentPath);\r\n          \r\n          return (\r\n            <Accordion.Item \r\n              key={currentPath} \r\n              eventKey={currentPath}\r\n              className={isVisited ? 'visited' : ''}\r\n            >\r\n              <Accordion.Header \r\n                onClick={() => onToggle(currentPath)}\r\n              />\r\n              <Accordion.Body>\r\n                <NestedAccordion \r\n                  data={item}\r\n                  openSections={openSections}\r\n                  visitedSections={visitedSections} \r\n                  onToggle={onToggle}\r\n                  depth={depth + 1}\r\n                  path={currentPath}\r\n                />\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          );\r\n        })}\r\n      </StyledAccordion>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default NestedAccordion; "],"names":["Level2","useDispatch","unlockAchievement","useAchievements","useEffect","_jsx","LevelContainer","children","StyledCard","_jsxs","Card","Body","Title","HighlightableText","text","size","Text","CenteredContainer","LevelButton","targetLevel","isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","React","displayName","AccordionCollapse","_ref","ref","as","Component","bsPrefix","className","props","useContext","AccordionContext","useBootstrapPrefix","Collapse","in","classNames","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","onClick","accordionOnClick","onSelect","alwaysOpen","e","eventKeyPassed","filter","k","useAccordionButton","type","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","value","Accordion","activeKey","flush","controlledProps","useUncontrolled","prefix","Object","assign","Button","Item","Header","styled","div","TextWrapper","StyledAccordion","NestedAccordion","data","openSections","visitedSections","onToggle","depth","path","length","join","key","startsWith","map","item","index","currentPath","isVisited"],"sourceRoot":""}