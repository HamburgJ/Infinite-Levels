{"version":3,"file":"static/js/7761.76553fe3.chunk.js","mappings":"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","sources":["components/Levels/Level15.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentLevel, markMechanicDiscovered } from '../../store';\r\nimport { Card, Button, ProgressBar } from 'react-bootstrap';\r\n\r\nconst LevelContainer = styled.div`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  background: rgba(255, 255, 255, 0.9);\r\n  backdrop-filter: blur(10px);\r\n  border: 2px solid rgba(0, 0, 0, 0.1);\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  transition: opacity 0.5s;\r\n  opacity: ${props => props.fading ? 0.5 : 1};\r\n`;\r\n\r\nconst UnstableText = styled.div`\r\n  font-family: monospace;\r\n  text-align: center;\r\n  color: ${props => props.isWarning ? '#ff0000' : '#000'};\r\n  animation: ${props => props.isWarning ? 'blink 1s infinite' : 'none'};\r\n  margin: 1rem 0;\r\n\r\n  @keyframes blink {\r\n    50% { opacity: 0; }\r\n  }\r\n`;\r\n\r\nconst Level15 = () => {\r\n  const dispatch = useDispatch();\r\n  const [stability, setStability] = useState(100);\r\n  const [isWarning, setIsWarning] = useState(false);\r\n  const [isFading, setIsFading] = useState(false);\r\n\r\n  const handleCollapse = React.useCallback(() => {\r\n    setIsFading(true);\r\n    setTimeout(() => {\r\n      dispatch(setCurrentLevel(14));\r\n    }, 1000);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(markMechanicDiscovered('instability'));\r\n    \r\n    const timer = setInterval(() => {\r\n      setStability(prev => {\r\n        const newStability = prev - 1;\r\n        if (newStability <= 20) setIsWarning(true);\r\n        if (newStability <= 0) {\r\n          clearInterval(timer);\r\n          handleCollapse();\r\n        }\r\n        return Math.max(0, newStability);\r\n      });\r\n    }, 100);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [dispatch, handleCollapse]);\r\n\r\n  const handleComplexJump = () => {\r\n    dispatch(setCurrentLevel({ real: 15, imag: 1 }));\r\n  };\r\n\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard fading={isFading}>\r\n        <Card.Body>\r\n          <Card.Title>Level 15 - Instability</Card.Title>\r\n          <Card.Text>\r\n            Warning: This level is becoming unstable!\r\n          </Card.Text>\r\n\r\n          <ProgressBar \r\n            now={stability} \r\n            variant={stability <= 20 ? \"danger\" : \"info\"}\r\n            label={`Stability: ${stability}%`}\r\n          />\r\n\r\n          <UnstableText isWarning={isWarning}>\r\n            {isWarning ? \"CRITICAL: LEVEL COLLAPSE IMMINENT\" : \"Status: Unstable\"}\r\n          </UnstableText>\r\n\r\n          <Card.Text>\r\n            Quick! Try to escape through the complex plane before the level collapses!\r\n          </Card.Text>\r\n\r\n          <div className=\"d-flex justify-content-center\">\r\n            <Button \r\n              variant=\"warning\"\r\n              onClick={handleComplexJump}\r\n              disabled={stability <= 0}\r\n            >\r\n              Jump to Level 15 + i\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level15; ","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;"],"names":["LevelContainer","styled","div","StyledCard","Card","props","fading","UnstableText","isWarning","Level15","dispatch","useDispatch","stability","setStability","useState","setIsWarning","isFading","setIsFading","handleCollapse","React","setTimeout","setCurrentLevel","useEffect","markMechanicDiscovered","timer","setInterval","prev","newStability","clearInterval","Math","max","_jsx","children","_jsxs","Body","Title","Text","ProgressBar","now","variant","label","className","Button","onClick","handleComplexJump","real","imag","disabled","map","func","index","child","hasChildOfType","type","toArray","some","getPercentage","min","percentage","round","renderProgressBar","_ref","ref","visuallyHidden","striped","animated","style","bsPrefix","role","classNames","width","_ref2","isChild","rest","useBootstrapPrefix","wrapperProps","cloneElement","displayName"],"sourceRoot":""}