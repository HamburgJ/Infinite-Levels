{"version":3,"file":"static/js/7761.ffdd3079.chunk.js","mappings":"gQAaA,MA8EA,EA9EgBA,KACd,MAAMC,GAAWC,EAAAA,EAAAA,OACX,kBAAEC,IAAsBC,EAAAA,EAAAA,MACvBC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,MACpCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAUC,IAAeJ,EAAAA,EAAAA,WAAS,GAEnCK,EAAiBC,EAAAA,aAAkB,MACvCC,EAAAA,EAAAA,GAAoBb,EAAU,CAAEc,KAAM,GAAIC,KAAM,GAAKL,EAAY,GAChE,CAACV,IAqBJ,OAnBAgB,EAAAA,EAAAA,YAAU,KACRhB,GAASiB,EAAAA,EAAAA,IAAuB,gBAEhC,MAAMC,EAAQC,aAAY,KACxBd,GAAae,IACX,MAAMC,EAAeD,EAAO,EAO5B,OANIC,GAAgB,IAAIb,GAAa,GACjCa,GAAgB,IAClBC,cAAcJ,IACdL,EAAAA,EAAAA,GAAoBb,EAAU,CAAEc,KAAM,GAAIC,KAAM,GAAKL,GACrDR,EAAkB,aAEbqB,KAAKC,IAAI,EAAGH,EAAa,GAChC,GACD,KAEH,MAAO,IAAMC,cAAcJ,EAAM,GAChC,CAAClB,EAAUW,KAGZc,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CAAAC,UACbF,EAAAA,EAAAA,KAACG,EAAAA,GAAU,CAACC,OAAQpB,EAASkB,UAC3BG,EAAAA,EAAAA,MAACC,EAAAA,EAAKC,KAAI,CAAAL,SAAA,EACRF,EAAAA,EAAAA,KAACM,EAAAA,EAAKE,MAAK,CAAAN,UACTF,EAAAA,EAAAA,KAACS,EAAAA,EAAiB,CAACC,KAAK,yBAAyBC,KAAK,cAExDX,EAAAA,EAAAA,KAACM,EAAAA,EAAKM,KAAI,CAAAV,UACRF,EAAAA,EAAAA,KAACS,EAAAA,EAAiB,CAACC,KAAK,iDAG1BV,EAAAA,EAAAA,KAACa,EAAAA,EAAW,CACVC,IAAKnC,EACLoC,QAASpC,GAAa,GAAK,SAAW,OACtCqC,MAAO,cAAcrC,QAGvBqB,EAAAA,EAAAA,KAACiB,EAAAA,EAAY,CAACnC,UAAWA,EAAUoB,UACjCF,EAAAA,EAAAA,KAACS,EAAAA,EAAiB,CAChBC,KAAM5B,EAAY,oCAAsC,wBAI5DkB,EAAAA,EAAAA,KAACM,EAAAA,EAAKM,KAAI,CAAAV,UACRF,EAAAA,EAAAA,KAACS,EAAAA,EAAiB,CAACC,KAAK,0EAIrB,IAAIQ,MAAM,KAAKC,KAAI,CAACC,EAAGC,KACtBrB,EAAAA,EAAAA,KAACsB,EAAAA,GAAiB,CAAApB,UAClBG,EAAAA,EAAAA,MAACkB,EAAAA,EAAW,CAEVC,YAAaH,EACbN,QAAQ,UACRU,MAAO,CAAEC,OAAQ,WAAYxB,SAAA,CAC9B,iBACgBmB,EAAM,OALhBA,aAaF,C","sources":["components/Levels/Level15.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentLevel, markMechanicDiscovered } from '../../store';\r\nimport { Card, Button, ProgressBar } from 'react-bootstrap';\r\nimport HighlightableText from '../UI/HighlightableText';\r\nimport { LevelContainer, StyledCard, CenteredContainer } from './styles/CommonLevelStyles';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport { handleLevelCollapse, UnstableText } from '../../utils/levelCollapse';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport achievements from '../../data/achievements';\r\n\r\n\r\nconst Level15 = () => {\r\n  const dispatch = useDispatch();\r\n  const { unlockAchievement } = useAchievements();\r\n  const [stability, setStability] = useState(100);\r\n  const [isWarning, setIsWarning] = useState(false);\r\n  const [isFading, setIsFading] = useState(false);\r\n\r\n  const handleCollapse = React.useCallback(() => {\r\n    handleLevelCollapse(dispatch, { real: 15, imag: 0 }, setIsFading);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(markMechanicDiscovered('instability'));\r\n    \r\n    const timer = setInterval(() => {\r\n      setStability(prev => {\r\n        const newStability = prev - 1;\r\n        if (newStability <= 20) setIsWarning(true);\r\n        if (newStability <= 0) {\r\n          clearInterval(timer);\r\n          handleLevelCollapse(dispatch, { real: 15, imag: 0 }, setIsFading);\r\n          unlockAchievement('COLLAPSE');\r\n        }\r\n        return Math.max(0, newStability);\r\n      });\r\n    }, 100);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [dispatch, handleCollapse]);\r\n\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard fading={isFading}>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <HighlightableText text=\"Level 15 - Instability\" size=\"medium\"/>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <HighlightableText text=\"Warning: This level is becoming unstable!\" />\r\n          </Card.Text>\r\n\r\n          <ProgressBar \r\n            now={stability} \r\n            variant={stability <= 20 ? \"danger\" : \"info\"}\r\n            label={`Stability: ${stability}%`}\r\n          />\r\n\r\n          <UnstableText isWarning={isWarning}>\r\n            <HighlightableText \r\n              text={isWarning ? \"CRITICAL: LEVEL COLLAPSE IMMINENT\" : \"Status: Unstable\"}\r\n            />\r\n          </UnstableText>\r\n\r\n          <Card.Text>\r\n            <HighlightableText text=\"Quick! Try to escape to a stable level before this level collapses!\" />\r\n          </Card.Text>\r\n\r\n        \r\n              {[...Array(21)].map((_, index) => (\r\n                <CenteredContainer>\r\n                <LevelButton \r\n                  key={index} \r\n                  targetLevel={index} \r\n                  variant=\"warning\"\r\n                  style={{ margin: '0.25rem' }}\r\n                >\r\n                  Jump to Level {index}!!\r\n                </LevelButton>\r\n                </CenteredContainer>\r\n              ))}\r\n          \r\n         \r\n        </Card.Body>\r\n      </StyledCard>\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level15; "],"names":["Level15","dispatch","useDispatch","unlockAchievement","useAchievements","stability","setStability","useState","isWarning","setIsWarning","isFading","setIsFading","handleCollapse","React","handleLevelCollapse","real","imag","useEffect","markMechanicDiscovered","timer","setInterval","prev","newStability","clearInterval","Math","max","_jsx","LevelContainer","children","StyledCard","fading","_jsxs","Card","Body","Title","HighlightableText","text","size","Text","ProgressBar","now","variant","label","UnstableText","Array","map","_","index","CenteredContainer","LevelButton","targetLevel","style","margin"],"sourceRoot":""}