{"version":3,"file":"static/js/3004.5d767160.chunk.js","mappings":"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AKiG,IAAIjG,KAAKkG,MAAMpB,EAAGC,GAAI,KACtCoB,GAAQnG,KAAKoG,IAAIN,GAASE,EAC1BK,GAAQrG,KAAKsG,IAAIR,GAASE,EAEhCf,EAAa,CAAEH,EAAGqB,EAAMpB,EAAGsB,GAAO,EAIpC,OADAf,SAASiB,iBAAiB,YAAapB,GAChC,IAAMG,SAASkB,oBAAoB,YAAarB,EAAgB,GACtE,CAAC7C,IAEY,UAAZA,GAEArB,EAAAA,EAAAA,KAACkD,EAAe,CAACsC,GAAG,kBAAiBvF,UACnCD,EAAAA,EAAAA,KAACuD,EAAe,CACdG,YAAaA,EACbF,QAASO,EAAUF,EACnBJ,QAASM,EAAUD,EAAE7D,SAEpBA,OAOPD,EAAAA,EAAAA,KAACkD,EAAe,CAACsC,GAAG,kBAAiBvF,UACnCD,EAAAA,EAAAA,KAACmD,EAAY,CACXO,YAAaA,EACbL,OAAQhC,EAAQpB,SAEfA,KAEa,E,wBCvHtB,MAiCMwF,EAAkB,CACtBC,OAAQ,CACNC,eAAgB,CACd,uBACA,gCACA,gCACA,wBACA,wBAEFC,gBAAiB,CACf,kBACA,uBACA,yBACA,uBACA,wBAEFC,aAAc,CACZ,qBACA,uBACA,qBACA,sBACA,eAEFC,SAAU,CACR,oBACA,qBACA,qBACA,uBACA,wBAEFC,QAAS,CACP,eACA,oBACA,sBACA,qBACA,gBAIJC,SAAU,CACRC,MAAO,CACL,UACA,WACA,UACA,cACA,YACA,eACA,YACA,eACA,cACA,oBAEFC,UAAW,CACT,QACA,OACA,UACA,WACA,YACA,YACA,SACA,QACA,aACA,WAEFC,UAAW,CACT,QACA,SACA,SACA,OACA,SACA,YACA,OACA,UACA,SACA,aAIJC,MAAO,CACLC,SAAU,CACR,eACA,cACA,cACA,UACA,SAEFC,WAAY,CACV,SACA,WACA,eACA,aACA,YAEFC,WAAY,CACV,UACA,UACA,SACA,WACA,eAIJC,QAAS,CACPC,OAAQ,CACN,aACA,eACA,gBACA,iBACA,iBACA,iBACA,eACA,oBACA,aACA,YAEFH,WAAY,CACV,cACA,eACA,eACA,aACA,YACA,eACA,aACA,k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","sources":["components/UI/GamblingMachine.js","components/UI/ChaseButton.js","components/Games/ArgumentLogic.js","components/Games/ArgumentSimulator.js","components/Characters/Jester.js","components/Storage/Bookshelf.js","components/Levels/LevelDemo.js","components/UI/AchievementShrine.js","components/UI/FlowerPot.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeFromWallet, equipItem } from '../../store';\r\nimport { CollectibleLevelButton } from './SharedStyles';\r\n\r\nconst fallAnimation = keyframes`\r\n  0% {\r\n    transform: translateY(-200px) rotate(0deg);\r\n    opacity: 0;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    transform: translateY(0) rotate(360deg);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst floatAnimation = keyframes`\r\n  0%, 100% { transform: translateY(0px) rotate(3deg); }\r\n  50% { transform: translateY(-10px) rotate(-3deg); }\r\n`;\r\n\r\nconst BUTTON_COLORS = {\r\n  common_blue: {\r\n    bg: '#4287f5',\r\n    border: '#2563eb'\r\n  },\r\n  common_green: {\r\n    bg: '#22c55e',\r\n    border: '#16a34a'\r\n  },\r\n  common_red: {\r\n    bg: '#ef4444',\r\n    border: '#dc2626'\r\n  },\r\n  common_orange: {\r\n    bg: '#f97316',\r\n    border: '#ea580c'\r\n  },\r\n  common_teal: {\r\n    bg: '#06b6d4',\r\n    border: '#0891b2'\r\n  },\r\n  common_pink: {\r\n    bg: '#ec4899',\r\n    border: '#db2777'\r\n  },\r\n  uncommon: {\r\n    bg: '#22c55e',\r\n    border: '#16a34a'\r\n  },\r\n  rare: {\r\n    bg: '#ef4444',\r\n    border: '#dc2626'\r\n  },\r\n  epic: {\r\n    bg: '#a855f7',\r\n    border: '#9333ea'\r\n  },\r\n  legendary: {\r\n    bg: '#fbbf24',\r\n    border: '#f59e0b'\r\n  }\r\n};\r\n\r\nconst MachineContainer = styled.div`\r\n  width: 300px;\r\n  height: 450px;\r\n  position: relative;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst GlassDome = styled.div`\r\n  width: 260px;\r\n  height: 260px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border: 12px solid #ff6b6b;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  top: 80px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  overflow: hidden;\r\n  box-shadow: inset 0 0 30px rgba(0,0,0,0.15);\r\n  z-index: 2;\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FloatingButton = styled(CollectibleLevelButton)`\r\n  animation: ${floatAnimation} ${props => 2 + Math.random() * 2}s infinite ease-in-out;\r\n  animation-delay: ${props => Math.random() * -2}s;\r\n  transform-origin: center;\r\n  scale: 0.7;\r\n  border-radius: 12px;\r\n  opacity: 1;\r\n  pointer-events: none;\r\n  background: ${props => {\r\n    if (props.rarity.startsWith('common_')) {\r\n      return BUTTON_COLORS[props.rarity].bg;\r\n    }\r\n    return BUTTON_COLORS.common_blue.bg;\r\n  }};\r\n  border: 3px solid ${props => {\r\n    if (props.rarity.startsWith('common_')) {\r\n      return BUTTON_COLORS[props.rarity].border;\r\n    }\r\n    return BUTTON_COLORS.common_blue.border;\r\n  }};\r\n`;\r\n\r\nconst Base = styled.div`\r\n  width: 200px;\r\n  height: 180px;\r\n  background: #ff6b6b;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  border-radius: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding-bottom: 20px;\r\n  z-index: 1;\r\n`;\r\n\r\nconst CoinSlot = styled.div`\r\n  width: 40px;\r\n  height: 8px;\r\n  background: #444;\r\n  border-radius: 4px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Chute = styled.div`\r\n  width: 100px;\r\n  height: 80px;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 12px;\r\n  position: absolute;\r\n  bottom: 60px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: inset 0 2px 10px rgba(0,0,0,0.3);\r\n`;\r\n\r\nconst ButtonDisplay = styled(CollectibleLevelButton)`\r\n  animation: ${props => props.falling ? fallAnimation : 'none'} 1s ease-out;\r\n  position: relative;\r\n  scale: 0.8;\r\n  z-index: 10;\r\n  cursor: ${props => props.isCollectable ? 'pointer' : 'default'};\r\n  pointer-events: ${props => props.isCollectable ? 'auto' : 'none'};\r\n`;\r\n\r\nconst InsertButton = styled.button`\r\n  background: #ffd700;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 20px;\r\n  color: #333;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  \r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 2px 8px rgba(0,0,0,0.2);\r\n  }\r\n  \r\n  &:disabled {\r\n    background: #ccc;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst FloatingButtonMemo = React.memo(({ value, rarity, style }) => {\r\n  return (\r\n    <FloatingButton\r\n      rarity={rarity}\r\n      style={style}\r\n    >\r\n      {value}\r\n    </FloatingButton>\r\n  );\r\n});\r\n\r\nconst GamblingMachine = () => {\r\n  const dispatch = useDispatch();\r\n  const [currentButton, setCurrentButton] = useState(null);\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  const [buttonInChute, setButtonInChute] = useState(null);\r\n  const walletDenominations = useSelector(state => state.inventory.walletDenominations);\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const hasWallet = equippedItem?.type === 'wallet';\r\n  const hasQuarters = walletDenominations[25] > 0;\r\n\r\n  const dummyButtons = [\r\n    { value: 5, variant: 'primary', weight: 1 },\r\n    { value: 15, variant: 'success', weight: 1 },\r\n    { value: 25, variant: 'danger', weight: 1 },\r\n    { value: 42, variant: 'warning', weight: 0.7 },\r\n    { value: 88, variant: 'info', weight: 0.7 },\r\n    { value: 100, variant: 'danger', weight: 0.5 },\r\n    { value: 123, variant: 'warning', weight: 0.3 },\r\n    { value: 256, variant: 'info', weight: 0.2 },\r\n    { value: 404, variant: 'danger', weight: 0.1 },\r\n    { value: 500, variant: 'success', weight: 0.05 }\r\n  ];\r\n\r\n  const generateButton = () => {\r\n    const rand = Math.random();\r\n    if (rand < 0.4) return { value: Math.floor(Math.random() * 9) + 1, variant: 'primary' };\r\n    if (rand < 0.7) return { value: Math.floor(Math.random() * 20) + 10, variant: 'success' };\r\n    if (rand < 0.85) return { value: Math.floor(Math.random() * 30) + 30, variant: 'warning' };\r\n    if (rand < 0.95) return { value: Math.floor(Math.random() * 50) + 80, variant: 'danger' };\r\n    if (rand < 0.98) return { value: Math.floor(Math.random() * 100) + 200, variant: 'info' };\r\n    return { value: Math.floor(Math.random() * 200) + 300, variant: 'danger' };\r\n  };\r\n\r\n  const handleInsert = () => {\r\n    if (buttonInChute) {\r\n      dispatch(equipItem({\r\n        type: 'levelButton',\r\n        ...buttonInChute\r\n      }));\r\n      setButtonInChute(null);\r\n      return;\r\n    }\r\n\r\n    dispatch(removeFromWallet({\r\n      value: 25,\r\n      amount: 1\r\n    }));\r\n    \r\n    setIsAnimating(true);\r\n    const newButton = generateButton();\r\n    setCurrentButton(newButton);\r\n    \r\n    setTimeout(() => {\r\n      setIsAnimating(false);\r\n      setButtonInChute(newButton);\r\n      setCurrentButton(null);\r\n    }, 1000);\r\n  };\r\n\r\n  const getRarityForValue = (value) => {\r\n    // Randomly select a common color variant\r\n    const commonColors = ['common_blue', 'common_green', 'common_red', 'common_orange', 'common_teal', 'common_pink'];\r\n    return commonColors[Math.floor(Math.random() * commonColors.length)];\r\n  };\r\n\r\n  const renderFloatingButtons = useMemo(() => {\r\n    const buttons = [];\r\n    const numButtons = 50;\r\n    \r\n    for (let i = 0; i < numButtons; i++) {\r\n      const randomButton = dummyButtons[Math.floor(Math.random() * dummyButtons.length)];\r\n      const rarity = getRarityForValue(randomButton.value);\r\n      const style = {\r\n        position: 'absolute',\r\n        left: `${Math.random() * 85}%`,\r\n        top: `${Math.random() * 85}%`,\r\n      };\r\n      \r\n      buttons.push(\r\n        <FloatingButtonMemo\r\n          key={i}\r\n          value={randomButton.value}\r\n          rarity={rarity}\r\n          style={style}\r\n        />\r\n      );\r\n    }\r\n    return buttons;\r\n  }, []);\r\n\r\n  return (\r\n    <MachineContainer>\r\n      <GlassDome>\r\n        <ButtonsContainer>\r\n          {renderFloatingButtons}\r\n        </ButtonsContainer>\r\n      </GlassDome>\r\n      <Base>\r\n        <Chute>\r\n          {(currentButton || buttonInChute) && (\r\n            <ButtonDisplay \r\n              falling={isAnimating}\r\n              variant={currentButton?.variant || buttonInChute?.variant}\r\n              isCollectable={!!buttonInChute}\r\n            >\r\n              {currentButton?.value || buttonInChute?.value}\r\n            </ButtonDisplay>\r\n          )}\r\n        </Chute>\r\n        <CoinSlot />\r\n        <InsertButton \r\n          onClick={handleInsert}\r\n          disabled={(!hasWallet || !hasQuarters) && !buttonInChute}\r\n        >\r\n          {buttonInChute ? 'Collect Button' : 'Insert 25¢'}\r\n        </InsertButton>\r\n      </Base>\r\n    </MachineContainer>\r\n  );\r\n};\r\n\r\nexport default GamblingMachine;","import React, { useState, useEffect } from 'react';\r\nimport styled, { keyframes, css } from 'styled-components';\r\nimport LevelButton from './LevelButton';\r\n\r\nconst circleMotion = keyframes`\r\n  from {\r\n    transform: rotate(0deg) translateX(100px) rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg) translateX(100px) rotate(-360deg);\r\n  }\r\n`;\r\n\r\nconst figureEightMotion = keyframes`\r\n  0% {\r\n    transform: translate(100px, 0);\r\n  }\r\n  25% {\r\n    transform: translate(0, 50px);\r\n  }\r\n  50% {\r\n    transform: translate(-100px, 0);\r\n  }\r\n  75% {\r\n    transform: translate(0, -50px);\r\n  }\r\n  100% {\r\n    transform: translate(100px, 0);\r\n  }\r\n`;\r\n\r\nconst wobbleMotion = keyframes`\r\n  0% { transform: rotate(0deg); }\r\n  25% { transform: rotate(10deg); }\r\n  50% { transform: rotate(0deg); }\r\n  75% { transform: rotate(-10deg); }\r\n  100% { transform: rotate(0deg); }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  position: relative;\r\n  width: 300px;\r\n  height: 300px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst MovingButton = styled(LevelButton)`\r\n  position: absolute;\r\n  animation: ${props => props.motion === 'circle' \r\n    ? css`${circleMotion} 5s linear infinite`\r\n    : props.motion === 'figureEight' \r\n    ? css`${figureEightMotion} 5s ease-in-out infinite`\r\n    : 'none'};\r\n`;\r\n\r\nconst AvoidanceButton = styled(LevelButton)`\r\n  position: absolute;\r\n  transition: transform 0.3s ease-out;\r\n  transform: translate(\r\n    ${props => props.offsetX}px,\r\n    ${props => props.offsetY}px\r\n  );\r\n  animation: ${css`${wobbleMotion} 1s ease-in-out infinite`};\r\n`;\r\n\r\nconst ChaseButton = ({ variant = 'circle', targetLevel, children }) => {\r\n  const [mousePos, setMousePos] = useState({ x: 0, y: 0 });\r\n  const [buttonPos, setButtonPos] = useState({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    if (variant !== 'avoid') return;\r\n\r\n    const handleMouseMove = (e) => {\r\n      const container = document.getElementById('chase-container');\r\n      if (!container) return;\r\n\r\n      const rect = container.getBoundingClientRect();\r\n      const x = e.clientX - rect.left - rect.width / 2;\r\n      const y = e.clientY - rect.top - rect.height / 2;\r\n      setMousePos({ x, y });\r\n\r\n      // Calculate new button position (avoiding mouse)\r\n      const angle = Math.atan2(y, x);\r\n      const distance = Math.min(Math.hypot(x, y), 100);\r\n      const newX = -Math.cos(angle) * distance;\r\n      const newY = -Math.sin(angle) * distance;\r\n\r\n      setButtonPos({ x: newX, y: newY });\r\n    };\r\n\r\n    document.addEventListener('mousemove', handleMouseMove);\r\n    return () => document.removeEventListener('mousemove', handleMouseMove);\r\n  }, [variant]);\r\n\r\n  if (variant === 'avoid') {\r\n    return (\r\n      <ButtonContainer id=\"chase-container\">\r\n        <AvoidanceButton\r\n          targetLevel={targetLevel}\r\n          offsetX={buttonPos.x}\r\n          offsetY={buttonPos.y}\r\n        >\r\n          {children}\r\n        </AvoidanceButton>\r\n      </ButtonContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ButtonContainer id=\"chase-container\">\r\n      <MovingButton\r\n        targetLevel={targetLevel}\r\n        motion={variant}\r\n      >\r\n        {children}\r\n      </MovingButton>\r\n    </ButtonContainer>\r\n  );\r\n};\r\n\r\nexport default ChaseButton; ","const TROLL_STATE_VECTORS = {\r\n  annoyance: {\r\n    why: +15,\r\n    how: +5,\r\n    what: +10,\r\n    impossible: +20\r\n  },\r\n  scientific_interest: {\r\n    why: +10,\r\n    how: +20,\r\n    what: -5,\r\n    impossible: -15\r\n  },\r\n  mockery: {\r\n    why: -10,\r\n    how: -5,\r\n    what: +15,\r\n    impossible: +5\r\n  },\r\n  ego: {\r\n    why: -15,\r\n    how: +5,\r\n    what: -5,\r\n    impossible: -20\r\n  },\r\n  topic_depth: {\r\n    why: +15,\r\n    how: +20,\r\n    what: -10,\r\n    impossible: -5\r\n  }\r\n};\r\n\r\nconst TROLL_RESPONSES = {\r\n  prefix: {\r\n    high_annoyance: [\r\n      \"ARGH, MY HEAD HURTS!\",\r\n      \"I'LL SMASH YOU WITH MY BRAIN!\",\r\n      \"YOUR WORDS MAKE MY HEAD ACHE!\",\r\n      \"STOP MAKING ME THINK!\",\r\n      \"MY BRAIN IS BOILING!\"\r\n    ],\r\n    high_scientific: [\r\n      \"Let me think...\",\r\n      \"My brain tells me...\",\r\n      \"After careful study...\",\r\n      \"My research shows...\",\r\n      \"I calculated that...\"\r\n    ],\r\n    high_mockery: [\r\n      \"Hah, tiny brain...\",\r\n      \"Watch this genius...\",\r\n      \"Your head empty...\",\r\n      \"So simple minded...\",\r\n      \"How cute...\"\r\n    ],\r\n    high_ego: [\r\n      \"My brain is huge!\",\r\n      \"Witness my genius!\",\r\n      \"I know everything!\",\r\n      \"My mind is superior!\",\r\n      \"Bow to my intellect!\"\r\n    ],\r\n    neutral: [\r\n      \"Listen up...\",\r\n      \"Think about it...\",\r\n      \"Here's the thing...\",\r\n      \"Let me tell you...\",\r\n      \"Get this...\"\r\n    ]\r\n  },\r\n\r\n  subjects: {\r\n    brain: [\r\n      \"my head\",\r\n      \"my brain\",\r\n      \"my mind\",\r\n      \"my thoughts\",\r\n      \"my genius\",\r\n      \"my intellect\",\r\n      \"my wisdom\",\r\n      \"my knowledge\",\r\n      \"my thinking\",\r\n      \"my understanding\"\r\n    ],\r\n    dimension: [\r\n      \"space\",\r\n      \"time\",\r\n      \"reality\",\r\n      \"universe\",\r\n      \"dimension\",\r\n      \"existence\",\r\n      \"cosmos\",\r\n      \"world\",\r\n      \"everything\",\r\n      \"nothing\"\r\n    ],\r\n    knowledge: [\r\n      \"truth\",\r\n      \"secret\",\r\n      \"wisdom\",\r\n      \"fact\",\r\n      \"answer\",\r\n      \"knowledge\",\r\n      \"idea\",\r\n      \"thought\",\r\n      \"theory\",\r\n      \"solution\"\r\n    ]\r\n  },\r\n\r\n  verbs: {\r\n    mystical: [\r\n      \"sees through\",\r\n      \"knows about\",\r\n      \"understands\",\r\n      \"reveals\",\r\n      \"shows\"\r\n    ],\r\n    scientific: [\r\n      \"proves\",\r\n      \"explains\",\r\n      \"demonstrates\",\r\n      \"calculates\",\r\n      \"measures\"\r\n    ],\r\n    aggressive: [\r\n      \"crushes\",\r\n      \"smashes\",\r\n      \"breaks\",\r\n      \"destroys\",\r\n      \"pulverizes\"\r\n    ]\r\n  },\r\n\r\n  objects: {\r\n    cosmic: [\r\n      \"everything\",\r\n      \"the universe\",\r\n      \"all existence\",\r\n      \"reality itself\",\r\n      \"all dimensions\",\r\n      \"infinite space\",\r\n      \"endless time\",\r\n      \"all possibilities\",\r\n      \"the cosmos\",\r\n      \"creation\"\r\n    ],\r\n    scientific: [\r\n      \"the problem\",\r\n      \"the solution\",\r\n      \"the equation\",\r\n      \"the theory\",\r\n      \"the proof\",\r\n      \"the evidence\",\r\n      \"the result\",\r\n      \"the calculation\",\r\n      \"the experiment\",\r\n      \"the conclusion\"\r\n    ],\r\n    mystical: [\r\n      \"the truth\",\r\n      \"the mystery\",\r\n      \"the secret\",\r\n      \"the answer\",\r\n      \"the meaning\",\r\n      \"the purpose\",\r\n      \"the wisdom\",\r\n      \"the knowledge\",\r\n      \"the understanding\",\r\n      \"the revelation\"\r\n    ]\r\n  }\r\n};\r\n\r\nconst generateStateVector = () => ({\r\n  annoyance: 50,\r\n  scientific: 50,\r\n  mockery: 50,\r\n  ego: 50,\r\n  topic_depth: 50,\r\n  consistency: 50,\r\n  creativity: 50,\r\n  defensiveness: 30,\r\n  topic_fixation: 70\r\n});\r\n\r\nconst RESPONSE_VECTORS = {\r\n  \"why\": {\r\n    annoyance: +15,\r\n    scientific: +5,\r\n    mockery: -10,\r\n    ego: -15,\r\n    topic_depth: +20,\r\n    consistency: -5,\r\n    defensiveness: +25,\r\n    topic_fixation: -15\r\n  },\r\n  \"how\": {\r\n    annoyance: +5,\r\n    scientific: +20,\r\n    mockery: -5,\r\n    ego: +10,\r\n    topic_depth: +15,\r\n    consistency: +10,\r\n    creativity: -10,\r\n    defensiveness: +15,\r\n    topic_fixation: +5\r\n  },\r\n  \"what\": {\r\n    annoyance: +10,\r\n    scientific: -5,\r\n    mockery: +15,\r\n    ego: -5,\r\n    topic_depth: -10,\r\n    consistency: 0,\r\n    creativity: +15,\r\n    defensiveness: +10,\r\n    topic_fixation: -5\r\n  },\r\n  \"impossible\": {\r\n    annoyance: +20,\r\n    scientific: -15,\r\n    mockery: +10,\r\n    ego: -20,\r\n    topic_depth: -5,\r\n    consistency: -15,\r\n    creativity: +20,\r\n    defensiveness: +30,\r\n    topic_fixation: -20\r\n  },\r\n  \"interesting\": {\r\n    annoyance: -15,\r\n    scientific: +10,\r\n    mockery: -10,\r\n    ego: +5,\r\n    topic_depth: +10,\r\n    consistency: +5,\r\n    creativity: +5,\r\n    defensiveness: -20,\r\n    topic_fixation: -10\r\n  },\r\n  \"continue\": {\r\n    annoyance: -10,\r\n    scientific: +5,\r\n    mockery: -5,\r\n    ego: +10,\r\n    topic_depth: +15,\r\n    consistency: +10,\r\n    creativity: 0,\r\n    defensiveness: -15,\r\n    topic_fixation: +15\r\n  }\r\n};\r\n\r\nconst getResponseStyle = (stateVector) => {\r\n  // Default to neutral prefix if no conditions are met\r\n  let prefix = TROLL_RESPONSES.prefix.neutral;\r\n  \r\n  // Add missing prefix states\r\n  if (!TROLL_RESPONSES.prefix.high_defensive) {\r\n    TROLL_RESPONSES.prefix.high_defensive = [\r\n      \"DON'T JUDGE ME!\",\r\n      \"I'M NOT WRONG!\",\r\n      \"LEAVE ME ALONE!\",\r\n      \"STOP ATTACKING ME!\",\r\n      \"YOU DON'T UNDERSTAND!\"\r\n    ];\r\n  }\r\n\r\n  if (!TROLL_RESPONSES.prefix.calming_down) {\r\n    TROLL_RESPONSES.prefix.calming_down = [\r\n      \"Maybe you're right...\",\r\n      \"I see your point...\",\r\n      \"That makes sense...\",\r\n      \"I understand now...\",\r\n      \"Fair enough...\"\r\n    ];\r\n  }\r\n\r\n  // Check states in order of priority\r\n  if (stateVector.defensiveness > 75) {\r\n    prefix = TROLL_RESPONSES.prefix.high_defensive;\r\n  } else if (stateVector.annoyance < 30 && stateVector.topic_fixation < 40) {\r\n    prefix = TROLL_RESPONSES.prefix.calming_down;\r\n  } else if (stateVector.annoyance > 75) {\r\n    prefix = TROLL_RESPONSES.prefix.high_annoyance;\r\n  } else if (stateVector.scientific > 75) {\r\n    prefix = TROLL_RESPONSES.prefix.high_scientific;\r\n  } else if (stateVector.mockery > 75) {\r\n    prefix = TROLL_RESPONSES.prefix.high_mockery;\r\n  } else if (stateVector.ego > 75) {\r\n    prefix = TROLL_RESPONSES.prefix.high_ego;\r\n  }\r\n\r\n  // Get verb style based on state with default fallback\r\n  let verbs = TROLL_RESPONSES.verbs.mystical;\r\n  if (stateVector.scientific > 65) verbs = TROLL_RESPONSES.verbs.scientific;\r\n  if (stateVector.annoyance > 75) verbs = TROLL_RESPONSES.verbs.aggressive;\r\n\r\n  // Get subject category with default fallback\r\n  let subjects = TROLL_RESPONSES.subjects.brain;\r\n  if (stateVector.topic_depth > 70) subjects = TROLL_RESPONSES.subjects.dimension;\r\n  if (stateVector.creativity > 70) subjects = TROLL_RESPONSES.subjects.knowledge;\r\n\r\n  // Get object category with default fallback\r\n  let objects = TROLL_RESPONSES.objects.scientific;\r\n  if (stateVector.consistency < 40) objects = TROLL_RESPONSES.objects.mystical;\r\n  if (stateVector.ego > 70) objects = TROLL_RESPONSES.objects.cosmic;\r\n\r\n  return { prefix, verbs, subjects, objects };\r\n};\r\n\r\nconst updateStateVector = (currentVector, response) => {\r\n  const changes = RESPONSE_VECTORS[response];\r\n  const newVector = { ...currentVector };\r\n  \r\n  Object.keys(changes).forEach(key => {\r\n    newVector[key] = Math.max(0, Math.min(100, newVector[key] + changes[key]));\r\n  });\r\n\r\n  return newVector;\r\n};\r\n\r\nconst VALID_RESPONSES = [\"why\", \"how\", \"what\", \"impossible\", \"continue\", \"interesting\"];\r\n\r\nconst generateResponse = (responseStyle) => {\r\n  const { prefix, verbs, subjects, objects } = responseStyle;\r\n  \r\n  const selectedPrefix = prefix[Math.floor(Math.random() * prefix.length)];\r\n  const selectedVerb = verbs[Math.floor(Math.random() * verbs.length)];\r\n  const selectedSubject = subjects[Math.floor(Math.random() * subjects.length)];\r\n  const selectedObject = objects[Math.floor(Math.random() * objects.length)];\r\n\r\n  return `${selectedPrefix} The ${selectedSubject} ${selectedVerb} ${selectedObject}!`;\r\n};\r\n\r\n// Export everything as a single object\r\nexport {\r\n  TROLL_RESPONSES,\r\n  TROLL_STATE_VECTORS,\r\n  RESPONSE_VECTORS,\r\n  VALID_RESPONSES,\r\n  generateStateVector,\r\n  generateResponse,\r\n  getResponseStyle,\r\n  updateStateVector\r\n};","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Card } from 'react-bootstrap';\r\nimport { \r\n  TROLL_MOODS, \r\n  generateResponse, \r\n  getNextState,\r\n  VALID_RESPONSES,\r\n  generateStateVector,\r\n  updateStateVector,\r\n  getResponseStyle,\r\n  RESPONSE_VECTORS,\r\n  TROLL_RESPONSES \r\n} from './ArgumentLogic';\r\n\r\nconst Container = styled.div`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n`;\r\n\r\nconst TrollContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  background: ${props => props.mood === 'ANGRY' ? '#ffebee' : \r\n    props.mood === 'SCIENTIFIC' ? '#e3f2fd' :\r\n    props.mood === 'MOCKING' ? '#fff3e0' :\r\n    props.mood === 'DEFENSIVE' ? '#e8f5e9' : '#f5f5f5'};\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  transition: background 0.3s ease;\r\n`;\r\n\r\nconst TrollEmoji = styled.div`\r\n  font-size: 40px;\r\n  margin-right: 15px;\r\n  transform: ${props => props.mood === 'ANGRY' ? 'scale(1.2)' : \r\n    props.mood === 'MOCKING' ? 'rotate(-10deg)' :\r\n    props.mood === 'DEFENSIVE' ? 'translateY(-2px)' : 'none'};\r\n  transition: transform 0.3s ease;\r\n`;\r\n\r\nconst DialogueBox = styled.div`\r\n  background: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  border: 1px solid #ddd;\r\n  margin-bottom: 20px;\r\n  font-family: monospace;\r\n  font-size: 1.1rem;\r\n  min-height: 80px;\r\n`;\r\n\r\nconst ResponseButton = styled.button`\r\n  background: white;\r\n  border: 1px solid #ddd;\r\n  padding: 8px 16px;\r\n  margin: 5px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n\r\n  &:hover {\r\n    background: #f0f0f0;\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst UndoButton = styled.button`\r\n  background: white;\r\n  border: 1px solid #ddd;\r\n  padding: 8px 16px;\r\n  margin: 5px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n\r\n  &:hover {\r\n    background: #f0f0f0;\r\n    transform: translateY(-2px);\r\n  }\r\n`;\r\n\r\nconst ResponseSection = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst StateIndicators = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst ArgumentSimulator = () => {\r\n  const [stateVector, setStateVector] = useState(generateStateVector());\r\n  const [history, setHistory] = useState([]);\r\n  \r\n  const handleResponse = (response) => {\r\n    const newVector = updateStateVector(stateVector, response);\r\n    setHistory([...history, stateVector]);\r\n    setStateVector(newVector);\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (history.length === 0) return;\r\n    const previousState = history[history.length - 1];\r\n    setStateVector(previousState);\r\n    setHistory(history.slice(0, -1));\r\n  };\r\n\r\n  const responseStyle = getResponseStyle(stateVector);\r\n  const trollResponse = generateResponse(responseStyle);\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Card.Body>\r\n          <TrollContainer stateVector={stateVector}>\r\n            <TrollEmoji stateVector={stateVector}>🧌</TrollEmoji>\r\n            <StateIndicators vector={stateVector} />\r\n          </TrollContainer>\r\n\r\n          <DialogueBox>\r\n            {trollResponse}\r\n          </DialogueBox>\r\n\r\n          <ResponseSection>\r\n            {VALID_RESPONSES.map(response => (\r\n              <ResponseButton\r\n                key={response}\r\n                onClick={() => handleResponse(response)}\r\n                disabled={stateVector.consistency < 10}\r\n              >\r\n                {response}\r\n              </ResponseButton>\r\n            ))}\r\n            <UndoButton onClick={handleUndo} disabled={history.length === 0}>\r\n              Undo\r\n            </UndoButton>\r\n          </ResponseSection>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ArgumentSimulator; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setJesterLocation } from '../../store/slices/jesterSlice';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst JesterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  padding: 1rem;\r\n  border-radius: 8px;\r\n  margin: 1rem 0;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst JesterEmoji = styled.span`\r\n  font-size: 2rem;\r\n  animation: float 2s ease-in-out infinite;\r\n\r\n  @keyframes float {\r\n    0%, 100% { transform: translateY(0); }\r\n    50% { transform: translateY(-10px); }\r\n  }\r\n`;\r\n\r\nconst JesterText = styled.div`\r\n  flex: 1;\r\n  font-style: italic;\r\n  color: #666;\r\n`;\r\n\r\nconst JESTER_LOCATIONS = {\r\n  '0': {\r\n    nextLocation: '1',\r\n    message: \"Welcome! Let me show you around this peculiar place...\"\r\n  }\r\n};\r\n\r\nconst Jester = ({ currentLevel }) => {\r\n  const dispatch = useDispatch();\r\n  const jesterLocation = useSelector(state => state.jester.currentLocation);\r\n\r\n  if (jesterLocation !== currentLevel) {\r\n    return null;\r\n  }\r\n\r\n  const handleTravel = () => {\r\n    const nextLocation = JESTER_LOCATIONS[jesterLocation].nextLocation;\r\n    dispatch(setJesterLocation(nextLocation));\r\n  };\r\n\r\n  return (\r\n    <JesterContainer>\r\n      <JesterEmoji>🃏</JesterEmoji>\r\n      <JesterText>\r\n        {JESTER_LOCATIONS[jesterLocation].message}\r\n      </JesterText>\r\n      <Button \r\n        variant=\"outline-primary\" \r\n        onClick={handleTravel}\r\n        size=\"sm\"\r\n      >\r\n        *poof*\r\n      </Button>\r\n    </JesterContainer>\r\n  );\r\n};\r\n\r\nexport default Jester; ","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToBookshelf, removeFromBookshelf, addCardToBox, addToWallet } from '../../store/slices/inventorySlice';\r\nimport { unequipItem, equipItem } from '../../store/slices/inventorySlice';\r\nimport ConfirmationModal from '../UI/ConfirmationModal';\r\nimport ItemRenderer from '../Items/ItemRenderer';\r\n\r\nconst BookshelfContainer = styled.div`\r\n  width: 340px;\r\n  height: 380px;\r\n  background: linear-gradient(45deg, #8b4513, #a0522d);\r\n  border-radius: 15px;\r\n  padding: 20px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ShelfRow = styled.div`\r\n  flex: 1;\r\n  background: linear-gradient(90deg, #5d4037, #4e342e);\r\n  border-radius: 8px;\r\n  padding: 12px;\r\n  display: flex;\r\n  gap: 12px;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  position: relative;\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst ShelfSlot = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  background: transparent;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: ${props => props.canInteract ? 'pointer' : 'default'};\r\n  transition: all 0.2s ease;\r\n  padding: 6px;\r\n\r\n  &:hover {\r\n    transform: ${props => props.canInteract ? 'translateY(-2px)' : 'none'};\r\n    box-shadow: ${props => props.canInteract ? '0 4px 8px rgba(0, 0, 0, 0.1)' : 'none'};\r\n  }\r\n`;\r\n\r\nconst EmptySlot = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  border: 3px dashed rgba(255, 255, 255, 0.2);\r\n  border-radius: 6px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: rgba(255, 255, 255, 0.3);\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n  background: rgba(255, 255, 255, 0.4);\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst Bookshelf = () => {\r\n  const dispatch = useDispatch();\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const shelfItems = useSelector(state => state.inventory.bookshelf);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n\r\n  const handleSlotClick = (index, e) => {\r\n    const isRightClick = e?.type === 'contextmenu';\r\n    if (isRightClick) {\r\n      e.preventDefault();\r\n    }\r\n    const itemInSlot = shelfItems[index];\r\n    /*\r\n    if (itemInSlot && !equippedItem) {\r\n      // Pick up item from shelf\r\n      if (itemInSlot.type === 'card-box') {\r\n        // Preserve collected cards when moving card box\r\n        const boxWithCards = {\r\n          ...itemInSlot,\r\n          collectedCards: itemInSlot.collectedCards || {}\r\n        };\r\n        dispatch(equipItem(boxWithCards));\r\n      } else {\r\n        dispatch(equipItem(itemInSlot));\r\n      }\r\n      dispatch(removeFromBookshelf({ index }));\r\n    } else */ if (equippedItem && !itemInSlot) {\r\n      // Place item in empty slot\r\n      dispatch(addToBookshelf({ item: equippedItem, index }));\r\n      dispatch(unequipItem());\r\n    } /* else if (equippedItem && itemInSlot) {\r\n      // Handle card and card box interactions\r\n      if (equippedItem.type === 'card' && itemInSlot.type === 'card-box') {\r\n        dispatch(addCardToBox({ cardId: equippedItem.id }));\r\n        dispatch(unequipItem());\r\n      } else if (equippedItem.type === 'card-box' && itemInSlot.type === 'card') {\r\n        const boxWithCard = {\r\n          ...equippedItem,\r\n          collectedCards: { \r\n            ...equippedItem.collectedCards,\r\n            [itemInSlot.id]: true \r\n          }\r\n        };\r\n        dispatch(removeFromBookshelf({ index }));\r\n        dispatch(equipItem(boxWithCard));\r\n      }\r\n    }*/\r\n    /*\r\n    if (itemInSlot) {\r\n        if (!equippedItem) {\r\n            dispatch(equipItem(itemInSlot));\r\n            dispatch(removeFromBookshelf({ index }));\r\n        } else if (equippedItem.type === 'currency' && itemInSlot.type === 'wallet') {\r\n            dispatch(addToWallet({ value: equippedItem.value }));\r\n            dispatch(removeFromBookshelf({ index }));\r\n        } else if (equippedItem.type === 'card-box' && itemInSlot.type === 'card') {\r\n            dispatch(addCardToBox({ cardId: equippedItem.id }));\r\n            dispatch(removeFromBookshelf({ index }));\r\n        } else if (equippedItem.type === 'wallet' && itemInSlot.type === 'currency') {\r\n            dispatch(addToWallet({ value: itemInSlot.value }));\r\n            dispatch(removeFromBookshelf({ index }));\r\n        } else if (equippedItem.type === 'card' && itemInSlot.type === 'card-box') {\r\n            dispatch(addCardToBox({ cardId: equippedItem.id }));\r\n            dispatch(removeFromBookshelf({ index }));\r\n        }\r\n    }*/\r\n  };\r\n\r\n  return (\r\n    <BookshelfContainer>\r\n      {[0, 1, 2].map(row => (\r\n        <ShelfRow key={row}>\r\n          {[0, 1, 2].map(col => {\r\n            const index = row * 3 + col;\r\n            return (\r\n              <ShelfSlot \r\n                key={col} \r\n                onClick={(e) => handleSlotClick(index, e)}\r\n                canInteract={!shelfItems[index]}>\r\n                {shelfItems[index] ? (\r\n                  <ItemRenderer item={shelfItems[index]} isStorage={true} forceAvailable={true} />\r\n                ) : (\r\n                  <EmptySlot>Empty</EmptySlot>\r\n                )}\r\n              </ShelfSlot>\r\n            )}\r\n          )}\r\n        </ShelfRow>\r\n      ))}\r\n    </BookshelfContainer>\r\n  );\r\n};\r\n\r\nexport default Bookshelf; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Card } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentLevel } from '../../store';\r\nimport HighlightableText from '../UI/HighlightableText';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport ChangeMachineButton from '../UI/ChangeMachineButton';\r\nimport GamblingMachine from '../UI/GamblingMachine';\r\nimport CollectibleWallet from '../Items/CollectableWallet';\r\nimport ChaseButton from '../UI/ChaseButton';\r\nimport AchievementShrine from '../UI/AchievementShrine';\r\nimport CollectableEncyclopedia from '../Items/CollectableEncyclopedia';\r\nimport ArgumentSimulator from '../Games/ArgumentSimulator';\r\nimport Jester from '../Characters/Jester';\r\nimport CollectableCardBox from '../Items/CollectableCardBox';\r\nimport CollectableCard from '../Items/CollectableCard';\r\nimport FlowerPot from '../UI/FlowerPot';\r\nimport Diamond from '../Items/CollectableDiamond';\r\nimport BlackHole from '../Items/CollectableBlackHole';\r\nimport Scale from '../Storage/Scale';\r\nimport Bookshelf from '../Storage/Bookshelf';\r\nimport CollectableCoinBill from '../Items/CollectableCoinBill';\r\nimport CollectableKey from '../Items/CollectableKey';\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  \r\n  > * {\r\n    margin: 20px 0;\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  backdrop-filter: blur(10px);\r\n  border: 2px solid rgba(0, 0, 0, 0.1);\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nconst LevelDemo = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <StyledCard>\r\n      <LevelButton \r\n        targetLevel={0}\r\n        variant=\"primary\"\r\n      >\r\n        Start Game\r\n      </LevelButton>\r\n        <Card.Body>\r\n          <Card.Title as=\"h2\" className=\"mb-4\">This is the demo level.</Card.Title>\r\n          <Card.Text>\r\n            If you made it here, you've seriously broken the game, congratulations!\r\n          </Card.Text>\r\n          <Card.Text>\r\n            Here stands a neat puzzle game. Press keys to reach next stages. \r\n          </Card.Text>\r\n          <Card.Text>\r\n           Many stages seem easy to beat. Some parts matter more than others.\r\n          </Card.Text>\r\n          <Card.Text>\r\n            The game teaches each method as shown to you, no need to make random attempts or locate secret clues.\r\n            <ul>\r\n              <li>Watch each stage well</li>\r\n              <li>Make use of your tools at hand</li>\r\n              <li>Ponder beyond the box, then back</li>\r\n            </ul>\r\n          </Card.Text>\r\n          <HighlightableText \r\n            text={\r\n              \"0123456789\"\r\n            }\r\n            allowTextPickup={true}\r\n            sourceId=\"unique-source-id\"\r\n          /> \r\n          <Diamond />\r\n          <BlackHole />\r\n          <Scale />\r\n          <Bookshelf />\r\n          <GamblingMachine />\r\n          <CollectibleWallet />\r\n           <ChaseButton targetLevel={4} variant=\"circle\">\r\n            Catch Me \r\n           </ChaseButton>\r\n          <AchievementShrine />\r\n          <AchievementShrine maximumCount={20} requiredCount={10} />\r\n          <ArgumentSimulator />\r\n          <CollectableEncyclopedia />\r\n          <ChangeMachineButton />\r\n          <Jester currentLevel=\"0\" />\r\n          <CollectableCardBox />\r\n          <CollectableCard cardId=\"ace-spades\" suit=\"spades\" value=\"A\" />\r\n          <CollectableCard cardId=\"ace-hearts\" suit=\"hearts\" value=\"A\" />\r\n          <CollectableCard cardId=\"ace-diamonds\" suit=\"diamonds\" value=\"A\" />\r\n          <CollectableCard cardId=\"ace-clubs\" suit=\"clubs\" value=\"A\" />\r\n\r\n          <FlowerPot />\r\n          <CollectableCoinBill value={25} id=\"25-coin\" />\r\n          <CollectableKey />\r\n        </Card.Body>\r\n      </StyledCard>\r\n      \r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default LevelDemo; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card } from 'react-bootstrap';\r\nimport allAchievements from '../../data/achievements';\r\nimport LevelButton from './LevelButton';\r\nimport debugConfig from '../../config/debug';\r\n\r\nconst ShrineContainer = styled.div`\r\n  width: 100%;\r\n  margin: 2rem auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(10px);\r\n  border: 2px solid rgba(0, 0, 0, 0.1);\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n  \r\n  ${props => props.isMaxShrine && `\r\n    background: rgba(70, 0, 70, 0.1);\r\n    border: 2px solid purple;\r\n  `}\r\n  \r\n  ${props => props.isComplete && !props.isMaxShrine && `\r\n    background: rgba(255, 215, 0, 0.1);\r\n    border-color: gold;\r\n  `}\r\n\r\n  ${props => props.isOverLimit && `\r\n    background: rgba(255, 0, 0, 0.1);\r\n    border-color: red;\r\n  `}\r\n`;\r\n\r\nconst ShrineSymbol = styled.div`\r\n  font-size: 3rem;\r\n  margin: 1rem 0;\r\n  color: ${props => {\r\n    if (props.isMaxShrine) return 'purple';\r\n    if (props.isOverLimit) return '#ff0000';\r\n    if (props.isComplete) return 'gold';\r\n    return '#666';\r\n  }};\r\n`;\r\n\r\nconst ProgressText = styled.div`\r\n  color: ${props => props.isOverLimit ? 'red' : 'inherit'};\r\n  font-weight: ${props => props.isOverLimit ? 'bold' : 'normal'};\r\n`;\r\n\r\nconst AchievementShrine = ({ \r\n  requiredCount = null,\r\n  maximumCount = null,\r\n  children,\r\n  overLimitMessage = \"Too many achievements! You must prestige to access this content.\"\r\n}) => {\r\n  const unlockedAchievements = useSelector(state => state.achievements.achievements);\r\n  const achievementCount = Object.keys(unlockedAchievements).length;\r\n  \r\n  const isMaxShrine = maximumCount !== null;\r\n  const isOverLimit = isMaxShrine && achievementCount > maximumCount;\r\n  const hasRequiredAchievements = !isMaxShrine && (\r\n    debugConfig.isDebugMode && debugConfig.debugFeatures.unlockAllShrines ? \r\n    true : achievementCount >= requiredCount\r\n  );\r\n  \r\n  const isAccessible = isMaxShrine ? !isOverLimit : hasRequiredAchievements;\r\n\r\n  return (\r\n    <ShrineContainer>\r\n      <StyledCard isComplete={isAccessible} isOverLimit={isOverLimit} isMaxShrine={isMaxShrine}>\r\n        <Card.Body>\r\n          <ShrineSymbol \r\n            isComplete={isAccessible} \r\n            isOverLimit={isOverLimit}\r\n            isMaxShrine={isMaxShrine}\r\n          >\r\n            {isMaxShrine ? '🔮' : (isAccessible ? '🔓' : '🔒')}\r\n          </ShrineSymbol>\r\n          \r\n          <Card.Title>\r\n            {isMaxShrine ? 'Prestige Shrine' : 'Achievement Shrine'}\r\n          </Card.Title>\r\n          \r\n          <ProgressText isOverLimit={isOverLimit}>\r\n            {isMaxShrine ? (\r\n              <>Current: {achievementCount} / Maximum: {maximumCount}</>\r\n            ) : (\r\n              <>Progress: {achievementCount} / {requiredCount}</>\r\n            )}\r\n          </ProgressText>\r\n          \r\n          {isMaxShrine ? (\r\n            isOverLimit ? (\r\n              <Card.Text className=\"text-danger\">\r\n                {overLimitMessage}\r\n              </Card.Text>\r\n            ) : (\r\n              <Card.Text>\r\n                {children}\r\n              </Card.Text>\r\n            )\r\n          ) : (\r\n            !hasRequiredAchievements ? (\r\n              <Card.Text>\r\n                Return when you have unlocked at least {requiredCount} achievements...\r\n              </Card.Text>\r\n            ) : (\r\n              <Card.Text>\r\n                {children}\r\n              </Card.Text>\r\n            )\r\n          )}\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </ShrineContainer>\r\n  );\r\n};\r\n\r\nexport default AchievementShrine;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { plantSeed, removePlant } from '../../store/slices/flowerSlice';\r\nimport { Card, Button, Modal, ProgressBar } from 'react-bootstrap';\r\nimport flowerTypes from '../../data/flowerTypes';\r\nimport { equipItem } from '../../store/slices/inventorySlice';\r\n\r\nconst PotContainer = styled.div`\r\n  text-align: center;\r\n  margin: 2rem 0;\r\n  padding: 1rem;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst FlowerDisplay = styled.div`\r\n  font-size: 3rem;\r\n  margin: 1rem 0;\r\n  transition: all 0.3s ease;\r\n  cursor: ${props => props.clickable ? 'pointer' : 'default'};\r\n  \r\n  &:hover {\r\n    transform: ${props => props.clickable ? 'scale(1.1)' : 'none'};\r\n  }\r\n`;\r\n\r\nconst FlowerMessage = styled.div`\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n  margin: 1rem 0;\r\n  font-style: italic;\r\n`;\r\n\r\nconst ProgressContainer = styled.div`\r\n  margin: 1rem 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst getFlowerStage = (growthLevel, flowerType) => {\r\n  if (!flowerType) return null;\r\n  const stages = flowerTypes[flowerType].stages;\r\n  const levels = Object.keys(stages).map(Number).sort((a, b) => a - b);\r\n  \r\n  for (let i = levels.length - 1; i >= 0; i--) {\r\n    if (growthLevel >= levels[i]) {\r\n      return stages[levels[i]];\r\n    }\r\n  }\r\n  return stages[0];\r\n};\r\n\r\nconst getFlowerMessage = (growthLevel, flowerType) => {\r\n  if (!flowerType) return \"An empty pot... ready for something special to grow.\";\r\n  \r\n  const messages = flowerTypes[flowerType].messages;\r\n  const levels = Object.keys(messages).map(Number).sort((a, b) => a - b);\r\n  \r\n  for (let i = levels.length - 1; i >= 0; i--) {\r\n    if (growthLevel >= levels[i]) {\r\n      return messages[levels[i]];\r\n    }\r\n  }\r\n  return messages[0];\r\n};\r\n\r\nconst getNextStageLevel = (currentLevel, flowerType) => {\r\n  if (!flowerType) return 0;\r\n  const stages = Object.keys(flowerTypes[flowerType].stages)\r\n    .map(Number)\r\n    .sort((a, b) => a - b);\r\n  \r\n  for (const level of stages) {\r\n    if (level > currentLevel) {\r\n      return level;\r\n    }\r\n  }\r\n  return stages[stages.length - 1];\r\n};\r\n\r\nconst getProgressPercentage = (growthLevel, flowerType) => {\r\n  if (!flowerType) return 0;\r\n  const currentLevel = growthLevel;\r\n  const nextLevel = getNextStageLevel(currentLevel, flowerType);\r\n  const prevLevel = Math.max(0, ...Object.keys(flowerTypes[flowerType].stages)\r\n    .map(Number)\r\n    .filter(level => level <= currentLevel));\r\n  \r\n  const progress = currentLevel - prevLevel;\r\n  const total = nextLevel - prevLevel;\r\n  return Math.min((progress / total) * 100, 100);\r\n};\r\n\r\nconst FlowerPot = () => {\r\n  const dispatch = useDispatch();\r\n  const { hasPlant, growthLevel, flowerType } = useSelector(state => state.flower);\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [showPickupWarning, setShowPickupWarning] = useState(false);\r\n  const [pendingPickup, setPendingPickup] = useState(false);\r\n\r\n  const getMaxGrowthLevel = () => {\r\n    if (!flowerType) return 0;\r\n    const stages = Object.keys(flowerTypes[flowerType].stages).map(Number);\r\n    return Math.max(...stages);\r\n  };\r\n\r\n  const getProgressPercentage = () => {\r\n    const maxLevel = getMaxGrowthLevel();\r\n    return Math.min((growthLevel / maxLevel) * 100, 100);\r\n  };\r\n\r\n  const handlePlantClick = () => {\r\n    if (hasPlant) {\r\n      setShowConfirm(true);\r\n    } else if (equippedItem?.type === 'flower') {\r\n      dispatch(plantSeed());\r\n    } else {\r\n      dispatch(plantSeed());\r\n    }\r\n  };\r\n\r\n  const handleFlowerClick = () => {\r\n    if (!hasPlant) return;\r\n    setShowPickupWarning(true);\r\n  };\r\n\r\n  const handleConfirmPickup = () => {\r\n    const stages = Object.keys(flowerTypes[flowerType].stages).map(Number).sort((a, b) => a - b);\r\n    let currentStage = 0;\r\n    for (let stage of stages) {\r\n      if (growthLevel >= stage) {\r\n        currentStage = stage;\r\n      }\r\n    }\r\n    \r\n    const flowerItem = {\r\n      type: 'flower',\r\n      flowerType,\r\n      growthLevel,\r\n      stage: getFlowerStage(growthLevel, flowerType),\r\n      name: `${flowerType.charAt(0).toUpperCase() + flowerType.slice(1)} (Growth: ${growthLevel})`,\r\n      weight: flowerTypes[flowerType].weights[currentStage]\r\n    };\r\n    \r\n    dispatch(equipItem(flowerItem));\r\n    dispatch(removePlant());\r\n    setShowPickupWarning(false);\r\n  };\r\n\r\n  return (\r\n    <PotContainer>\r\n      <FlowerDisplay \r\n        clickable={hasPlant} \r\n        onClick={handleFlowerClick}\r\n      >\r\n        {hasPlant ? getFlowerStage(growthLevel, flowerType) : null}\r\n      </FlowerDisplay>\r\n      \r\n      {hasPlant && (\r\n        <ProgressContainer>\r\n          <div style={{ marginBottom: '0.5rem', fontSize: '0.8rem', color: '#666' }}>Growth</div>\r\n          <ProgressBar \r\n            now={getProgressPercentage()} \r\n            variant=\"success\"\r\n          />\r\n        </ProgressContainer>\r\n      )}\r\n      \r\n      <FlowerMessage>\r\n        {hasPlant ? getFlowerMessage(growthLevel, flowerType) : \"An empty pot... ready for something special to grow.\"}\r\n      </FlowerMessage>\r\n\r\n      <Button \r\n        variant={hasPlant ? \"outline-danger\" : \"outline-success\"}\r\n        onClick={handlePlantClick}\r\n        size=\"sm\"\r\n      >\r\n        {hasPlant ? 'Plant New Seed' : 'Plant Seed'}\r\n      </Button>\r\n\r\n      <Modal show={showConfirm} onHide={() => setShowConfirm(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Replace Current Plant?</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to remove the current plant and start fresh?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowConfirm(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={() => {\r\n            dispatch(removePlant());\r\n            dispatch(plantSeed());\r\n            setShowConfirm(false);\r\n          }}>\r\n            Replace Plant\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={showPickupWarning} onHide={() => setShowPickupWarning(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Pick Up Flower?</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Warning: Once you pick up the flower, you cannot put it back in the pot. You'll need to plant a new seed to grow another flower.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowPickupWarning(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleConfirmPickup}>\r\n            Pick Up Flower\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </PotContainer>\r\n  );\r\n};\r\n\r\nexport default FlowerPot; ","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;"],"names":["fallAnimation","keyframes","floatAnimation","BUTTON_COLORS","common_blue","bg","border","common_green","common_red","common_orange","common_teal","common_pink","uncommon","rare","epic","legendary","MachineContainer","styled","div","GlassDome","ButtonsContainer","FloatingButton","CollectibleLevelButton","props","Math","random","rarity","startsWith","Base","CoinSlot","Chute","ButtonDisplay","falling","isCollectable","InsertButton","button","FloatingButtonMemo","React","_ref","value","style","_jsx","children","GamblingMachine","dispatch","useDispatch","currentButton","setCurrentButton","useState","isAnimating","setIsAnimating","buttonInChute","setButtonInChute","walletDenominations","useSelector","state","inventory","equippedItem","hasWallet","type","hasQuarters","dummyButtons","variant","weight","getRarityForValue","commonColors","floor","length","renderFloatingButtons","useMemo","buttons","i","randomButton","position","left","top","push","_jsxs","onClick","handleInsert","equipItem","removeFromWallet","amount","newButton","generateButton","rand","setTimeout","disabled","circleMotion","figureEightMotion","wobbleMotion","ButtonContainer","MovingButton","LevelButton","motion","css","AvoidanceButton","offsetX","offsetY","targetLevel","mousePos","setMousePos","x","y","buttonPos","setButtonPos","useEffect","handleMouseMove","e","container","document","getElementById","rect","getBoundingClientRect","clientX","width","clientY","height","angle","atan2","distance","min","hypot","newX","cos","newY","sin","addEventListener","removeEventListener","id","TROLL_RESPONSES","prefix","high_annoyance","high_scientific","high_mockery","high_ego","neutral","subjects","brain","dimension","knowledge","verbs","mystical","scientific","aggressive","objects","cosmic","RESPONSE_VECTORS","annoyance","mockery","ego","topic_depth","consistency","defensiveness","topic_fixation","creativity","VALID_RESPONSES","Container","TrollContainer","mood","TrollEmoji","DialogueBox","ResponseButton","UndoButton","ResponseSection","StateIndicators","ArgumentSimulator","stateVector","setStateVector","history","setHistory","handleResponse","response","newVector","updateStateVector","currentVector","changes","Object","keys","forEach","key","max","responseStyle","high_defensive","calming_down","getResponseStyle","trollResponse","selectedPrefix","selectedVerb","generateResponse","Card","Body","vector","map","handleUndo","previousState","slice","JesterContainer","JesterEmoji","span","JesterText","JESTER_LOCATIONS","nextLocation","message","currentLevel","jesterLocation","jester","currentLocation","Button","handleTravel","setJesterLocation","size","BookshelfContainer","ShelfRow","ShelfSlot","canInteract","EmptySlot","Bookshelf","shelfItems","bookshelf","showConfirmModal","setShowConfirmModal","selectedSlot","setSelectedSlot","row","col","index","handleSlotClick","preventDefault","itemInSlot","addToBookshelf","item","unequipItem","ItemRenderer","isStorage","forceAvailable","StyledContainer","StyledCard","LevelDemo","Title","as","className","Text","HighlightableText","text","allowTextPickup","sourceId","Diamond","BlackHole","Scale","CollectibleWallet","ChaseButton","AchievementShrine","maximumCount","requiredCount","CollectableEncyclopedia","ChangeMachineButton","Jester","CollectableCardBox","CollectableCard","cardId","suit","FlowerPot","CollectableCoinBill","CollectableKey","ShrineContainer","isMaxShrine","isComplete","isOverLimit","ShrineSymbol","ProgressText","overLimitMessage","unlockedAchievements","achievements","achievementCount","hasRequiredAchievements","debugConfig","isDebugMode","debugFeatures","unlockAllShrines","isAccessible","_Fragment","PotContainer","FlowerDisplay","clickable","FlowerMessage","ProgressContainer","getFlowerStage","growthLevel","flowerType","stages","flowerTypes","levels","Number","sort","a","b","getFlowerMessage","messages","hasPlant","flower","showConfirm","setShowConfirm","showPickupWarning","setShowPickupWarning","pendingPickup","setPendingPickup","handleFlowerClick","marginBottom","fontSize","color","ProgressBar","now","getProgressPercentage","maxLevel","getMaxGrowthLevel","handlePlantClick","plantSeed","Modal","show","onHide","Header","closeButton","Footer","removePlant","handleConfirmPickup","currentStage","stage","flowerItem","name","charAt","toUpperCase","weights","func","child","getPercentage","percentage","round","renderProgressBar","ref","label","visuallyHidden","striped","animated","bsPrefix","role","classNames","_ref2","isChild","rest","useBootstrapPrefix","wrapperProps","cloneElement","displayName"],"sourceRoot":""}