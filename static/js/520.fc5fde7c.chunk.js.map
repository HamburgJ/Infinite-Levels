{"version":3,"file":"static/js/520.fc5fde7c.chunk.js","mappings":"kKAEO,MAAMA,EAAUC,EAAAA,EAAS;;;;;;;;;;;;;EAenBC,EAAQD,EAAAA,EAAS;;;;;;;;;;EAYjBE,EAAaF,EAAAA,EAAS;;;;;;;;;;;;;EAetBG,EAAeH,EAAAA,EAAS;;;;;;;;;EAWxBI,EAAmBJ,EAAAA,EAAS;;;;;;;;;;;;;EAe5BK,EAAiBC,EAAAA,GAAOC,GAAG;;;gBAGxBC,GACRA,EAAMC,mBACD,yCACCD,EAAME,0CACNF,EAAME,aAAe,+BACrBF,EAAME,aAAe,yBAG3BF,EAAMG,WACD,4CAEiB,MAAtBH,EAAME,aACD,+BAA+BF,EAAME,gCAAgCF,EAAME,2BAE7E;;;eAIIF,GAASA,EAAMI,QAAU,aAAe;;;;;;;;;;;;QAY/CJ,GAASA,EAAMG,WACb,sBACA;QACFH,GAASA,EAAMG,WACb,sBACA;;iBAEOH,GAASA,EAAMC,mBACxBI,EAAAA,EAAG,GAAGd;WACHG;WACAE,6BACHS,EAAAA,EAAG,GAAGd;WACHG;;;;;;;;;;QAUHM,GAASA,EAAMG,WACb,qBACA;;;iBAGOR;;;EAKJW,EAAiBR,EAAAA,GAAOC,GAAG;;;;;;;;eAQzBC,GAASA,EAAMI,QAAU,aAAe;;EAI1CG,EAAiBT,EAAAA,GAAOC,GAAG;;;;gBAIxBC,GAASA,EAAMG,WACzB,8CACA;;;eAGSV;;;;eAIAO,GAASA,EAAMQ,QAAU,gBAAkB;EAG7CC,EAAaX,EAAAA,GAAOC,GAAG;WACzBC,GAASA,EAAMG,WAAa,qBAAuB;;;;;yFC3J9D,MAyBA,EAzB8BO,KAE1BC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACjB,EAAAA,GAAc,KACfc,EAAAA,EAAAA,MAACL,EAAAA,GAAc,CAAAO,SAAA,EACbC,EAAAA,EAAAA,KAACP,EAAAA,GAAc,CAACJ,YAAY,EAAKU,SAAC,aAClCC,EAAAA,EAAAA,KAACL,EAAAA,GAAU,CAACN,YAAY,EAAKU,SAAC,qEAG9BC,EAAAA,EAAAA,KAACL,EAAAA,GAAU,CAACN,YAAY,EAAKU,SAAC,qEAG9BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BF,UAC5CC,EAAAA,EAAAA,KAACE,EAAAA,EAAW,CACVC,YAAa,EACbC,QAAQ,eAAcL,SACvB,6B","sources":["components/Levels/InfinityLevelStyles.js","components/Levels/LevelNegativeInfinity.js"],"sourcesContent":["import styled, { keyframes, css } from 'styled-components';\r\n\r\nexport const shimmer = keyframes`\r\n  0% {\r\n    background-position: -1000px 1000px;\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    background-position: 1000px 1000px;\r\n    transform: scale(1.2);\r\n  }\r\n  100% {\r\n    background-position: -1000px 1000px;\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nexport const float = keyframes`\r\n  0% {\r\n    transform: translateY(0px);\r\n  }\r\n  50% {\r\n    transform: translateY(-20px);\r\n  }\r\n  100% {\r\n    transform: translateY(0px);\r\n  }\r\n`;\r\n\r\nexport const refraction = keyframes`\r\n  0% {\r\n    filter: hue-rotate(0deg) blur(2px);\r\n    transform: scale(1.02);\r\n  }\r\n  50% {\r\n    filter: hue-rotate(45deg) blur(3px);\r\n    transform: scale(1);\r\n  }\r\n  100% {\r\n    filter: hue-rotate(0deg) blur(2px);\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nexport const gaussianWarp = keyframes`\r\n  0% {\r\n    transform: translate(-10%, -10%) scale(1.01) rotate(0deg);\r\n    filter: blur(40px);\r\n  }\r\n  100% {\r\n    transform: translate(-10%, -10%) scale(1.01) rotate(0deg);\r\n    filter: blur(40px);\r\n  }\r\n`;\r\n\r\nexport const dimensionalShift = keyframes`\r\n  0% {\r\n    transform: rotate3d(1, 1, 1, 0deg);\r\n    filter: hue-rotate(0deg);\r\n  }\r\n  50% {\r\n    transform: rotate3d(1, 1, 1, 180deg);\r\n    filter: hue-rotate(180deg);\r\n  }\r\n  100% {\r\n    transform: rotate3d(1, 1, 1, 360deg);\r\n    filter: hue-rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const PageBackground = styled.div`\r\n  position: fixed;\r\n  inset: 0;\r\n  background: ${props => {\r\n    if (props.complexCombination) {\r\n      return `linear-gradient(145deg, \r\n        hsl(${props.complexAngle}, 70%, 20%), \r\n        hsl(${props.complexAngle + 45}, 70%, 40%),\r\n        hsl(${props.complexAngle + 90}, 70%, 20%)\r\n      )`;\r\n    }\r\n    if (props.isNegative) {\r\n      return 'linear-gradient(145deg, #000000, #1a1a1a)';\r\n    }\r\n    if (props.complexAngle != null) {\r\n      return `linear-gradient(145deg, hsl(${props.complexAngle}, 70%, 20%), hsl(${props.complexAngle}, 70%, 40%))`;\r\n    }\r\n    return 'linear-gradient(145deg, #000000, #1a1a1a)';\r\n  }};\r\n  overflow: hidden;\r\n  perspective: 1000px;\r\n  transform: ${props => props.flipped ? 'scaleY(-1)' : 'none'};\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    inset: -200%;\r\n    width: 500%;\r\n    height: 500%;\r\n    background: repeating-linear-gradient(\r\n      45deg,\r\n      transparent,\r\n      transparent 200px,\r\n      ${props => props.isNegative \r\n        ? 'rgba(0, 0, 0, 0.03)'\r\n        : 'rgba(255, 255, 255, 0.03)'} 200px,\r\n      ${props => props.isNegative\r\n        ? 'rgba(0, 0, 0, 0.03)'\r\n        : 'rgba(255, 255, 255, 0.03)'} 400px\r\n    );\r\n    animation: ${props => props.complexCombination \r\n      ? css`${shimmer} 20s linear infinite,\r\n         ${refraction} 8s ease-in-out infinite,\r\n         ${dimensionalShift} 15s ease-in-out infinite`\r\n      : css`${shimmer} 20s linear infinite,\r\n         ${refraction} 8s ease-in-out infinite`};\r\n    mix-blend-mode: screen;\r\n  }\r\n\r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    inset: 0;\r\n    background: radial-gradient(\r\n      circle at center,\r\n      ${props => props.isNegative \r\n        ? 'rgba(0, 0, 0, 0.1)'\r\n        : 'rgba(255, 255, 255, 0.1)'} 0%,\r\n      transparent 70%\r\n    );\r\n    animation: ${gaussianWarp} 10s ease-in-out infinite;\r\n    mix-blend-mode: screen;\r\n  }\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  position: fixed;\r\n  inset: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n  transform: ${props => props.flipped ? 'scaleY(-1)' : 'none'};\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const InfinitySymbol = styled.div`\r\n  font-size: min(15vw, 8rem);\r\n  font-weight: 300;\r\n  text-align: center;\r\n  background: ${props => props.isNegative\r\n    ? 'linear-gradient(135deg, #000 0%, #666 100%)'\r\n    : 'linear-gradient(135deg, #fff 0%, #666 100%)'};\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  animation: ${float} 3s ease-in-out infinite;\r\n  margin: 0 0 2rem;\r\n  display: inline-block;\r\n  will-change: transform;\r\n  transform: ${props => props.rotated ? 'rotate(90deg)' : 'none'};\r\n`;\r\n\r\nexport const StyledText = styled.div`\r\n  color: ${props => props.isNegative ? 'rgba(0, 0, 0, 0.8)' : 'rgba(255, 255, 255, 0.8)'};\r\n  font-size: clamp(1rem, 2.5vw, 1.2rem);\r\n  text-align: center;\r\n  margin: 1rem 0;\r\n  max-width: 600px;\r\n`;\r\n\r\n\r\n","import React from 'react';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport {\r\n  PageBackground,\r\n  ContentWrapper,\r\n  InfinitySymbol,\r\n  StyledText\r\n} from './InfinityLevelStyles';\r\n\r\nconst LevelNegativeInfinity = () => {\r\n  return (\r\n    <>\r\n      <PageBackground/>\r\n      <ContentWrapper>\r\n        <InfinitySymbol isNegative={true}>-âˆž</InfinitySymbol>\r\n        <StyledText isNegative={true}>\r\n          You've reached negative infinity. Here, everything is inverted.\r\n        </StyledText>\r\n        <StyledText isNegative={true}>\r\n          The void stretches endlessly upward, defying the natural order.\r\n        </StyledText>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <LevelButton \r\n            targetLevel={0}\r\n            variant=\"outline-dark\"\r\n          >\r\n            Return to Reality\r\n          </LevelButton>\r\n        </div>\r\n      </ContentWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LevelNegativeInfinity; "],"names":["shimmer","keyframes","float","refraction","gaussianWarp","dimensionalShift","PageBackground","styled","div","props","complexCombination","complexAngle","isNegative","flipped","css","ContentWrapper","InfinitySymbol","rotated","StyledText","LevelNegativeInfinity","_jsxs","_Fragment","children","_jsx","className","LevelButton","targetLevel","variant"],"sourceRoot":""}