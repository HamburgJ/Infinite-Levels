{"version":3,"file":"static/js/7570.a6ade94c.chunk.js","mappings":"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","sources":["components/Levels/Level7.js","components/Storage/Scale.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","components/UI/NestedAccordion.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentLevel } from '../../store';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport NestedAccordion from '../UI/NestedAccordion';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport { LevelContainer, StyledCard, CenteredContainer } from './styles/CommonLevelStyles';\r\nimport { FaTrophy } from 'react-icons/fa';\r\nimport Scale from '../Storage/Scale';\r\nimport CollectableCoinBill from '../Items/CollectableCoinBill';\r\n\r\nconst CoinsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst Level7 = () => {\r\n  const { unlockAchievement } = useAchievements();\r\n\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard>\r\n        <Card.Body>\r\n          <Card.Title>Basic Traveling Techniques</Card.Title>\r\n          <Card.Text>\r\n            Be on the lookout for buttons hidden <span style={{ fontStyle: 'italic' }}>in plain sight</span>.\r\n            Anything which <span style={{ fontStyle: 'italic' }}>contains a number</span> is could be a button!\r\n          </Card.Text>\r\n          <Card.Text>\r\n            Take look at these coins, for instance. They might not look like they're buttons, but they are!\r\n          </Card.Text>\r\n          <CoinsContainer>\r\n            <CollectableCoinBill value={5} id=\"initial-5c\" />\r\n            <CollectableCoinBill value={1} id=\"initial-1c\" />\r\n            <CollectableCoinBill value={1} id=\"initial-1c2\" />\r\n          </CoinsContainer>\r\n          <Card.Text>\r\n            And here's a scale. Its screen is a secret button too!\r\n          </Card.Text>\r\n          <CenteredContainer>\r\n            <Scale />\r\n          </CenteredContainer>\r\n\r\n          <CenteredContainer>\r\n            <LevelButton targetLevel={4}>Level 4</LevelButton>\r\n          </CenteredContainer>\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level7; ","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToScale, removeFromScale, addCardToBox, addToWallet } from '../../store/slices/inventorySlice';\r\nimport { unequipItem, equipItem } from '../../store/slices/inventorySlice';\r\nimport ConfirmationModal from '../UI/ConfirmationModal';\r\nimport ItemRenderer from '../Items/ItemRenderer';\r\nimport cards from '../../data/cards';\r\nimport { setCurrentLevel } from '../../store/slices/gameSlice';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport LevelButton from '../UI/LevelButton';\r\n\r\n\r\nconst EmptySlot = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  border: 3px dashed #666;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  background: rgba(255, 255, 255, 0.4);\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n`;\r\n\r\nconst ScaleContainer = styled.div`\r\n  width: 280px;\r\n  height: 380px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: linear-gradient(145deg, #2c3e50, #34495e);\r\n  border-radius: 15px;\r\n  padding: 20px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  justify-content: space-between;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n`;\r\n\r\nconst WeighingPlatform = styled.div`\r\n  width: 240px;\r\n  height: 240px;\r\n  background: linear-gradient(135deg, #95a5a6, #bdc3c7);\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  width: 70px;\r\n  height: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\n\r\nconst Scale = () => {\r\n  const dispatch = useDispatch();\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const scaleItem = useSelector(state => state.inventory.scale);\r\n  const walletDenominations = useSelector(state => state.inventory.walletDenominations);\r\n  const collectedCards = useSelector(state => state.inventory.collectedCards);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const { unlockAchievement } = useAchievements();\r\n\r\n  const ITEM_WEIGHTS = {\r\n    // Base items\r\n    'key': 50,\r\n    'levelButton': 42,\r\n    'book': 300,\r\n    'wallet': 150, // Base weight, contents added separately\r\n    'encyclopedia': 500,\r\n    'card-box': 200, // Base weight, contents added separately\r\n    'card': {\r\n      'normal': 10,\r\n      'gold-shiny': 50,\r\n      'diamond': 100,\r\n      'dark-holographic': 5\r\n    },\r\n    'currency': {\r\n      1: 2.5,    // Penny\r\n      5: 5,      // Nickel\r\n      10: 2.268, // Dime\r\n      25: 5.67,  // Quarter\r\n      500: 1,    // $5 bill\r\n      1000: 1,   // $10 bill\r\n      2000: 1,   // $20 bill\r\n      5000: 1,   // $50 bill\r\n      10000: 1   // $100 bill\r\n    },\r\n    'text': (length) => Math.max(1, length * 0.5),\r\n    'diamond': 3.52,\r\n    'black-hole': Number.MAX_SAFE_INTEGER\r\n  };\r\n\r\n  const getCardBoxWeight = (cardBoxContents) => {\r\n    let weight = ITEM_WEIGHTS['card-box'];\r\n    \r\n    // Add weight for each card in the box\r\n    Object.entries(cardBoxContents).forEach(([cardId, count]) => {\r\n      if (count > 0) {\r\n        const card = cards[cardId];\r\n        const cardWeight = ITEM_WEIGHTS.card[card.rarity || 'normal'];\r\n        weight += cardWeight * count;\r\n      }\r\n    });\r\n    \r\n    return weight;\r\n  };\r\n\r\n  const getWalletWeight = (denominations) => {\r\n    let weight = ITEM_WEIGHTS.wallet;\r\n    \r\n    // Add weight for each denomination\r\n    Object.entries(denominations).forEach(([value, count]) => {\r\n      if (count > 0) {\r\n        weight += ITEM_WEIGHTS.currency[parseInt(value)] * count;\r\n      }\r\n    });\r\n    \r\n    return weight;\r\n  };\r\n\r\n  const getWeight = () => {\r\n    if (!scaleItem) return 0;\r\n\r\n    switch (scaleItem.type) {\r\n      case 'wallet':\r\n        return getWalletWeight(walletDenominations);\r\n      case 'card-box':\r\n        return getCardBoxWeight(collectedCards);\r\n      case 'card':\r\n        return ITEM_WEIGHTS.card[scaleItem.rarity || 'normal'];\r\n      case 'text':\r\n        return ITEM_WEIGHTS.text(scaleItem.text.length);\r\n      case 'currency':\r\n        return ITEM_WEIGHTS.currency[scaleItem.value] || 0;\r\n      case 'black-hole':\r\n        return ITEM_WEIGHTS['black-hole'];\r\n      default:\r\n        return ITEM_WEIGHTS[scaleItem.type] || 0;\r\n    }\r\n  };\r\n\r\n  const handleScaleClick = (e) => {\r\n\r\n    e.preventDefault();\r\n    \r\n    if (equippedItem && !scaleItem) {\r\n      dispatch(addToScale({ item: equippedItem }));\r\n      dispatch(unequipItem());\r\n      return;\r\n    } \r\n\r\n    if (scaleItem) {\r\n      if (!equippedItem) {\r\n        dispatch(equipItem(scaleItem));\r\n        dispatch(removeFromScale());\r\n      } else if (equippedItem.type === 'currency' && scaleItem.type === 'wallet') {\r\n        dispatch(addToWallet({ value: equippedItem.value }));\r\n        dispatch(removeFromScale());\r\n      } else if (equippedItem.type === 'card-box' && scaleItem.type === 'card') {\r\n        dispatch(addCardToBox({ cardId: equippedItem.id }));\r\n        dispatch(removeFromScale());\r\n      } else if (equippedItem.type === 'wallet' && scaleItem.type === 'currency') {\r\n        dispatch(addToWallet({ value: scaleItem.value }));\r\n        dispatch(removeFromScale());\r\n      } else if (equippedItem.type === 'card' && scaleItem.type === 'card-box') {\r\n        dispatch(addCardToBox({ cardId: equippedItem.id }));\r\n        dispatch(removeFromScale());\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleConfirmSwap = () => {\r\n    const oldScaleItem = scaleItem;\r\n    dispatch(addToScale(equippedItem));\r\n    dispatch(equipItem(oldScaleItem));\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const handleScreenClick = (e) => {\r\n    e.stopPropagation(); // Prevent triggering the ScaleContainer click\r\n    const weight = getWeight();\r\n    dispatch(setCurrentLevel({real: Math.floor(weight), imag: 0}));\r\n    unlockAchievement('SCALE_TRAVEL');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScaleContainer >\r\n        <WeighingPlatform\r\n          onClick={(e) => handleScaleClick(e)}\r\n          onContextMenu={(e) => handleScaleClick(e)}>\r\n          <ItemContainer>\r\n            {scaleItem ? (\r\n              <ItemRenderer item={scaleItem} isStorage={true} isInventory={false} forceAvailable={true} />\r\n            ) : (\r\n              <EmptySlot>Empty</EmptySlot>\r\n            )}\r\n          </ItemContainer>\r\n        </WeighingPlatform>\r\n        <LevelButton\r\n          targetLevel={{real: Math.floor(getWeight()), imag: 0}}\r\n          onClick={handleScreenClick}\r\n          isDigitalScreen={true}\r\n        >\r\n          {getWeight().toFixed(2)}g\r\n        </LevelButton>\r\n      </ScaleContainer>\r\n\r\n      <ConfirmationModal\r\n        show={showConfirmModal}\r\n        onConfirm={handleConfirmSwap}\r\n        onCancel={() => setShowConfirmModal(false)}\r\n        message=\"Swap the equipped item with the item on the scale?\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scale; ","\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null || onSelect(eventKeyPassed, e);\n    onClick == null || onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport LevelButton from './LevelButton';\r\nimport HighlightableText from './HighlightableText';\r\n\r\nconst AccordionWrapper = styled.div`\r\n  margin: 0.5rem 0;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst StyledAccordion = styled(Accordion)`\r\n  .accordion-button:not(.collapsed) {\r\n    color: inherit;\r\n    background-color: rgba(0, 0, 0, 0.03);\r\n    box-shadow: none;\r\n  }\r\n\r\n  .accordion-button:focus {\r\n    box-shadow: none;\r\n    border-color: rgba(0, 0, 0, 0.125);\r\n  }\r\n\r\n  .accordion-button::after {\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n  }\r\n\r\n  .accordion-button:not(.collapsed)::after {\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n  }\r\n`;\r\n\r\nconst NestedAccordion = ({ data, depth = 0, path = '' }) => {\r\n  if (Array.isArray(data)) {\r\n    if (data.length === 0) {\r\n      return (\r\n        <TextWrapper>\r\n          <HighlightableText text=\"Keep searching...\" />\r\n        </TextWrapper>\r\n      );\r\n    }\r\n\r\n    if (typeof data[0] === 'string' || React.isValidElement(data[0])) {\r\n      return (\r\n        <TextWrapper>\r\n          {typeof data[0] === 'string' ? (\r\n            <HighlightableText text={data.join(' ')} />\r\n          ) : (\r\n            data[0]\r\n          )}\r\n        </TextWrapper>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <StyledAccordion alwaysOpen>\r\n        {data.map((item, index) => {\r\n          const currentPath = `${path}-${index}`;\r\n          return (\r\n            <Accordion.Item key={currentPath} eventKey={currentPath}>\r\n              <Accordion.Header />\r\n              <Accordion.Body>\r\n                <NestedAccordion data={item} depth={depth + 1} path={currentPath} />\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          );\r\n        })}\r\n      </StyledAccordion>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default NestedAccordion; "],"names":["CoinsContainer","styled","div","Level7","unlockAchievement","useAchievements","_jsx","LevelContainer","children","StyledCard","_jsxs","Card","Body","Title","Text","style","fontStyle","CollectableCoinBill","value","id","CenteredContainer","Scale","LevelButton","targetLevel","EmptySlot","ScaleContainer","WeighingPlatform","ItemContainer","dispatch","useDispatch","equippedItem","useSelector","state","inventory","scaleItem","scale","walletDenominations","collectedCards","showConfirmModal","setShowConfirmModal","useState","ITEM_WEIGHTS","length","Math","max","Number","MAX_SAFE_INTEGER","getWeight","type","denominations","weight","wallet","Object","entries","forEach","_ref2","count","currency","parseInt","getWalletWeight","cardBoxContents","_ref","cardId","card","cards","cardWeight","rarity","getCardBoxWeight","text","handleScaleClick","e","preventDefault","addToScale","item","unequipItem","addToWallet","removeFromScale","addCardToBox","equipItem","_Fragment","onClick","onContextMenu","ItemRenderer","isStorage","isInventory","forceAvailable","real","floor","imag","stopPropagation","setCurrentLevel","isDigitalScreen","toFixed","ConfirmationModal","show","onConfirm","handleConfirmSwap","oldScaleItem","onCancel","message","isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","React","displayName","AccordionCollapse","ref","as","Component","bsPrefix","className","props","useContext","AccordionContext","useBootstrapPrefix","Collapse","in","classNames","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","accordionOnClick","onSelect","alwaysOpen","eventKeyPassed","filter","k","useAccordionButton","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","Accordion","activeKey","flush","controlledProps","useUncontrolled","prefix","assign","Button","Item","Header","TextWrapper","StyledAccordion","NestedAccordion","data","depth","path","HighlightableText","join","map","index","currentPath"],"sourceRoot":""}