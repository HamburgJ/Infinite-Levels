{"version":3,"file":"static/js/740.78ebf459.chunk.js","mappings":"qPAYA,MA4FA,EA5FgBA,KACd,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,UAAUH,gBACnDI,EAAkBC,IAAuBC,EAAAA,EAAAA,WAAS,IAClDC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,MAE7CG,EAAgBA,CAACC,EAAOC,KAC5B,MAAMC,EAAY,CAChBC,KAAM,cACNC,MAAOJ,EACPC,QAASA,GAGPX,GACFQ,EAAiBI,GACjBP,GAAoB,IAEpBP,GAASiB,EAAAA,EAAAA,IAAUH,GACrB,EAcF,OACEI,EAAAA,EAAAA,MAACC,EAAAA,GAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAAAF,UACTF,EAAAA,EAAAA,MAACK,EAAAA,EAAKC,KAAI,CAAAJ,SAAA,EACRC,EAAAA,EAAAA,KAACE,EAAAA,EAAKE,MAAK,CAAAL,UACTC,EAAAA,EAAAA,KAACK,EAAAA,EAAiB,CAACC,KAAK,4BAA4BC,KAAK,cAE3DP,EAAAA,EAAAA,KAACE,EAAAA,EAAKM,KAAI,CAAAT,UACRC,EAAAA,EAAAA,KAACK,EAAAA,EAAiB,CAChBC,KAAK,+JAITT,EAAAA,EAAAA,MAAA,OAAKY,UAAU,0CAAyCV,SAAA,EACtDC,EAAAA,EAAAA,KAACU,EAAAA,EAAsB,CACrBlB,QAAQ,kBACRmB,QAASA,IAAMrB,EAAc,GAAI,mBACjCsB,WAAY/B,EAAakB,SAC1B,QAIDC,EAAAA,EAAAA,KAACU,EAAAA,EAAsB,CACrBlB,QAAQ,kBACRmB,QAASA,IAAMrB,EAAc,GAAI,mBACjCsB,WAAY/B,EAAakB,SAC1B,QAIDC,EAAAA,EAAAA,KAACU,EAAAA,EAAsB,CACrBlB,QAAQ,iBACRmB,QAASA,IAAMrB,EAAc,GAAI,kBACjCsB,WAAY/B,EAAakB,SAC1B,WAKHC,EAAAA,EAAAA,KAACa,EAAAA,EAAW,CACVC,YAAa,GACbtB,QAAQ,UACRiB,UAAU,OAAMV,SACjB,+BAMLC,EAAAA,EAAAA,KAACe,EAAAA,EAAiB,CAChBC,KAAM/B,EACNgC,UA9DoBC,KACpB9B,IACFT,GAASwC,EAAAA,EAAAA,IAAiB/B,IAC1BC,EAAiB,MACnB,EA2DI+B,SAxDmBC,KACvBhC,EAAiB,KAAK,EAwDlBiC,UAAsB,OAAZzC,QAAY,IAAZA,OAAY,EAAZA,EAAc0C,OAAQ,eAChCC,QAAQ,8FAEK,C","sources":["components/Levels/Level12.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setCurrentLevel } from '../../store';\r\nimport { equipItem, swapEquippedItem } from '../../store/slices/inventorySlice';\r\nimport { Card } from 'react-bootstrap';\r\nimport CollectableLevelButton from '../Items/CollectableLevelButton';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport ConfirmationModal from '../UI/ConfirmationModal';\r\nimport HighlightableText from '../UI/HighlightableText';\r\nimport { LevelContainer, StyledCard } from './styles/CommonLevelStyles';\r\n\r\nconst Level12 = () => {\r\n  const dispatch = useDispatch();\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [pendingButton, setPendingButton] = useState(null);\r\n\r\n  const collectButton = (level, variant) => {\r\n    const newButton = { \r\n      type: 'levelButton',\r\n      value: level,\r\n      variant: variant\r\n    };\r\n\r\n    if (equippedItem) {\r\n      setPendingButton(newButton);\r\n      setShowConfirmModal(true);\r\n    } else {\r\n      dispatch(equipItem(newButton));\r\n    }\r\n  };\r\n\r\n  const handleConfirmSwap = () => {\r\n    if (pendingButton) {\r\n      dispatch(swapEquippedItem(pendingButton));\r\n      setPendingButton(null);\r\n    }\r\n  };\r\n\r\n  const handleCancelSwap = () => {\r\n    setPendingButton(null);\r\n  };\r\n\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <HighlightableText text=\"Level 12 - Strange Realms\" size=\"medium\"/>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <HighlightableText \r\n              text=\"You can collect one level button and store it in your inventory! Click the button to store it, then click it in your inventory to travel to that level.\"\r\n            />\r\n          </Card.Text>\r\n\r\n          <div className=\"d-flex flex-wrap justify-content-center\">\r\n            <CollectableLevelButton\r\n              variant=\"outline-primary\"\r\n              onClick={() => collectButton(15, 'outline-primary')}\r\n              disabled={!!equippedItem}\r\n            >\r\n              15\r\n            </CollectableLevelButton>\r\n\r\n            <CollectableLevelButton\r\n              variant=\"outline-success\"\r\n              onClick={() => collectButton(20, 'outline-success')}\r\n              disabled={!!equippedItem}\r\n            >\r\n              20\r\n            </CollectableLevelButton>\r\n\r\n            <CollectableLevelButton\r\n              variant=\"outline-danger\"\r\n              onClick={() => collectButton(25, 'outline-danger')}\r\n              disabled={!!equippedItem}\r\n            >\r\n              25\r\n            </CollectableLevelButton>\r\n          </div>\r\n\r\n          <LevelButton \r\n            targetLevel={13}\r\n            variant=\"primary\"\r\n            className=\"mt-4\"\r\n          >\r\n            Continue to Level 13\r\n          </LevelButton>\r\n        </Card.Body>\r\n      </StyledCard>\r\n\r\n      <ConfirmationModal\r\n        show={showConfirmModal}\r\n        onConfirm={handleConfirmSwap}\r\n        onCancel={handleCancelSwap}\r\n        itemName={equippedItem?.name || 'current item'}\r\n        message=\"Picking up a new item will return your current item to its original location. Continue?\"\r\n      />\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level12; "],"names":["Level12","dispatch","useDispatch","equippedItem","useSelector","state","inventory","showConfirmModal","setShowConfirmModal","useState","pendingButton","setPendingButton","collectButton","level","variant","newButton","type","value","equipItem","_jsxs","LevelContainer","children","_jsx","StyledCard","Card","Body","Title","HighlightableText","text","size","Text","className","CollectableLevelButton","onClick","disabled","LevelButton","targetLevel","ConfirmationModal","show","onConfirm","handleConfirmSwap","swapEquippedItem","onCancel","handleCancelSwap","itemName","name","message"],"sourceRoot":""}