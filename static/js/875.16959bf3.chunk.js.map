{"version":3,"file":"static/js/875.16959bf3.chunk.js","mappings":"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","sources":["components/Levels/Level8.js","components/Storage/Scale.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","components/UI/NestedAccordion.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentLevel } from '../../store';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport NestedAccordion from '../UI/NestedAccordion';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport { LevelContainer, StyledCard, CenteredContainer } from './styles/CommonLevelStyles';\r\nimport { FaTrophy } from 'react-icons/fa';\r\nimport Scale from '../Storage/Scale';\r\nimport HighlightableText from '../UI/HighlightableText';\r\n\r\nconst Level8 = () => {\r\n\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard>\r\n        <Card.Body>\r\n          <Card.Title><HighlightableText size=\"large\" text=\"Advanced Traveling Techniques\"/></Card.Title>\r\n          <Card.Text>\r\n            <HighlightableText text=\"By now, you should know about buttons hidden in plain sight. If not, look at Level 7 again! But did you know that buttons can be created from anywhere?\"/>\r\n            </Card.Text>\r\n          \r\n          <Card.Text>\r\n            <HighlightableText text=\"Just find some text which has a number in it, highlight, and click it to travel to that level!\"/>\r\n            <HighlightableText text=\"For example, this text has a 10 in it! That's one of the levels you've already been to!\"/>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level8; ","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToScale, removeFromScale, addCardToBox } from '../../store/slices/inventorySlice';\r\nimport { unequipItem, equipItem } from '../../store/slices/inventorySlice';\r\nimport ConfirmationModal from '../UI/ConfirmationModal';\r\nimport ItemRenderer from '../Items/ItemRenderer';\r\nimport cards from '../../data/cards';\r\nimport { setCurrentLevel } from '../../store/slices/gameSlice';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\n\r\n\r\nconst EmptySlot = styled.div`\r\n  width: 80px;\r\n  height: 80px;\r\n  border: 3px dashed #666;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n  font-weight: bold;\r\n  font-size: 1rem;\r\n  background: rgba(255, 255, 255, 0.4);\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ScaleContainer = styled.div`\r\n  width: 280px;\r\n  height: 380px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: linear-gradient(145deg, #2c3e50, #34495e);\r\n  border-radius: 15px;\r\n  padding: 20px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst DigitalScreen = styled.div`\r\n  width: 240px;\r\n  height: 40px;\r\n  background: #1a1a1a;\r\n  border-radius: 8px;\r\n  margin-top: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding: 0 15px;\r\n  font-family: 'Digital', monospace;\r\n  color: #00ff00;\r\n  font-size: 24px;\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.5);\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background: #2a2a2a;\r\n  }\r\n`;\r\n\r\nconst WeighingPlatform = styled.div`\r\n  width: 240px;\r\n  height: 240px;\r\n  background: linear-gradient(135deg, #95a5a6, #bdc3c7);\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  cursor: pointer;\r\n  transition: transform 0.2s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n  }\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  width: 70px;\r\n  height: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\n\r\nconst Scale = () => {\r\n  const dispatch = useDispatch();\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const scaleItem = useSelector(state => state.inventory.scale);\r\n  const money = useSelector(state => state.inventory.money);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const { unlockAchievement } = useAchievements();\r\n\r\n  const getCardBoxWeight = (box) => {\r\n    let weight = 1; // weight of box itself\r\n    const WEIGHTS={\r\n        'normal': 1,\r\n        'gold-shiny': 10000,\r\n        'diamond': 999999999,\r\n        'dark-holographic': -0.1\r\n    }\r\n    for (const cardId in box.collectedCards) {\r\n      const card = cards[cardId];\r\n      weight += WEIGHTS[card.rarity];\r\n    }\r\n    return weight;\r\n  }\r\n\r\n  const getWalletWeight = (money) => {\r\n    // Base weight of empty wallet in grams\r\n    let weight = 150;\r\n    \r\n    // Add weight for each piece of money\r\n    money.forEach(item => {\r\n      if (item.value >= 500) {\r\n        // Paper money weighs 1g each\r\n        weight += 1;\r\n      } else {\r\n        // Coins have different weights\r\n        switch (item.value) {\r\n          case 25: weight += 6; break;  // Quarter: 5.67g\r\n          case 10: weight += 2; break; // Dime: 2.268g\r\n          case 5: weight += 5; break;      // Nickel: 5g\r\n          case 1: weight += 3; break;    // Penny: 2.5g\r\n          default: weight += 0;\r\n        }\r\n      }\r\n    });\r\n    \r\n    return weight;\r\n  };\r\n\r\n  const getWeight = () => {\r\n    switch (scaleItem?.type) {\r\n      case 'wallet':\r\n        return getWalletWeight(money);\r\n      case 'card-box': \r\n        return getCardBoxWeight(scaleItem);\r\n      case 'card': return 10;\r\n      case 'diamond': return 1;\r\n      case 'black-hole': return 1000;\r\n      case 'encyclopedia': return 50;\r\n      case 'flower':\r\n        return scaleItem.weight;\r\n      default: return 0;\r\n    }\r\n  };\r\n\r\n  const handleScaleClick = () => {\r\n    if (scaleItem && !equippedItem) {\r\n      // Pick up item from scale\r\n      if (scaleItem.type === 'card-box') {\r\n        // Preserve collected cards when moving card box\r\n        const boxWithCards = {\r\n          ...scaleItem,\r\n          collectedCards: scaleItem.collectedCards || {}\r\n        };\r\n        dispatch(equipItem(boxWithCards));\r\n      } else {\r\n        dispatch(equipItem(scaleItem));\r\n      }\r\n      dispatch(removeFromScale());\r\n    } else if (equippedItem && !scaleItem) {\r\n      // Place equipped item on scale\r\n      dispatch(addToScale(equippedItem));\r\n      dispatch(unequipItem());\r\n    } else if (equippedItem && scaleItem) {\r\n      // Handle card and card box interactions\r\n      if (equippedItem.type === 'card' && scaleItem.type === 'card-box') {\r\n        dispatch(addCardToBox({ cardId: equippedItem.id }));\r\n        dispatch(unequipItem());\r\n      } else if (equippedItem.type === 'card-box' && scaleItem.type === 'card') {\r\n        const boxWithCard = {\r\n          ...equippedItem,\r\n          collectedCards: { \r\n            ...equippedItem.collectedCards,\r\n            [scaleItem.id]: true \r\n          }\r\n        };\r\n        dispatch(removeFromScale());\r\n        dispatch(equipItem(boxWithCard));\r\n      } else {\r\n        // Show swap confirmation for non-card interactions\r\n        setShowConfirmModal(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleConfirmSwap = () => {\r\n    const oldScaleItem = scaleItem;\r\n    dispatch(addToScale(equippedItem));\r\n    dispatch(equipItem(oldScaleItem));\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const handleScreenClick = (e) => {\r\n    e.stopPropagation(); // Prevent triggering the ScaleContainer click\r\n    const weight = getWeight();\r\n    dispatch(setCurrentLevel({real: Math.floor(weight), imag: 0}));\r\n    unlockAchievement('SCALE_TRAVEL');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ScaleContainer onClick={handleScaleClick}>\r\n        <WeighingPlatform>\r\n          <ItemContainer>\r\n            {scaleItem ? (\r\n              <ItemRenderer item={scaleItem} />\r\n            ) : (\r\n              <EmptySlot>Empty</EmptySlot>\r\n            )}\r\n          </ItemContainer>\r\n        </WeighingPlatform>\r\n        <DigitalScreen onClick={handleScreenClick}>\r\n          {getWeight().toFixed(2)}g\r\n        </DigitalScreen>\r\n      </ScaleContainer>\r\n\r\n      <ConfirmationModal\r\n        show={showConfirmModal}\r\n        onConfirm={handleConfirmSwap}\r\n        onCancel={() => setShowConfirmModal(false)}\r\n        message=\"Swap the equipped item with the item on the scale?\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scale; ","\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null || onSelect(eventKeyPassed, e);\n    onClick == null || onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import React from 'react';\r\nimport { Accordion } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport LevelButton from './LevelButton';\r\nimport HighlightableText from './HighlightableText';\r\n\r\nconst AccordionWrapper = styled.div`\r\n  margin: 0.5rem 0;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst StyledAccordion = styled(Accordion)`\r\n  .accordion-button:not(.collapsed) {\r\n    color: inherit;\r\n    background-color: rgba(0, 0, 0, 0.03);\r\n    box-shadow: none;\r\n  }\r\n\r\n  .accordion-button:focus {\r\n    box-shadow: none;\r\n    border-color: rgba(0, 0, 0, 0.125);\r\n  }\r\n\r\n  .accordion-button::after {\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n  }\r\n\r\n  .accordion-button:not(.collapsed)::after {\r\n    background-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23212529'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e\");\r\n  }\r\n`;\r\n\r\nconst NestedAccordion = ({ data, depth = 0, path = '' }) => {\r\n  if (Array.isArray(data)) {\r\n    if (data.length === 0) {\r\n      return (\r\n        <TextWrapper>\r\n          <HighlightableText text=\"Keep searching...\" />\r\n        </TextWrapper>\r\n      );\r\n    }\r\n\r\n    if (typeof data[0] === 'string' || React.isValidElement(data[0])) {\r\n      return (\r\n        <TextWrapper>\r\n          {typeof data[0] === 'string' ? (\r\n            <HighlightableText text={data.join(' ')} />\r\n          ) : (\r\n            data[0]\r\n          )}\r\n        </TextWrapper>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <StyledAccordion alwaysOpen>\r\n        {data.map((item, index) => {\r\n          const currentPath = `${path}-${index}`;\r\n          return (\r\n            <Accordion.Item key={currentPath} eventKey={currentPath}>\r\n              <Accordion.Header />\r\n              <Accordion.Body>\r\n                <NestedAccordion data={item} depth={depth + 1} path={currentPath} />\r\n              </Accordion.Body>\r\n            </Accordion.Item>\r\n          );\r\n        })}\r\n      </StyledAccordion>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default NestedAccordion; "],"names":["Level8","_jsx","LevelContainer","children","StyledCard","_jsxs","Card","Body","Title","HighlightableText","size","text","Text","EmptySlot","styled","div","ScaleContainer","DigitalScreen","WeighingPlatform","ItemContainer","Scale","dispatch","useDispatch","equippedItem","useSelector","state","inventory","scaleItem","scale","money","showConfirmModal","setShowConfirmModal","useState","unlockAchievement","useAchievements","getWeight","type","weight","forEach","item","value","getWalletWeight","box","WEIGHTS","cardId","collectedCards","cards","rarity","getCardBoxWeight","_Fragment","onClick","handleScaleClick","boxWithCards","equipItem","removeFromScale","addToScale","unequipItem","addCardToBox","id","boxWithCard","ItemRenderer","e","stopPropagation","setCurrentLevel","real","Math","floor","imag","toFixed","ConfirmationModal","show","onConfirm","handleConfirmSwap","oldScaleItem","onCancel","message","isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","React","displayName","AccordionCollapse","_ref","ref","as","Component","bsPrefix","className","props","useContext","AccordionContext","useBootstrapPrefix","Collapse","in","classNames","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","accordionOnClick","onSelect","alwaysOpen","eventKeyPassed","filter","k","useAccordionButton","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","Accordion","activeKey","flush","controlledProps","useUncontrolled","prefix","Object","assign","Button","Item","Header","TextWrapper","StyledAccordion","NestedAccordion","data","depth","path","length","join","map","index","currentPath"],"sourceRoot":""}