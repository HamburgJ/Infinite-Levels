{"version":3,"file":"static/js/740.4bc307e1.chunk.js","mappings":"2OAUA,MAAMA,EAAiBC,EAAAA,GAAOC,GAAG;;;;EA+FjC,EAzFgBC,KACd,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,UAAUH,gBACnDI,EAAkBC,IAAuBC,EAAAA,EAAAA,WAAS,IAClDC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,MAE7CG,EAAgBA,CAACC,EAAOC,KAC5B,MAAMC,EAAY,CAChBC,KAAM,cACNC,MAAOJ,EACPC,QAASA,GAGPX,GACFQ,EAAiBI,GACjBP,GAAoB,IAEpBP,GAASiB,EAAAA,EAAAA,IAAUH,GACrB,EAcF,OACEI,EAAAA,EAAAA,MAACtB,EAAc,CAAAuB,SAAA,EACbC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAAAF,UACHD,EAAAA,EAAAA,MAACG,EAAAA,EAAKC,KAAI,CAAAH,SAAA,EACRC,EAAAA,EAAAA,KAACC,EAAAA,EAAKE,MAAK,CAAAJ,SAAC,sCACZC,EAAAA,EAAAA,KAACC,EAAAA,EAAKG,KAAI,CAAAL,SAAC,6JAKXD,EAAAA,EAAAA,MAAA,OAAKO,UAAU,0CAAyCN,SAAA,EACtDC,EAAAA,EAAAA,KAACM,EAAAA,EAAsB,CACrBb,QAAQ,kBACRc,QAASA,IAAMhB,EAAc,GAAI,mBACjCiB,WAAY1B,EAAaiB,SAC1B,QAIDC,EAAAA,EAAAA,KAACM,EAAAA,EAAsB,CACrBb,QAAQ,kBACRc,QAASA,IAAMhB,EAAc,GAAI,mBACjCiB,WAAY1B,EAAaiB,SAC1B,QAIDC,EAAAA,EAAAA,KAACM,EAAAA,EAAsB,CACrBb,QAAQ,iBACRc,QAASA,IAAMhB,EAAc,GAAI,kBACjCiB,WAAY1B,EAAaiB,SAC1B,WAKHC,EAAAA,EAAAA,KAACS,EAAAA,EAAW,CACVC,YAAa,GACbjB,QAAQ,UACRY,UAAU,OAAMN,SACjB,+BAMLC,EAAAA,EAAAA,KAACW,EAAAA,EAAiB,CAChBC,KAAM1B,EACN2B,UA3DoBC,KACpBzB,IACFT,GAASmC,EAAAA,EAAAA,IAAiB1B,IAC1BC,EAAiB,MACnB,EAwDI0B,SArDmBC,KACvB3B,EAAiB,KAAK,EAqDlB4B,UAAsB,OAAZpC,QAAY,IAAZA,OAAY,EAAZA,EAAcqC,OAAQ,eAChCC,QAAQ,8FAEK,C","sources":["components/Levels/Level12.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setCurrentLevel } from '../../store';\r\nimport { equipItem, swapEquippedItem } from '../../store/slices/inventorySlice';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport CollectableLevelButton from '../Items/CollectableLevelButton';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport ConfirmationModal from '../UI/ConfirmationModal';\r\n\r\nconst LevelContainer = styled.div`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n`;\r\n\r\nconst Level12 = () => {\r\n  const dispatch = useDispatch();\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [pendingButton, setPendingButton] = useState(null);\r\n\r\n  const collectButton = (level, variant) => {\r\n    const newButton = { \r\n      type: 'levelButton',\r\n      value: level,\r\n      variant: variant\r\n    };\r\n\r\n    if (equippedItem) {\r\n      setPendingButton(newButton);\r\n      setShowConfirmModal(true);\r\n    } else {\r\n      dispatch(equipItem(newButton));\r\n    }\r\n  };\r\n\r\n  const handleConfirmSwap = () => {\r\n    if (pendingButton) {\r\n      dispatch(swapEquippedItem(pendingButton));\r\n      setPendingButton(null);\r\n    }\r\n  };\r\n\r\n  const handleCancelSwap = () => {\r\n    setPendingButton(null);\r\n  };\r\n\r\n  return (\r\n    <LevelContainer>\r\n      <Card>\r\n        <Card.Body>\r\n          <Card.Title>Level 12 - The Button Collection</Card.Title>\r\n          <Card.Text>\r\n            You can collect one level button and store it in your inventory!\r\n            Click the button to store it, then click it in your inventory to travel to that level.\r\n          </Card.Text>\r\n\r\n          <div className=\"d-flex flex-wrap justify-content-center\">\r\n            <CollectableLevelButton\r\n              variant=\"outline-primary\"\r\n              onClick={() => collectButton(15, 'outline-primary')}\r\n              disabled={!!equippedItem}\r\n            >\r\n              15\r\n            </CollectableLevelButton>\r\n\r\n            <CollectableLevelButton\r\n              variant=\"outline-success\"\r\n              onClick={() => collectButton(20, 'outline-success')}\r\n              disabled={!!equippedItem}\r\n            >\r\n              20\r\n            </CollectableLevelButton>\r\n\r\n            <CollectableLevelButton\r\n              variant=\"outline-danger\"\r\n              onClick={() => collectButton(25, 'outline-danger')}\r\n              disabled={!!equippedItem}\r\n            >\r\n              25\r\n            </CollectableLevelButton>\r\n          </div>\r\n\r\n          <LevelButton \r\n            targetLevel={13}\r\n            variant=\"primary\"\r\n            className=\"mt-4\"\r\n          >\r\n            Continue to Level 13\r\n          </LevelButton>\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <ConfirmationModal\r\n        show={showConfirmModal}\r\n        onConfirm={handleConfirmSwap}\r\n        onCancel={handleCancelSwap}\r\n        itemName={equippedItem?.name || 'current item'}\r\n        message=\"Picking up a new item will return your current item to its original location. Continue?\"\r\n      />\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level12; "],"names":["LevelContainer","styled","div","Level12","dispatch","useDispatch","equippedItem","useSelector","state","inventory","showConfirmModal","setShowConfirmModal","useState","pendingButton","setPendingButton","collectButton","level","variant","newButton","type","value","equipItem","_jsxs","children","_jsx","Card","Body","Title","Text","className","CollectableLevelButton","onClick","disabled","LevelButton","targetLevel","ConfirmationModal","show","onConfirm","handleConfirmSwap","swapEquippedItem","onCancel","handleCancelSwap","itemName","name","message"],"sourceRoot":""}