{"version":3,"file":"static/js/1003.af8216d8.chunk.js","mappings":"wPASA,MAAMA,EAAiBC,EAAAA,EAAS;;;;;;;EASnBC,EAAmBC,EAAAA,GAAOC,GAAG;;;;;;MAMpCC,GAASA,EAAMC,WAAa,UAAY;MACxCD,GAASA,EAAMC,WAAa,UAAY;MACxCD,GAASA,EAAMC,WAAa,UAAY;MACxCD,GAASA,EAAMC,WAAa,UAAY;;;eAG/BN;;;EAiEf,GA5DmBC,EAAAA,EAAS;;;;EAMbM,IAAqB,IAApB,WAAED,GAAYC,GACXC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACV,EAAgB,CAACI,WAAYA,KAC9BM,EAAAA,EAAAA,KAACC,EAAAA,GAAc,CAAAF,UACfC,EAAAA,EAAAA,KAACE,EAAAA,GAAU,CAAAH,UACTF,EAAAA,EAAAA,MAACM,EAAAA,EAAKC,KAAI,CAAAL,SAAA,EACRC,EAAAA,EAAAA,KAACG,EAAAA,EAAKE,MAAK,CAACC,GAAG,KAAKC,UAAU,OAAMR,UAClCC,EAAAA,EAAAA,KAACQ,EAAAA,GAAiB,CAAAT,UAChBC,EAAAA,EAAAA,KAACS,EAAAA,EAAiB,CAChBC,KAAK,mBACLC,KAAK,SACLC,MAAM,OACNC,UAAU,SAIhBb,EAAAA,EAAAA,KAACG,EAAAA,EAAKW,KAAI,CAAAf,UACRC,EAAAA,EAAAA,KAACS,EAAAA,EAAiB,CAChBC,KAAK,2FAGTV,EAAAA,EAAAA,KAACG,EAAAA,EAAKW,KAAI,CAAAf,UACRC,EAAAA,EAAAA,KAACS,EAAAA,EAAiB,CAChBC,KAAK,qGAGTV,EAAAA,EAAAA,KAACG,EAAAA,EAAKW,KAAI,CAAAf,UACRC,EAAAA,EAAAA,KAACS,EAAAA,EAAiB,CAChBC,KAAK,2DAGTV,EAAAA,EAAAA,KAACG,EAAAA,EAAKW,KAAI,CAAAf,UACRC,EAAAA,EAAAA,KAACS,EAAAA,EAAiB,CAChBC,KAAK,sJAGTV,EAAAA,EAAAA,KAACQ,EAAAA,GAAiB,CAAAT,UAChBC,EAAAA,EAAAA,KAACe,EAAAA,EAAW,CACVC,YAAa,EACbC,QAAQ,UAASlB,SAClB,uBAON,E","sources":["components/Levels/Level0.js"],"sourcesContent":["import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport HighlightableText from '../UI/HighlightableText';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport { CenteredContainer, LevelContainer, StyledCard } from './styles/CommonLevelStyles';\r\nimport { PageBackground, shimmer, refraction } from './InfinityLevelStyles';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nconst diagonalScroll = keyframes`\r\n  0%, 100% {\r\n    background-position: 50% 100%;\r\n  }\r\n  50% {\r\n    background-position: 0 0;\r\n  }\r\n`;\r\n\r\nexport const Level0Background = styled.div`\r\n  position: fixed;\r\n  inset: 0;\r\n  perspective: 1000px;\r\n  background-image: repeating-linear-gradient(\r\n    -45deg,\r\n    ${props => props.isNegative ? '#000000' : '#f8f9fa'},\r\n    ${props => props.isNegative ? '#000000' : '#f8f9fa'} 2rem,\r\n    ${props => props.isNegative ? '#1a1a1a' : '#e9ecef'} 2rem,\r\n    ${props => props.isNegative ? '#1a1a1a' : '#e9ecef'} 4rem\r\n  );\r\n  background-size: 200% 200%;\r\n  animation: ${diagonalScroll} 20s ease-in-out infinite;\r\n\r\n  }\r\n`;\r\n\r\nconst barberpole = keyframes`\r\n  100% {\r\n    background-position: 100% 100%;\r\n  }\r\n`;\r\n\r\nconst Level0 = ({ isNegative }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <Level0Background isNegative={isNegative} />\r\n      <LevelContainer>\r\n      <StyledCard>\r\n        <Card.Body>\r\n          <Card.Title as=\"h2\" className=\"mb-4\">\r\n            <CenteredContainer>\r\n              <HighlightableText\r\n                text=\"Infinite Levels!\"\r\n                size=\"xlarge\"\r\n                color=\"#333\"\r\n                enhanced={true}\r\n              />\r\n            </CenteredContainer>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <HighlightableText\r\n              text=\"Infinite Levels! is a puzzle game about exploring an infinite collection of levels.\"\r\n            />\r\n          </Card.Text>\r\n          <Card.Text>\r\n            <HighlightableText\r\n              text=\"To proceed to a new level, press the button that displays the level number you want to go to.\"\r\n            />\r\n          </Card.Text>\r\n          <Card.Text>\r\n            <HighlightableText\r\n              text=\"Each button will take you to the level it displays.\"\r\n            />\r\n          </Card.Text>\r\n          <Card.Text>\r\n            <HighlightableText\r\n              text=\"This game is still in development! some things may be broken, and some things are not possible to do yet or not developed yet! Come back soon!\"\r\n            />\r\n          </Card.Text>\r\n          <CenteredContainer>\r\n            <LevelButton \r\n              targetLevel={1}\r\n              variant=\"primary\"\r\n            >\r\n              Level 1\r\n            </LevelButton>\r\n          </CenteredContainer>\r\n        </Card.Body>\r\n      </StyledCard>\r\n      </LevelContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Level0; "],"names":["diagonalScroll","keyframes","Level0Background","styled","div","props","isNegative","_ref","useDispatch","_jsxs","_Fragment","children","_jsx","LevelContainer","StyledCard","Card","Body","Title","as","className","CenteredContainer","HighlightableText","text","size","color","enhanced","Text","LevelButton","targetLevel","variant"],"sourceRoot":""}