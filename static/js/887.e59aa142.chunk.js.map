{"version":3,"file":"static/js/887.e59aa142.chunk.js","mappings":"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","sources":["components/Items/BaseCollectable.js","components/Items/CollectableCoinBill.js","components/Levels/Level156.js","components/UI/AchievementShrine.js","components/UI/FlowerPot.js","utils/idGenerator.js","utils/itemLocation.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { equipItem, swapEquippedItem, addCardToBox } from '../../store/slices/inventorySlice';\r\nimport ConfirmationModal from '../UI/ConfirmationModal';\r\nimport { isItemAvailable } from '../../utils/itemLocation';\r\n\r\nconst BaseCollectable = ({ \r\n  itemConfig,\r\n  onBeforeCollect,\r\n  children,\r\n  renderItem \r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const collected = !useSelector(state => isItemAvailable(state, itemConfig.id));\r\n  const [showSwapModal, setShowSwapModal] = useState(false);\r\n\r\n  const handleCollect = () => {\r\n    if (collected) return;\r\n\r\n    if (onBeforeCollect) {\r\n      const shouldContinue = onBeforeCollect(equippedItem);\r\n      if (!shouldContinue) return;\r\n    }\r\n\r\n    if (itemConfig.type === 'card' && equippedItem?.type === 'card-box') {\r\n      dispatch(addCardToBox({ cardId: itemConfig.id }));\r\n      return;\r\n    }\r\n\r\n    if (equippedItem) {\r\n      setShowSwapModal(true);\r\n    } else {\r\n      dispatch(equipItem(itemConfig));\r\n    }\r\n  };\r\n\r\n  const handleConfirmSwap = () => {\r\n    if (equippedItem?.type === 'card' && itemConfig.type === 'card-box') {\r\n      const boxWithCard = {\r\n        ...itemConfig,\r\n        collectedCards: { [equippedItem.id]: true }\r\n      };\r\n      dispatch(equipItem(boxWithCard));\r\n    } else {\r\n      dispatch(swapEquippedItem({\r\n        newItem: itemConfig\r\n      }));\r\n    }\r\n    setShowSwapModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderItem({ collected, handleCollect })}\r\n\r\n      <ConfirmationModal\r\n        show={showSwapModal}\r\n        onConfirm={handleConfirmSwap}\r\n        onCancel={() => setShowSwapModal(false)}\r\n        itemName={equippedItem?.name || 'current item'}\r\n        message={`Picking up the ${itemConfig.name} will return your ${equippedItem?.name || 'current item'} to its original location. Continue?`}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BaseCollectable; ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BaseCollectable from './BaseCollectable';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addMoneyToWallet, equipItem, removeMoneyFromWallet } from '../../store/slices/inventorySlice';\r\nimport WalletSystem from '../../systems/WalletSystem';\r\nimport { setCurrentLevel } from '../../store';\r\nimport { isItemAvailable } from '../../utils/itemLocation';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport { generateUniqueId } from '../../utils/idGenerator';\r\n\r\nconst CurrencyContainer = styled.div`\r\n  text-align: center;\r\n  margin: 2rem 0;\r\n`;\r\n\r\nconst BaseCurrency = styled.div`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  opacity: ${props => props.collected ? 0.5 : 1};\r\n  transition: transform 0.3s ease;\r\n  font-weight: bold;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst Coin = styled(BaseCurrency)`\r\n  width: ${props => props.value >= 25 ? '3rem' : '2.5rem'};\r\n  height: ${props => props.value >= 25 ? '3rem' : '2.5rem'};\r\n  border-radius: 50%;\r\n  background: ${props => {\r\n    switch (props.value) {\r\n      case 25: return 'linear-gradient(135deg, #C0C0C0, #E8E8E8)';\r\n      case 10: return 'linear-gradient(135deg, #CD7F32, #E6B17F)';\r\n      case 5: return 'linear-gradient(135deg, #CD7F32, #E6B17F)';\r\n      default: return 'linear-gradient(135deg, #CD7F32, #E6B17F)';\r\n    }\r\n  }};\r\n  border: 2px solid ${props => {\r\n    switch (props.value) {\r\n      case 25: return '#A0A0A0';\r\n      case 10: return '#8B4513';\r\n      case 5: return '#8B4513';\r\n      default: return '#8B4513';\r\n    }\r\n  }};\r\n  color: ${props => props.value >= 25 ? '#404040' : '#663300'};\r\n  font-size: ${props => props.value >= 25 ? '1.2rem' : '1rem'};\r\n`;\r\n\r\nconst Bill = styled(BaseCurrency)`\r\n  width: 4.5rem;\r\n  height: 2.5rem;\r\n  border-radius: 4px;\r\n  background: ${props => {\r\n    switch (props.value) {\r\n      case 10000: return 'linear-gradient(135deg, #849F84, #C1D9C1)';\r\n      case 5000: return 'linear-gradient(135deg, #E68A00, #FFB84D)';\r\n      case 2000: return 'linear-gradient(135deg, #008055, #00B377)';\r\n      case 1000: return 'linear-gradient(135deg, #666699, #8585AD)';\r\n      default: return 'linear-gradient(135deg, #85AD85, #B3D1B3)';\r\n    }\r\n  }};\r\n  border: 2px solid ${props => {\r\n    switch (props.value) {\r\n      case 10000: return '#5C705C';\r\n      case 5000: return '#B36B00';\r\n      case 2000: return '#004D33';\r\n      case 1000: return '#40406B';\r\n      default: return '#5C705C';\r\n    }\r\n  }};\r\n  color: #FFF;\r\n  text-shadow: 1px 1px 2px rgba(0,0,0,0.5);\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nconst CollectableCoinBill = ({ value, id }) => {\r\n  const dispatch = useDispatch();\r\n  const { unlockAchievement } = useAchievements();\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const money = useSelector(state => state.inventory.money);\r\n  const isAvailable = useSelector(state => isItemAvailable(state, id));\r\n  const coinSlots = useSelector(state => state.inventory.coinSlots);\r\n  \r\n  const slotId = id || `currency-${value}`;\r\n  const itemConfig = {\r\n    type: 'currency',\r\n    id: slotId,\r\n    name: value >= 500 ? `$${value/100} Bill` : `${value}¢ Coin`,\r\n    value\r\n  };\r\n\r\n  // Check if this slot has a coin in it\r\n  const isCollected = coinSlots[slotId] || !isAvailable;\r\n\r\n  const handleBeforeCollect = (equippedItem) => {\r\n    // If the coin is in the slot, only allow interaction when wallet is equipped\r\n    if (isCollected) {\r\n      if (equippedItem?.type === 'wallet') {\r\n        // Find a matching denomination in the wallet\r\n        const matchingMoney = money.find(m => m.value === value);\r\n        if (matchingMoney) {\r\n          dispatch(removeMoneyFromWallet({ \r\n            id: matchingMoney.id,\r\n            slotId\r\n          }));\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // If coin is not collected and wallet is equipped, add to wallet\r\n    if (equippedItem?.type === 'wallet') {\r\n      const newId = generateUniqueId('money');\r\n      dispatch(addMoneyToWallet({ \r\n        value, \r\n        id: newId,\r\n        slotId \r\n      }));\r\n      return false;\r\n    }\r\n    \r\n    // If coin is not collected and no wallet equipped, go to level\r\n    const levelValue = value >= 500 ? value / 100 : value;\r\n    unlockAchievement('COIN_TRAVEL');\r\n    dispatch(setCurrentLevel(levelValue));\r\n    return false;\r\n  };\r\n\r\n  const CurrencyComponent = value >= 500 ? Bill : Coin;\r\n  const displayValue = value >= 500 ? `$${value/100}` : `${value}¢`;\r\n\r\n  return (\r\n    <BaseCollectable\r\n      itemConfig={itemConfig}\r\n      onBeforeCollect={handleBeforeCollect}\r\n      renderItem={({ handleCollect }) => (\r\n        <CurrencyContainer>\r\n          <CurrencyComponent \r\n            collected={isCollected} \r\n            onClick={handleCollect}\r\n            value={value}\r\n          >\r\n            {displayValue}\r\n          </CurrencyComponent>\r\n        </CurrencyContainer>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CollectableCoinBill;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentLevel, markMechanicDiscovered } from '../../store';\r\nimport { Card } from 'react-bootstrap';\r\nimport LevelButton from '../UI/LevelButton';\r\nimport FlowerPot from '../UI/FlowerPot';\r\nimport { useAchievements } from '../../hooks/useAchievements';\r\nimport { LevelContainer, StyledCard, CenteredContainer } from './styles/CommonLevelStyles';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport AchievementShrine from '../UI/AchievementShrine';\r\nimport CollectableCoinBill from '../Items/CollectableCoinBill';\r\n\r\nconst Level156 = () => {\r\n\r\n  return (\r\n    <LevelContainer>\r\n      <StyledCard>\r\n        <Card.Body>\r\n          <Card.Title>Want my 2 cents?</Card.Title>\r\n          <Card.Text>\r\n           Because that's exactly how much money you must have put in the wallet to have it weigh exactly 156 grams!\r\n           Here's some real cash to fill your wallet!\r\n          </Card.Text>\r\n          <CenteredContainer>\r\n            <CollectableCoinBill value={10000} id=\"156\"/>\r\n          </CenteredContainer>\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </LevelContainer>\r\n  );\r\n};\r\n\r\nexport default Level156;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nimport { Card } from 'react-bootstrap';\r\nimport allAchievements from '../../data/achievements';\r\nimport LevelButton from './LevelButton';\r\nimport debugConfig from '../../config/debug';\r\n\r\nconst ShrineContainer = styled.div`\r\n  width: 100%;\r\n  margin: 2rem auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(10px);\r\n  border: 2px solid rgba(0, 0, 0, 0.1);\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n  \r\n  ${props => props.isComplete && `\r\n    background: rgba(255, 215, 0, 0.1);\r\n    border-color: gold;\r\n  `}\r\n`;\r\n\r\nconst ShrineSymbol = styled.div`\r\n  font-size: 3rem;\r\n  margin: 1rem 0;\r\n  color: ${props => props.isComplete ? 'gold' : '#666'};\r\n`;\r\n\r\nconst SecretContent = styled.div`\r\n  max-height: ${props => props.show ? '500px' : '0'};\r\n  opacity: ${props => props.show ? '1' : '0'};\r\n  overflow: hidden;\r\n  transition: all 0.5s ease;\r\n`;\r\n\r\nconst AchievementShrine = ({ requiredCount = 5, children }) => {\r\n  const unlockedAchievements = useSelector(state => state.achievements.achievements);\r\n  const achievementCount = Object.keys(unlockedAchievements).length;\r\n  const totalAchievements = Object.keys(allAchievements).length;\r\n  const hasRequiredAchievements = debugConfig.isDebugMode && debugConfig.debugFeatures.unlockAllShrines ? \r\n    true : achievementCount >= requiredCount;\r\n  const hasAllAchievements = achievementCount === totalAchievements;\r\n\r\n  return (\r\n    <ShrineContainer>\r\n      <StyledCard isComplete={hasAllAchievements}>\r\n        <Card.Body>\r\n          <ShrineSymbol isComplete={hasRequiredAchievements}>\r\n            {hasRequiredAchievements ? '🔓' : '🔒'}\r\n          </ShrineSymbol>\r\n          \r\n          <Card.Title>Achievement Shrine</Card.Title>\r\n          <Card.Title>{hasRequiredAchievements ? \"UNLOCKED\" : \"LOCKED\"} {achievementCount}/{requiredCount}</Card.Title>\r\n          \r\n          {!hasRequiredAchievements ? (\r\n            <Card.Text>\r\n              Return when you have unlocked at least {requiredCount} achievements...\r\n            </Card.Text>\r\n            ) : (\r\n                <Card.Text>\r\n                  {children}\r\n                </Card.Text>\r\n            )}\r\n        </Card.Body>\r\n      </StyledCard>\r\n    </ShrineContainer>\r\n  );\r\n};\r\n\r\nexport default AchievementShrine; ","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { plantSeed, removePlant } from '../../store/slices/flowerSlice';\r\nimport { Card, Button, Modal, ProgressBar } from 'react-bootstrap';\r\nimport flowerTypes from '../../data/flowerTypes';\r\nimport { equipItem } from '../../store/slices/inventorySlice';\r\n\r\nconst PotContainer = styled.div`\r\n  text-align: center;\r\n  margin: 2rem 0;\r\n  padding: 1rem;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst FlowerDisplay = styled.div`\r\n  font-size: 3rem;\r\n  margin: 1rem 0;\r\n  transition: all 0.3s ease;\r\n  cursor: ${props => props.clickable ? 'pointer' : 'default'};\r\n  \r\n  &:hover {\r\n    transform: ${props => props.clickable ? 'scale(1.1)' : 'none'};\r\n  }\r\n`;\r\n\r\nconst FlowerMessage = styled.div`\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n  margin: 1rem 0;\r\n  font-style: italic;\r\n`;\r\n\r\nconst ProgressContainer = styled.div`\r\n  margin: 1rem 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst getFlowerStage = (growthLevel, flowerType) => {\r\n  if (!flowerType) return null;\r\n  const stages = flowerTypes[flowerType].stages;\r\n  const levels = Object.keys(stages).map(Number).sort((a, b) => a - b);\r\n  \r\n  for (let i = levels.length - 1; i >= 0; i--) {\r\n    if (growthLevel >= levels[i]) {\r\n      return stages[levels[i]];\r\n    }\r\n  }\r\n  return stages[0];\r\n};\r\n\r\nconst getFlowerMessage = (growthLevel, flowerType) => {\r\n  if (!flowerType) return \"An empty pot... ready for something special to grow.\";\r\n  \r\n  const messages = flowerTypes[flowerType].messages;\r\n  const levels = Object.keys(messages).map(Number).sort((a, b) => a - b);\r\n  \r\n  for (let i = levels.length - 1; i >= 0; i--) {\r\n    if (growthLevel >= levels[i]) {\r\n      return messages[levels[i]];\r\n    }\r\n  }\r\n  return messages[0];\r\n};\r\n\r\nconst getNextStageLevel = (currentLevel, flowerType) => {\r\n  if (!flowerType) return 0;\r\n  const stages = Object.keys(flowerTypes[flowerType].stages)\r\n    .map(Number)\r\n    .sort((a, b) => a - b);\r\n  \r\n  for (const level of stages) {\r\n    if (level > currentLevel) {\r\n      return level;\r\n    }\r\n  }\r\n  return stages[stages.length - 1];\r\n};\r\n\r\nconst getProgressPercentage = (growthLevel, flowerType) => {\r\n  if (!flowerType) return 0;\r\n  const currentLevel = growthLevel;\r\n  const nextLevel = getNextStageLevel(currentLevel, flowerType);\r\n  const prevLevel = Math.max(0, ...Object.keys(flowerTypes[flowerType].stages)\r\n    .map(Number)\r\n    .filter(level => level <= currentLevel));\r\n  \r\n  const progress = currentLevel - prevLevel;\r\n  const total = nextLevel - prevLevel;\r\n  return Math.min((progress / total) * 100, 100);\r\n};\r\n\r\nconst FlowerPot = () => {\r\n  const dispatch = useDispatch();\r\n  const { hasPlant, growthLevel, flowerType } = useSelector(state => state.flower);\r\n  const equippedItem = useSelector(state => state.inventory.equippedItem);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [showPickupWarning, setShowPickupWarning] = useState(false);\r\n  const [pendingPickup, setPendingPickup] = useState(false);\r\n\r\n  const getMaxGrowthLevel = () => {\r\n    if (!flowerType) return 0;\r\n    const stages = Object.keys(flowerTypes[flowerType].stages).map(Number);\r\n    return Math.max(...stages);\r\n  };\r\n\r\n  const getProgressPercentage = () => {\r\n    const maxLevel = getMaxGrowthLevel();\r\n    return Math.min((growthLevel / maxLevel) * 100, 100);\r\n  };\r\n\r\n  const handlePlantClick = () => {\r\n    if (hasPlant) {\r\n      setShowConfirm(true);\r\n    } else if (equippedItem?.type === 'flower') {\r\n      dispatch(plantSeed());\r\n    } else {\r\n      dispatch(plantSeed());\r\n    }\r\n  };\r\n\r\n  const handleFlowerClick = () => {\r\n    if (!hasPlant) return;\r\n    setShowPickupWarning(true);\r\n  };\r\n\r\n  const handleConfirmPickup = () => {\r\n    const stages = Object.keys(flowerTypes[flowerType].stages).map(Number).sort((a, b) => a - b);\r\n    let currentStage = 0;\r\n    for (let stage of stages) {\r\n      if (growthLevel >= stage) {\r\n        currentStage = stage;\r\n      }\r\n    }\r\n    \r\n    const flowerItem = {\r\n      type: 'flower',\r\n      flowerType,\r\n      growthLevel,\r\n      stage: getFlowerStage(growthLevel, flowerType),\r\n      name: `${flowerType.charAt(0).toUpperCase() + flowerType.slice(1)} (Growth: ${growthLevel})`,\r\n      weight: flowerTypes[flowerType].weights[currentStage]\r\n    };\r\n    \r\n    dispatch(equipItem(flowerItem));\r\n    dispatch(removePlant());\r\n    setShowPickupWarning(false);\r\n  };\r\n\r\n  return (\r\n    <PotContainer>\r\n      <FlowerDisplay \r\n        clickable={hasPlant} \r\n        onClick={handleFlowerClick}\r\n      >\r\n        {hasPlant ? getFlowerStage(growthLevel, flowerType) : null}\r\n      </FlowerDisplay>\r\n      \r\n      {hasPlant && (\r\n        <ProgressContainer>\r\n          <div style={{ marginBottom: '0.5rem', fontSize: '0.8rem', color: '#666' }}>Growth</div>\r\n          <ProgressBar \r\n            now={getProgressPercentage()} \r\n            variant=\"success\"\r\n          />\r\n        </ProgressContainer>\r\n      )}\r\n      \r\n      <FlowerMessage>\r\n        {hasPlant ? getFlowerMessage(growthLevel, flowerType) : \"An empty pot... ready for something special to grow.\"}\r\n      </FlowerMessage>\r\n\r\n      <Button \r\n        variant={hasPlant ? \"outline-danger\" : \"outline-success\"}\r\n        onClick={handlePlantClick}\r\n        size=\"sm\"\r\n      >\r\n        {hasPlant ? 'Plant New Seed' : 'Plant Seed'}\r\n      </Button>\r\n\r\n      <Modal show={showConfirm} onHide={() => setShowConfirm(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Replace Current Plant?</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to remove the current plant and start fresh?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowConfirm(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={() => {\r\n            dispatch(removePlant());\r\n            dispatch(plantSeed());\r\n            setShowConfirm(false);\r\n          }}>\r\n            Replace Plant\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={showPickupWarning} onHide={() => setShowPickupWarning(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Pick Up Flower?</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Warning: Once you pick up the flower, you cannot put it back in the pot. You'll need to plant a new seed to grow another flower.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowPickupWarning(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleConfirmPickup}>\r\n            Pick Up Flower\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </PotContainer>\r\n  );\r\n};\r\n\r\nexport default FlowerPot; ","let counter = 0;\r\n\r\nexport const generateUniqueId = (prefix) => {\r\n  counter++;\r\n  return `${prefix}-${Math.random().toString(36).substr(2, 9)}-${counter}`;\r\n}; ","export const getItemLocation = (state, itemId) => {\r\n  // Check equipped item\r\n  if (state.inventory.equippedItem?.id === itemId) {\r\n    return 'equipped';\r\n  }\r\n\r\n  // Check scale\r\n  if (state.inventory.scale?.id === itemId) {\r\n    return 'scale';\r\n  }\r\n\r\n  // Check bookshelf and card boxes within it\r\n  const bookshelfIndex = state.inventory.bookshelf.findIndex(item => {\r\n    if (item?.id === itemId) return true;\r\n    if (item?.type === 'card-box' && item.collectedCards?.[itemId]) {\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  if (bookshelfIndex !== -1) {\r\n    return `bookshelf-${bookshelfIndex}`;\r\n  }\r\n\r\n  // Check if card is in equipped card box\r\n  if (state.inventory.equippedItem?.type === 'card-box' && \r\n      state.inventory.equippedItem.collectedCards?.[itemId]) {\r\n    return 'equipped-box';\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport const isItemAvailable = (state, itemId) => {\r\n  console.log(itemId, getItemLocation(state, itemId));\r\n  return getItemLocation(state, itemId) === null;\r\n}; ","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;"],"names":["_ref","itemConfig","onBeforeCollect","children","renderItem","dispatch","useDispatch","equippedItem","useSelector","state","inventory","collected","isItemAvailable","id","showSwapModal","setShowSwapModal","useState","_jsxs","_Fragment","handleCollect","type","equipItem","addCardToBox","cardId","_jsx","ConfirmationModal","show","onConfirm","handleConfirmSwap","boxWithCard","collectedCards","swapEquippedItem","newItem","onCancel","itemName","name","message","CurrencyContainer","styled","div","BaseCurrency","props","Coin","value","Bill","unlockAchievement","useAchievements","money","isAvailable","coinSlots","slotId","isCollected","CurrencyComponent","displayValue","BaseCollectable","matchingMoney","find","m","removeMoneyFromWallet","newId","generateUniqueId","addMoneyToWallet","levelValue","setCurrentLevel","_ref2","onClick","Level156","LevelContainer","StyledCard","Card","Body","Title","Text","CenteredContainer","CollectableCoinBill","ShrineContainer","isComplete","ShrineSymbol","requiredCount","unlockedAchievements","achievements","achievementCount","Object","keys","length","totalAchievements","allAchievements","hasRequiredAchievements","debugConfig","isDebugMode","debugFeatures","unlockAllShrines","hasAllAchievements","PotContainer","FlowerDisplay","clickable","FlowerMessage","ProgressContainer","getFlowerStage","growthLevel","flowerType","stages","flowerTypes","levels","map","Number","sort","a","b","i","getFlowerMessage","messages","FlowerPot","hasPlant","flower","showConfirm","setShowConfirm","showPickupWarning","setShowPickupWarning","pendingPickup","setPendingPickup","handleFlowerClick","style","marginBottom","fontSize","color","ProgressBar","now","getProgressPercentage","maxLevel","getMaxGrowthLevel","Math","max","min","variant","Button","handlePlantClick","plantSeed","size","Modal","onHide","Header","closeButton","Footer","removePlant","handleConfirmPickup","currentStage","stage","flowerItem","charAt","toUpperCase","slice","weight","weights","counter","prefix","random","toString","substr","getItemLocation","itemId","_state$inventory$equi","_state$inventory$scal","_state$inventory$equi2","_state$inventory$equi3","scale","bookshelfIndex","bookshelf","findIndex","item","_item$collectedCards","console","log","func","index","React","child","hasChildOfType","toArray","some","getPercentage","percentage","round","renderProgressBar","ref","label","visuallyHidden","striped","animated","className","bsPrefix","role","classNames","width","isChild","rest","useBootstrapPrefix","wrapperProps","cloneElement","displayName"],"sourceRoot":""}